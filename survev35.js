(async function() {
let vendorModulesUrl = "https://cdn.jsdelivr.net/gh/EatCodeSleep2/SiteLoader@main/vendor.js";
        let sharedModulesUrl = "https://cdn.jsdelivr.net/gh/EatCodeSleep2/SiteLoader@main/shared.js";

        // Import both modules dynamically
        console.log("Importing:", vendorModulesUrl);
        let vendor = await import(vendorModulesUrl);
        console.log("Vendor Module Imported:", vendor);

        console.log("Importing:", sharedModulesUrl);
        let shared = await import(sharedModulesUrl);
        console.log("Vendor Module Imported:", shared);

        // Assign variables from vendor-modules-CL-NS4Gd.js
        let {
            i: s, $: j, C: f, T: x, S: y, G: r, a: Z, b: q,
            R: M, c: E, P: h, d: R_export, B: P_export, 
            e: i, f: S_export, g: B_export, s: u, A: V
        } = vendor;

        // Assign variables from shared-Xqn1Vbd_.js
        let {
            G: w, a: L, u: t, m: e, v, C: m, c: T, P: C, E: l, b: d,
            I: D, d: G_export, M: a, e: X0, f: X1, O: X2, g: X3, h: X4,
            i: X5, j: X6, B: X7, k: X8, l: X9, A: XX, n: Xp, H: Xb,
            o: XI, T: Xj, R: Xf, S: Xx, p: Xy, D: Xg, q: XQ, J: XZ,
            r: Xq, s: XM, t: XE, W: XN, w: Xn, x: Xh, y: XR, z: XP,
            F: XA, K: XJ, U: XS, L: XB, N: Xc, Q: Xu, V: XV, X: Xz,
            Y: Xo, Z: Xw, _: XO, $: XL, a0: Xv, a1: XK, a2: Xm
        } = shared;
    k.tablet = false;
    console.log('about to call main func')
(function () {
  alert('main thing called')
  let e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) {
    return;
  }
  for (let r of document.querySelectorAll("link[rel=\"modulepreload\"]")) {
    i(r);
  }
  new MutationObserver(r => {
    for (let a of r) {
      if (a.type === "childList") {
        for (let l of a.addedNodes) {
          if (l.tagName === "LINK" && l.rel === "modulepreload") {
            i(l);
          }
        }
      }
    }
  }).observe(document, {
    childList: true,
    subtree: true
  });
  function t(r) {
    let a = {};
    if (r.integrity) {
      a.integrity = r.integrity;
    }
    if (r.referrerPolicy) {
      a.referrerPolicy = r.referrerPolicy;
    }
    if (r.crossOrigin === "use-credentials") {
      a.credentials = "include";
    } else if (r.crossOrigin === "anonymous") {
      a.credentials = "omit";
    } else {
      a.credentials = "same-origin";
    }
    return a;
  }
  function i(r) {
    if (r.ep) {
      return;
    }
    r.ep = true;
    let a = t(r);
    fetch(r.href, a);
  }
})();
console.log('main func called')
function Br() {
  return new URLSearchParams(self.location.search).has("crazygames");
}
async function Nr() {
  return new Promise(function (u, e) {
    let t = document.createElement("script");
    t.src = "https://sdk.crazygames.com/crazygames-sdk-v3.js";
    document.head.appendChild(t);
    if (Ce.phone) {
      document.getElementById("btn-hamburger").style.display = "none";
    }
    document.getElementById("crazygamesDiscord").style.display = "block";
    t.addEventListener("load", async function () {
      await window.CrazyGames.SDK.init();
      It("survev-io_728x90", 728, 90);
      setInterval(() => {
        let i = document.getElementById("start-menu-wrapper");
        if (getComputedStyle(i).display != "none") {
          It("survev-io_728x90", 728, 90);
        }
      }, 60000);
      u();
    });
    t.addEventListener("error", function () {
      console.log("CrazyGames SDK load error");
      e();
    });
  });
}
async function It(u, e, t) {
  return new Promise(async function (i, r) {
    try {
      await window.CrazyGames.SDK.banner.requestBanner({
        id: u,
        width: e,
        height: t
      });
      i();
    } catch (a) {
      console.log("Banner request error", a);
      r();
    }
  });
}
function rt(u) {
  let e = {
    adFinished: u,
    adError: u,
    adStarted: () => console.log("Start midgame ad")
  };
  window.CrazyGames.SDK.ad.requestAd("midgame", e);
}
function Bi(u) {
  let e = u.target;
  while (e && e !== document.body) {
    let t = getComputedStyle(e).overflowY;
    if (t === "auto" || t === "scroll") {
      return;
    }
    e = e.parentElement;
  }
  u.preventDefault();
}
window.addEventListener("wheel", Bi, {
  passive: false
});
window.addEventListener("touchmove", Bi, {
  passive: false
});
document.addEventListener("keydown", u => {
  if (["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight", " "].includes(u.key)) {
    let t = u.target;
    let i = ["INPUT", "TEXTAREA", "SELECT", "BUTTON"];
    if (u.key === " " && (i.includes(t.tagName) || t.isContentEditable)) {
      return;
    }
    u.preventDefault();
  }
});
let lt;
async function jr() {
  return new Promise(function (u) {
    let e = document.createElement("script");
    e.src = "https://api.gamemonetize.com/sdk.js";
    e.id = "gamemonetize-sdk";
    document.head.appendChild(e);
    document.getElementById("crazygamesDiscord").style.display = "block";
    window.SDK_OPTIONS = {
      gameId: "q9xrmuceu30pey8llzop5cr0p1p2fbx9",
      onEvent: function (t) {
        switch (t.name) {
          case "SDK_GAME_PAUSE":
            break;
          case "SDK_GAME_START":
            if (lt) {
              lt();
            }
            break;
          case "SDK_READY":
            console.log("Successfully loaded GameMonetize SDK");
            break;
        }
      }
    };
    u();
  });
}
function at(u) {
  lt = u;
  if (window.sdk && window.sdk.showBanner) {
    window.sdk.showBanner();
  } else {
    lt();
  }
}
function qr() {
  if (window !== window.parent) {
    if (new URL(document.referrer).origin.includes("gamemonetize")) {
      return true;
    }
  } else if (window.location.href.includes("gamemonetize")) {
    return true;
  }
  return false;
}
async function Fr() {
  return new Promise(function (u) {
    let e = document.createElement("script");
    e.src = "https://game-cdn.poki.com/scripts/v2/poki-sdk.js";
    document.head.appendChild(e);
    document.getElementById("crazygamesDiscord").style.display = "block";
    e.addEventListener("load", async function () {
      window.PokiSDK.init().then(() => {
        console.log("Poki SDK successfully initialized");
      }).catch(() => {
        console.log("Initialized, something went wrong, load you game anyway");
      });
      u();
    });
  });
}
function st(u) {
  window.PokiSDK.commercialBreak(() => {}).then(() => {
    u();
  });
}
function Vr() {
  return window !== window.parent && !!new URL(document.referrer).origin.includes("poki");
}
let Zr = "https://surviv.mathsiscoolfun.com";
let Ue = {
  resolveUrl: function (u) {
    return Zr + u;
  },
  resolveRoomHost: function () {
    return "surviv.mathsiscoolfun.com";
  }
};
let Ee = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (u) {
  return typeof u;
} : function (u) {
  if (u && typeof Symbol == "function" && u.letructor === Symbol && u !== Symbol.prototype) {
    return "symbol";
  } else {
    return typeof u;
  }
};
let Jt = Array.prototype.slice;
let Kt = Object.keys;
let Xr = function () {
  return Object.prototype.toString.call(arguments);
}() == "[object Arguments]";
function Wr(u) {
  return Object.prototype.toString.call(u) == "[object Arguments]";
}
function Hr(u) {
  return u && (typeof u === "undefined" ? "undefined" : Ee(u)) == "object" && typeof u.length == "number" && Object.prototype.hasOwnProperty.call(u, "callee") && !Object.prototype.propertyIsEnumerable.call(u, "callee") || false;
}
let Qt = Xr ? Wr : Hr;
let Mt = function (u, e, t) {
  t ||= {};
  if (u === e) {
    return true;
  } else if (u instanceof Date && e instanceof Date) {
    return u.getTime() === e.getTime();
  } else if (!u || !e || (typeof u === "undefined" ? "undefined" : Ee(u)) != "object" && (typeof e === "undefined" ? "undefined" : Ee(e)) != "object") {
    if (t.strict) {
      return u === e;
    } else {
      return u == e;
    }
  } else {
    return Gr(u, e, t);
  }
};
function Yt(u) {
  return u == null;
}
function ei(u) {
  return !!u && (typeof u === "undefined" ? "undefined" : Ee(u)) === "object" && typeof u.length == "number" && typeof u.copy == "function" && typeof u.slice == "function" && (!(u.length > 0) || typeof u[0] == "number");
}
function Gr(u, e, t) {
  let i;
  let r;
  if (Yt(u) || Yt(e) || u.prototype !== e.prototype) {
    return false;
  }
  if (Qt(u)) {
    if (Qt(e)) {
      u = Jt.call(u);
      e = Jt.call(e);
      return Mt(u, e, t);
    } else {
      return false;
    }
  }
  if (ei(u)) {
    if (!ei(e) || u.length !== e.length) {
      return false;
    }
    for (i = 0; i < u.length; i++) {
      if (u[i] !== e[i]) {
        return false;
      }
    }
    return true;
  }
  let a;
  let l;
  try {
    a = Kt(u);
    l = Kt(e);
  } catch {
    return false;
  }
  if (a.length != l.length) {
    return false;
  }
  a.sort();
  l.sort();
  i = a.length - 1;
  for (; i >= 0; i--) {
    if (a[i] != l[i]) {
      return false;
    }
  }
  for (i = a.length - 1; i >= 0; i--) {
    r = a[i];
    if (!Mt(u[r], e[r], t)) {
      return false;
    }
  }
  return (typeof u === "undefined" ? "undefined" : Ee(u)) === (typeof e === "undefined" ? "undefined" : Ee(e));
}
var Ni = (u => {
  u[u.New = 0] = "New";
  u[u.Confirmed = 1] = "Confirmed";
  u[u.Ackd = 2] = "Ackd";
  return u;
})(Ni || {});
let le = {
  ItemStatus: Ni,
  validate: function (u) {
    let e = function (l, s, m) {
      let d = B[s];
      if (d && d.type == l) {
        return s;
      } else {
        return m;
      }
    };
    let t = function (l, s) {
      let m = parseFloat(l);
      if (Number.isNaN(m)) {
        return s;
      } else {
        return m;
      }
    };
    let i = {
      crosshair: {
        type: "",
        color: 16777215,
        size: 1,
        stroke: 0
      },
      emotes: [],
      ...u
    };
    let r = {
      outfit: e("outfit", i.outfit, "outfitBase"),
      melee: e("melee", i.melee, "fists"),
      heal: e("heal_effect", i.heal, "heal_basic"),
      boost: e("boost_effect", i.boost, "boost_basic"),
      player_icon: e("emote", i.player_icon, ""),
      crosshair: {
        type: e("crosshair", i.crosshair.type, "crosshair_default"),
        color: parseInt(i.crosshair.color) || 16777215,
        size: t(i.crosshair.size, 1).toFixed(2),
        stroke: t(i.crosshair.stroke, 0).toFixed(2)
      },
      emotes: []
    };
    let a = R.defaultEmoteLoadout.slice();
    for (let l = 0; l < R.EmoteSlot.Count; l++) {
      let s = l < i.emotes.length ? i.emotes[l] : "";
      r.emotes.push(e("emote", s, a[l]));
    }
    return r;
  },
  defaultLoadout: function () {
    return le.validate({});
  },
  modified: function (u, e) {
    return !Mt(u, e);
  },
  getUserAvailableItems: function (u) {
    let e = [];
    let t = B.unlock_default;
    for (let i = 0; i < t.unlocks.length; i++) {
      let r = t.unlocks[i];
      e.push({
        type: r,
        source: "unlock_default",
        timeAcquired: 0,
        ackd: le.ItemStatus.Ackd
      });
    }
    for (let i = 0; i < u.length; i++) {
      e.push(u[i]);
    }
    return e;
  }
};
function Ur(u, e, t) {
  if (typeof e == "function") {
    t = e;
    e = null;
  }
  let i = {
    url: Ue.resolveUrl(u),
    type: "POST",
    timeout: 10000,
    headers: {
      "X-Requested-With": "XMLHttpRequest"
    }
  };
  if (e) {
    i.contentType = "application/json; charset=utf-8";
    i.data = JSON.stringify(e);
  }
  c.ajax(i).done(r => {
    t(null, r);
  }).fail(r => {
    t(r);
  });
}
class $r {
  letructor(e) {
    this.config = e;
    window.login = () => {
      this.login();
    };
    window.deleteAccount = () => {
      this.deleteAccount();
    };
    window.deleteItems = () => {
      this.ajaxRequest("/api/user/delete_items", {}, (t, i) => {
        this.loadProfile();
      });
    };
    window.unlock = t => {
      console.log(`Unlocking ${t}`);
      this.unlock(t);
    };
    window.setQuest = (t, i = 0) => {
      this.ajaxRequest("/api/user/set_quest", {
        questType: t,
        idx: i
      }, (r, a) => {
        this.getPass();
      });
    };
    window.refreshQuest = t => {
      this.refreshQuest(t);
    };
    window.setPassUnlock = t => {
      this.setPassUnlock(t);
    };
  }
  events = {};
  requestsInFlight = 0;
  loggingIn = false;
  loggedIn = false;
  profile = {
    linkedTwitch: false,
    linkedDiscord: false,
    usernameSet: false,
    username: "",
    slug: "",
    usernameChangeTime: 0
  };
  loadout = le.defaultLoadout();
  loadoutPriv = "";
  items = [];
  quests = [];
  questPriv = "";
  pass = {};
  ajaxRequest(e, t, i) {
    if (typeof t == "function") {
      i = t;
      t = null;
    }
    this.requestsInFlight++;
    this.emit("request", this);
    Ur(e, t, (r, a) => {
      i(r, a);
      this.requestsInFlight--;
      this.emit("request", this);
      if (this.requestsInFlight == 0) {
        this.emit("requestsComplete");
      }
    });
  }
  addEventListener(e, t) {
    this.events[e] = this.events[e] || [];
    this.events[e].push(t);
  }
  removeEventListener(e, t) {
    let i = this.events[e] || [];
    for (let r = i.length - 1; r >= 0; r--) {
      if (i[r] == t) {
        i.splice(r, 1);
      }
    }
  }
  emit(e, ...t) {
    let i = (this.events[e] || []).slice(0);
    for (let r = 0; r < i.length; r++) {
      i[r](...t);
    }
  }
  init() {
    if (this.config.get("sessionCookie")) {
      this.setSessionCookies();
    }
    this.login();
  }
  setSessionCookies() {
    this.clearSessionCookies();
    document.cookie = this.config.get("sessionCookie");
    document.cookie = `app-data=${Date.now()}`;
  }
  clearSessionCookies() {
    document.cookie = "app-sid=;expires=Thu, 01 Jan 1970 00:00:01 GMT;";
    document.cookie = "app-data=;expires=Thu, 01 Jan 1970 00:00:01 GMT;";
  }
  loginWithAccessToken(e, t, i) {
    t((r, a) => {
      if (r) {
        this.emit("error", "login_failed");
        return;
      }
      let l = i(a);
      this.ajaxRequest(`${e}?access_token=${l}`, (s, m) => {
        if (s) {
          this.emit("error", "login_failed");
        } else {
          this.config.set("sessionCookie", m.cookie);
          this.setSessionCookies();
          this.login();
        }
      });
    });
  }
  login() {
    this.loadProfile();
    this.getPass(true);
  }
  logout() {
    this.config.set("profile", null);
    this.config.set("sessionCookie", null);
    this.ajaxRequest("/api/user/logout", (e, t) => {
      window.location.reload();
    });
  }
  loadProfile() {
    this.loggingIn = !this.loggedIn;
    this.ajaxRequest("/api/user/profile", (t, i) => {
      let r = this.loggingIn;
      this.loggingIn = false;
      this.loggedIn = false;
      this.profile = {};
      this.loadoutPriv = "";
      this.items = [];
      if (t) {
        console.error("account", "load_profile_error");
      } else if (i.banned) {
        this.emit("error", "account_banned", i.reason);
      } else if (i.success) {
        this.loggedIn = true;
        this.profile = i.profile;
        this.loadoutPriv = i.loadoutPriv;
        this.items = i.items;
        let a = this.config.get("profile") || {
          slug: ""
        };
        a.slug = i.profile.slug;
        this.config.set("profile", a);
      }
      if (!this.loggedIn) {
        this.config.set("sessionCookie", null);
      }
      if (r && this.loggedIn) {
        this.emit("login", this);
      }
      this.emit("items", this.items);
    });
    let e = this.config.get("loadout");
    this.loadout = g.mergeDeep({}, le.defaultLoadout(), e);
    this.emit("loadout", this.loadout);
  }
  resetStats() {
    this.ajaxRequest("/api/user/reset_stats", (e, t) => {
      if (e) {
        console.error("account", "reset_stats_error");
        this.emit("error", "server_error");
      }
    });
  }
  deleteAccount() {
    this.ajaxRequest("/api/user/delete", (e, t) => {
      if (e) {
        console.error("account", "delete_error");
        this.emit("error", "server_error");
        return;
      }
      this.config.set("profile", null);
      this.config.set("sessionCookie", null);
      window.location.reload();
    });
  }
  setUsername(e, t) {
    this.ajaxRequest("/api/user/username", {
      username: e
    }, (i, r) => {
      if (i) {
        console.error("account", "set_username_error");
        t(i);
        return;
      }
      if (r.result == "success") {
        this.loadProfile();
        t();
      } else {
        t(r.result);
      }
    });
  }
  setLoadout(e) {
    this.loadout;
    this.loadout = e;
    this.emit("loadout", this.loadout);
    this.config.set("loadout", e);
  }
  setItemStatus(e, t) {
    if (t.length != 0) {
      for (let i = 0; i < t.length; i++) {
        let r = this.items.find(a => a.type == t[i]);
        if (r) {
          r.status = Math.max(r.status, e);
        }
      }
      this.emit("items", this.items);
      this.ajaxRequest("/api/user/set_item_status", {
        status: e,
        itemTypes: t
      }, (i, r) => {
        if (i) {
          console.error("account", "set_item_status_error");
        }
      });
    }
  }
  unlock(e) {
    this.ajaxRequest("/api/user/unlock", {
      unlockType: e
    }, (t, i) => {
      if (t || !i.success) {
        console.error("account", "unlock_error");
        this.emit("error", "server_error");
        return;
      }
      this.items = i.items;
      this.emit("items", this.items);
    });
  }
  getPass(e) {}
  setPassUnlock(e) {
    this.ajaxRequest("/api/user/set_pass_unlock", {
      unlockType: e
    }, (t, i) => {
      if (t || !i.success) {
        console.error("account", "set_pass_unlock_error");
      } else {
        this.getPass(false);
      }
    });
  }
  refreshQuest(e) {
    this.ajaxRequest("/api/user/refresh_quest", {
      idx: e
    }, (t, i) => {
      if (t) {
        console.error("account", "refresh_quest_error");
        return;
      }
      if (i.success) {
        this.getPass(false);
      } else {
        this.emit("pass", this.pass, this.quests, false);
      }
    });
  }
}
class Jr {
  introMusic = true;
  soundUpdateThrottle = 0;
  tracks;
  trackToIdx;
  initTime;
  letructor() {
    this.tracks = [];
    this.trackToIdx = {};
    let e = (t, i, r, a) => {
      this.tracks.push({
        name: t,
        sound: i,
        channel: r,
        immediateMode: a,
        inst: null,
        instSound: "",
        filter: "",
        weight: 0,
        volume: 0
      });
      this.trackToIdx[t] = this.tracks.length - 1;
    };
    e("music", "menu_music", "music", false);
    e("wind", "ambient_wind_01", "ambient", false);
    e("river", "ambient_stream_01", "ambient", false);
    e("waves", "ambient_waves_01", "ambient", false);
    e("interior_0", "", "ambient", true);
    e("interior_1", "", "ambient", true);
    this.initTime = Date.now();
  }
  getTrack(e) {
    return this.tracks[this.trackToIdx[e]];
  }
  onGameStart() {
    this.introMusic = false;
    for (let e = 0; e < this.tracks.length; e++) {
      this.tracks[e].weight = 0;
    }
    this.getTrack("wind").weight = 1;
    this.soundUpdateThrottle = 0;
  }
  onGameComplete(e) {
    for (let t = 0; t < this.tracks.length; t++) {
      let i = this.tracks[t];
      if (i.immediateMode) {
        i.weight = 0;
      }
    }
    this.getTrack("river").weight = 0;
  }
  update(e, t, i) {
    let r = false;
    this.soundUpdateThrottle -= e;
    if (this.soundUpdateThrottle <= 0) {
      this.soundUpdateThrottle = 0.2;
      r = true;
    }
    let a = 0;
    for (let l = this.tracks.length - 1; l >= 0; l--) {
      let s = this.tracks[l];
      if (!s.inst && s.sound && t.isSoundLoaded(s.sound, s.channel)) {
        console.log("Start track", s.sound, s.channel);
        s.inst = t.playSound(s.sound, {
          channel: s.channel,
          startSilent: true,
          loop: s.channel == "ambient",
          forceStart: true,
          filter: s.filter,
          forceFilter: true
        });
        s.instSound = s.sound;
        if (l == 0) {
          console.log("Play delay", Date.now() - this.initTime);
        }
      }
      if (s.inst && r) {
        let m = s.weight * (1 - a);
        a += m;
        s.volume = m;
        let d = t.getSoundDefVolume(s.sound, s.channel);
        t.setVolume(s.inst, m * d, s.channel);
      }
      if (s.inst && (!s.sound && z.eqAbs(t.getVolume(s.inst), 0) || s.sound && s.sound != s.instSound)) {
        console.log("Stop track", s.name, s.channel);
        t.stopSound(s.inst);
        s.inst = null;
        s.instSound = "";
      }
      if (s.immediateMode) {
        s.sound = "";
        s.weight = 0;
      }
    }
    if (this.introMusic) {
      let l = this.getTrack("music");
      if (l.inst) {
        l.weight = z.min(l.weight + e, 1);
      }
      let s = this.getTrack("wind");
      if (l.inst && !t.isSoundPlaying(l.inst)) {
        s.weight = z.min(s.weight + e, 1);
      }
    }
  }
}
let Ze = window.navigator.userAgent.includes("iPod") || window.navigator.userAgent.includes("iPhone") || window.navigator.userAgent.includes("iPad");
let ji = null;
let qi = false;
function Kr(u) {
  try {
    u.createGain().disconnect(u.destination);
    return false;
  } catch {
    return true;
  }
}
let De = 128;
class ti {
  letructor(e) {
    this.ctx = e;
    this.volumeOld = this.volume;
    this.panOld = this.pan;
    this.gainNode = this.ctx.createGain();
    this.pannerNode = this.ctx.createPanner();
    this.pannerNode.panningModel = "equalpower";
    this.gainNode.connect(this.pannerNode);
  }
  sound = null;
  id = 0;
  volume = 1;
  volumeOld;
  pan = 0;
  panOld;
  ambient;
  sourceNode = null;
  destination = null;
  paramEvents = 0;
  gainNode;
  pannerNode;
  stopTime = 0;
  stopping = false;
  playState = "playFinished";
  setGain(e) {
    if (!this.stopping) {
      if (Ze) {
        this.gainNode.gain.value = e;
      } else {
        this.gainNode.gain.setTargetAtTime(e, this.ctx.currentTime, 0.02);
        ++this.paramEvents;
      }
    }
  }
  setPan(e) {
    if (!this.stopping) {
      this.pannerNode.setPosition(e, 0, -0.5);
      this.paramEvents += 3;
    }
  }
  start(e, t, i, r, a, l, s, m, d) {
    this.volume = this.volumeOld = i;
    this.pan = this.panOld = r;
    this.ambient = m;
    this.stopping = false;
    this.destination = e;
    this.sourceNode = this.ctx.createBufferSource();
    this.sourceNode.buffer = t;
    this.sourceNode.connect(this.gainNode);
    this.pannerNode.connect(this.destination);
    this.sourceNode.loop = a;
    if (Ze) {
      this.gainNode.gain.value = i;
    } else {
      this.gainNode.gain.setValueAtTime(i, this.ctx.currentTime);
      ++this.paramEvents;
    }
    this.setPan(r);
    if (this.sourceNode.detune) {
      this.sourceNode.detune.value = d;
    }
    this.sourceNode.start(this.ctx.currentTime + l, s);
    this.stopTime = a ? 1e+100 : this.ctx.currentTime + l + t.duration - s;
    this.playState = "playSucceeded";
  }
  stop() {
    if (!this.stopping) {
      this.setGain(0);
      this.stopTime = this.ctx.currentTime + 0.1;
      this.stopping = true;
      this.playState = "playInterrupted";
    }
  }
  disconnect() {
    this.sound?.instances.splice(this.sound?.instances.indexOf(this), 1);
    this.sound = null;
    this.sourceNode?.stop(0);
    this.sourceNode?.disconnect(this.gainNode);
    this.pannerNode?.disconnect(this.destination);
    if (Ze) {
      try {
        this.sourceNode.buffer = ji;
      } catch {}
    }
    this.destination = null;
    this.sourceNode = null;
    this.playState = "playFinished";
  }
  reallocNodes() {
    this.gainNode.disconnect(this.pannerNode);
    this.gainNode = this.ctx.createGain();
    this.pannerNode = this.ctx.createPanner();
    this.pannerNode.panningModel = "equalpower";
    this.gainNode.connect(this.pannerNode);
    this.paramEvents = 0;
  }
}
let mt = null;
class ii {
  letructor(e) {
    this.instance = e;
    this.id = e.id;
  }
  id;
  check(e) {
    if (this.id != this.instance.id) {
      this.instance = mt;
      this.id = mt?.id;
    }
  }
  stop() {
    this.check();
    this.instance.stop();
  }
  get volume() {
    this.check();
    return this.instance.volume;
  }
  set volume(e) {
    this.check(true);
    this.instance.volume = e;
  }
  get pan() {
    this.check();
    return this.instance.pan;
  }
  set pan(e) {
    this.check(true);
    this.instance.pan = e;
  }
  get playState() {
    this.check();
    return this.instance.playState;
  }
}
let Ie = null;
class Qr {
  letructor(e, t, i, r, a) {
    this.ctx = e;
    this.inNode = t;
    this.outNode = i;
    this.name = r;
    this.params = a;
    this.volume = a.volume ?? 1;
    this.echoVolume = a.echoVolume || 0;
    this.echoDelay = a.echoDelay || 0;
    this.echoLowPass = a.echoLowPass || 3000;
    this.stereoSpread = a.stereoSpread || 0;
    if (!qi) {
      let l = this.ctx.createGain();
      this.inNode.connect(l);
      this.inNode = l;
    }
    this.convolverNode = this.ctx.createConvolver();
    if (this.echoVolume) {
      this.echoLowPassNode = this.ctx.createBiquadFilter();
      this.echoLowPassNode.type = "lowpass";
      this.echoLowPassNode.frequency.setValueAtTime(this.echoLowPass, 0);
      this.echoLowPassNode.Q.setValueAtTime(-3.0102999566398125, 0);
      this.echoDelayNode = this.ctx.createDelay(this.echoDelay || 0.01);
      this.echoDelayNode.delayTime.setValueAtTime(this.echoDelay, 0);
    }
    if (this.stereoSpread) {
      this.stereoDelayNode = this.ctx.createDelay(this.stereoSpread);
      this.stereoDelayNode.delayTime.setValueAtTime(this.stereoSpread, 0);
      this.mergerNode = this.ctx.createChannelMerger(2);
    }
  }
  volume;
  echoVolume;
  echoDelay;
  echoLowPass;
  stereoSpread;
  gainNode = null;
  convolverNode = null;
  echoGainNode = null;
  echoLowPassNode = null;
  echoDelayNode = null;
  stereoDelayNode = null;
  mergerNode = null;
  targetLevel = 0;
  gain = 0;
  drainEndTime = 0;
  active = false;
  isConnected() {
    return this.gainNode != null;
  }
  connect() {
    this.gainNode = this.ctx.createGain();
    this.gainNode.channelCount = 1;
    this.gainNode.channelCountMode = "explicit";
    this.gainNode.gain.setValueAtTime(0, 0);
    if (this.echoVolume) {
      this.echoGainNode = this.ctx.createGain();
      this.echoGainNode.channelCount = 1;
      this.echoGainNode.channelCountMode = "explicit";
      this.echoGainNode.gain.setValueAtTime(this.echoVolume, 0);
    }
    this.inNode.connect(this.gainNode);
    this.gainNode.connect(this.convolverNode);
    if (this.echoVolume) {
      this.convolverNode?.connect(this.echoGainNode);
      this.echoGainNode?.connect(this.echoLowPassNode);
      this.echoLowPassNode?.connect(this.echoDelayNode);
      this.echoDelayNode?.connect(this.convolverNode);
    }
    if (this.stereoSpread) {
      let {
        buffer: e
      } = this.convolverNode;
      if (e && e.numberOfChannels != 1) {
        console.error("stereoSpread can only be applied to mono IRs");
      }
      this.convolverNode?.connect(this.stereoDelayNode);
      this.convolverNode?.connect(this.mergerNode, 0, 0);
      this.stereoDelayNode?.connect(this.mergerNode, 0, 1);
      this.mergerNode?.connect(this.outNode);
    } else {
      this.convolverNode?.connect(this.outNode);
    }
  }
  disconnect() {
    this.inNode.disconnect(this.gainNode);
    this.gainNode?.disconnect(this.convolverNode);
    if (this.echoVolume) {
      this.convolverNode?.disconnect(this.echoGainNode);
      this.echoGainNode?.disconnect(this.echoLowPassNode);
      this.echoLowPassNode?.disconnect(this.echoDelayNode);
      this.echoDelayNode?.disconnect(this.convolverNode);
    }
    if (this.stereoSpread) {
      this.convolverNode?.disconnect(this.stereoDelayNode);
      this.convolverNode?.disconnect(this.mergerNode, 0, 0);
      this.stereoDelayNode?.disconnect(this.mergerNode, 0, 1);
      this.mergerNode?.disconnect(this.outNode);
    } else {
      this.convolverNode?.disconnect(this.outNode);
    }
    this.gainNode = null;
    this.echoGainNode = null;
  }
  setGain(e, t, i) {
    e *= this.volume;
    if (this.gain != e) {
      if (e != 0 && !this.gainNode) {
        this.connect();
      }
      if (e == 0) {
        if (this.echoGainNode) {
          this.echoGainNode.gain.setValueAtTime(0, i);
        }
        let {
          buffer: r
        } = this.convolverNode;
        let a = r ? r.duration : 0;
        this.drainEndTime = i + a + this.echoDelay + this.stereoSpread;
      }
      if (this.gain == 0 && this.echoGainNode) {
        this.echoGainNode.gain.setValueAtTime(this.echoVolume, t);
      }
      this.gainNode?.gain.setValueAtTime(this.gain, t);
      this.gainNode?.gain.linearRampToValueAtTime(e, i);
      this.gain = e;
    }
  }
}
class Yr {
  ctx = new (window.AudioContext || window.webkitAudioContext)();
  masterGainNode;
  compressorNode;
  reverbNode;
  eqNodes = {};
  files = {};
  sounds = {};
  instances = [];
  instanceId = 0;
  playingInstances = [];
  reverbs = {};
  activeReverbs = [];
  reverbFadeEndTime = 0;
  volume = 1;
  volumeOld;
  muted = false;
  mutedOld;
  runningOfflineTest;
  offlineCtx;
  startTime;
  onfileload = function (...e) {};
  PLAY_INITED = "playInited";
  PLAY_SUCCEEDED = "playSucceeded";
  PLAY_INTERRUPTED = "playInterrupted";
  PLAY_FINISHED = "playFinished";
  PLAY_FAILED = "playFailed";
  letructor() {
    if (Ze) {
      let t = this.ctx.createBuffer(1, 1, 44100);
      let i = this.ctx.createBufferSource();
      i.buffer = t;
      i.connect(this.ctx.destination);
      i.start();
      i.disconnect(this.ctx.destination);
      this.ctx.close();
      this.ctx = new (window.AudioContext || window.webkitAudioContext)();
    }
    qi = Kr(this.ctx);
    window.audioEngine = this;
    this.masterGainNode = this.ctx.createGain();
    this.compressorNode = this.ctx.createDynamicsCompressor();
    this.masterGainNode.connect(this.compressorNode);
    this.compressorNode.connect(this.ctx.destination);
    this.reverbNode = this.ctx.createGain();
    this.reverbNode.connect(this.masterGainNode);
    let e = {
      muffled: [[20, 2.8284 / 2, -6, "peaking"], [40, 2.8284 / 2, -7, "peaking"], [80, 2.8284 / 2, -10, "peaking"], [160, 2.8284 / 2, -13, "peaking"], [320, 2.8284 / 2, -22, "peaking"], [640, 2.8284 / 2, -18, "peaking"], [1280, 2.8284 / 2, -25, "peaking"], [2560, 2.8284 / 2, -10, "peaking"], [5120, 2.8284 / 2, -30, "peaking"], [10240, 2.8284 / 2, -25, "peaking"]],
      club: [[20, 2.8284 / 2, -6, "lowshelf"], [63, 2.8284 / 2, -3, "lowshelf"], [125, 2.8284 / 2, -3, "lowshelf"], [250, 2.8284 / 2, -6, "lowshelf"], [500, 2.8284 / 2, -18, "peaking"], [1000, 2.8284 / 2, -36, "peaking"], [2000, 2.8284 / 2, -48, "peaking"], [4000, 2.8284 / 2, -50, "highshelf"], [8000, 2.8284 / 2, -50, "highshelf"], [16000, 2.8284 / 2, -50, "highshelf"]]
    };
    Object.keys(e).forEach(t => {
      let i = this.ctx.createGain();
      i.gain.setValueAtTime(16, 0);
      let r = e[t];
      let a = i;
      for (let l = 0; l < r.length; l++) {
        let s = this.ctx.createBiquadFilter();
        a.connect(s);
        a = s;
        s.frequency.setValueAtTime(r[l][0], 0);
        s.Q.setValueAtTime(r[l][1], 0);
        s.gain.setValueAtTime(r[l][2], 0);
        s.type = r[l][3];
      }
      a.connect(this.reverbNode);
      this.eqNodes[t] = i;
    });
    for (let t = 0; t < De; t++) {
      let i = new ti(this.ctx);
      this.instances[t] = i;
    }
    mt = new ti(this.ctx);
    Ie = new ii(mt);
    this.volumeOld = this.volume;
    this.mutedOld = this.muted;
    if (this.ctx.state == "suspended") {
      let t = () => {
        this.ctx.resume();
        let i = this.ctx.createBufferSource();
        i.buffer = this.ctx.createBuffer(1, 1, 22050);
        i.connect(this.ctx.destination);
        i.start();
        setTimeout(() => {
          if (this.ctx.state == "running") {
            document.body.removeEventListener("mousedown", t, false);
            document.body.removeEventListener("touchend", t, false);
          }
        }, 0);
      };
      document.body.addEventListener("mousedown", t, false);
      document.body.addEventListener("touchend", t, false);
    }
    if (Ze) {
      ji = this.ctx.createBuffer(1, 1, 22050);
    }
  }
  loadFile(e, t) {
    if (this.files[e] != null) {
      t(e);
      return this.files[e];
    }
    this.files[e] = {
      buffer: null
    };
    let i = new XMLHttpRequest();
    i.open("GET", e);
    i.responseType = "arraybuffer";
    let r = function (l) {
      console.error(`Failed loading sound file: ${e}`);
    };
    i.addEventListener("load", a => {
      let l = i.response;
      if (!l) {
        r();
        return;
      }
      this.ctx.decodeAudioData(l, s => {
        this.files[e].buffer = s;
        t(e);
      }, () => {
        console.error(`Failed decoding sound: ${e}`);
      });
    });
    i.addEventListener("abort", r);
    i.addEventListener("error", r);
    i.addEventListener("timeout", r);
    i.send();
    return this.files[e];
  }
  registerSound(e, t, i) {
    let a = {
      file: this.loadFile(e, this.onfileload.bind(this)),
      canCoalesce: !!i.canCoalesce,
      maxInstances: i.channels || 16,
      volume: i.volume || 1,
      instances: []
    };
    this.sounds[t] = a;
  }
  play(e, t) {
    let i = this.sounds[e];
    if (!i) {
      console.error(`No sound named: ${e}`);
      return Ie;
    }
    let r = t.filter || "none";
    let a = t.volume ?? 1;
    a *= i.volume;
    a = this.muted ? 0 : a;
    let l = t.pan || 0;
    let s = !!t.loop;
    let m = t.delay ? t.delay * 0.001 : 0;
    let d = t.offset ? t.offset : 0;
    let h = t.ambient || false;
    let p = t.detune || 0;
    if (!i.file.buffer || this.muted && !t.loop) {
      return Ie;
    }
    if (r !== "none" && r !== "reverb" && r !== "muffled" && r !== "club") {
      console.error(`Invalid filter: ${r}. Only valid filters are 'none', 'reverb', 'muffled' and 'club'.`);
      return Ie;
    }
    if (i.canCoalesce) {
      let C = this.ctx.currentTime + i.file.buffer.duration;
      for (let P = 0; P < i.instances.length; P++) {
        let k = i.instances[P];
        if (Math.abs(C - k.stopTime) > 0.03) {
          continue;
        }
        let b = k.volume * k.volume + a * a;
        let M = k.volume * k.pan + a * l;
        let E = k.volume + a;
        k.volume = Math.sqrt(b);
        k.pan = M / Math.max(0.001, E);
        return Ie;
      }
    }
    for (let y = 0; y < De && (++this.instanceId, !!this.instances[this.instanceId % De].sound); y++);
    let w = this.instances[this.instanceId % De];
    if (w.sound) {
      console.error(`All ${De} sound instances in use. You are using way too many sounds!`);
      return Ie;
    }
    w.id = this.instanceId;
    let f = w.paramEvents > 150;
    let S = w.paramEvents > 20 && !(this.instanceId % 7);
    for ((f || S) && w.reallocNodes(); i.instances.length >= i.maxInstances;) {
      let y = i.instances[0];
      for (let C = 1; C < i.instances.length; C++) {
        if (y.stopTime > i.instances[C].stopTime) {
          y = i.instances[C];
        }
      }
      y.disconnect();
    }
    w.sound = i;
    i.instances.push(w);
    let x = r === "none" ? this.masterGainNode : r === "reverb" ? this.reverbNode : this.eqNodes[r];
    w.start(x, i.file.buffer, a, l, s, m, d, h, p);
    if (!this.playingInstances.includes(w)) {
      this.playingInstances.push(w);
    }
    return new ii(w);
  }
  registerReverb(e, t, i) {
    let r = new Qr(this.ctx, this.reverbNode, this.masterGainNode, t, i);
    this.loadFile(e, a => {
      r.convolverNode.buffer = this.files[a].buffer;
      this.onfileload(a);
    });
    this.reverbs[t] = r;
  }
  setReverbs(e) {
    for (let t = 0; t < this.activeReverbs.length; t++) {
      let i = this.activeReverbs[t];
      if (!e[i.name]) {
        i.targetLevel = 0;
      }
    }
    for (let t in e) {
      if (!e[t]) {
        continue;
      }
      let i = this.reverbs[t];
      if (!i) {
        console.error(`No reverb named ${t}`);
        continue;
      }
      if (!this.reverbs[t].active) {
        this.activeReverbs.push(i);
        i.active = true;
      }
      i.targetLevel = e[t];
    }
  }
  stop(e = true) {
    for (let t = 0; t < De; t++) {
      let i = this.instances[t];
      if (!e || !i.ambient) {
        if (i.sound) {
          i.stop();
        }
      }
    }
  }
  update(e) {
    if (this.ctx.state == "suspended") {
      this.ctx.resume();
    }
    let t = this.muted ? 0 : this.volume;
    let i = this.mutedOld ? 0 : this.volumeOld;
    this.volumeOld = this.volume;
    this.mutedOld = this.muted;
    if (t != i) {
      this.masterGainNode.gain.setTargetAtTime(t, this.ctx.currentTime, 0.02);
    }
    for (let r = this.playingInstances.length - 1; r >= 0; r--) {
      let a = this.playingInstances[r];
      if (a.volumeOld != a.volume) {
        a.volumeOld = a.volume;
        a.setGain(a.volume);
      }
      if (a.panOld != a.pan) {
        a.panOld = a.pan;
        a.setPan(a.pan);
      }
      if (a.sound && this.ctx.currentTime > a.stopTime) {
        a.disconnect();
      }
      if (!a.sound) {
        this.playingInstances.splice(r, 1);
      }
    }
    if (this.ctx.currentTime > this.reverbFadeEndTime) {
      let r = this.ctx.currentTime + 0.006;
      let a = 0.025;
      this.reverbFadeEndTime = r + a;
      let l = 0;
      for (let m = 0; m < this.activeReverbs.length; m++) {
        let d = this.activeReverbs[m];
        l += d.targetLevel;
      }
      let s = l > 1 ? 1 / l : 1;
      for (let m = 0; m < this.activeReverbs.length; m++) {
        let d = this.activeReverbs[m];
        let h = Math.sqrt(s * d.targetLevel);
        d.setGain(h, r, this.reverbFadeEndTime);
      }
      for (let m = this.activeReverbs.length - 1; m >= 0; m--) {
        let d = this.activeReverbs[m];
        let h = this.ctx.currentTime > d.drainEndTime;
        if (d.gain == 0 && h) {
          if (d.isConnected()) {
            d.disconnect();
          }
          d.active = false;
          this.activeReverbs.splice(m, 1);
        }
      }
    }
  }
  setMute(e) {
    this.muted = e;
  }
  on(e, t, i) {
    if (e != "fileload") {
      console.error("Only \"fileload\" event supported");
      return;
    }
    this.onfileload = t.bind(i);
  }
  updatePerformanceTest() {
    this.runningOfflineTest = this.runningOfflineTest ?? false;
    if (this.runningOfflineTest) {
      return;
    }
    this.runningOfflineTest = true;
    let e = 10;
    this.offlineCtx = new OfflineAudioContext(2, e * this.ctx.sampleRate, this.ctx.sampleRate);
    let t = this.offlineCtx.createBuffer(2, e * this.ctx.sampleRate, this.ctx.sampleRate);
    for (let m = 0; m < t.numberOfChannels; m++) {
      let d = t.getChannelData(m);
      for (let h = 0; h < d.length; h++) {
        d[h] = Math.sin(h / 2333) * Math.sin(h / 5741) * 2 * Math.random() - 1;
      }
    }
    let i = this.offlineCtx.createBufferSource();
    i.buffer = t;
    let r = this.offlineCtx.createConvolver();
    let l = this.offlineCtx.createBuffer(1, this.ctx.sampleRate * 4, this.ctx.sampleRate);
    for (let m = 0; m < l.numberOfChannels; m++) {
      let d = l.getChannelData(m);
      for (let h = 0; h < d.length; h++) {
        d[h] = Math.random() * 2 - 1;
      }
    }
    r.buffer = l;
    let s = {
      echoVolume: 0.5,
      echoLowPass: 800,
      echoDelay: 0.25,
      stereoSpread: 0.004
    };
    s.convolverNode = r;
    s.echoLowPassNode = this.offlineCtx.createBiquadFilter();
    s.echoLowPassNode.type = "lowpass";
    s.echoLowPassNode.frequency.setValueAtTime(s.echoLowPass, 0);
    s.echoLowPassNode.Q.setValueAtTime(-3.0102999566398125, 0);
    s.echoDelayNode = this.offlineCtx.createDelay(s.echoDelay);
    s.echoDelayNode.delayTime.setValueAtTime(s.echoDelay, 0);
    s.stereoDelayNode = this.offlineCtx.createDelay(s.stereoSpread);
    s.stereoDelayNode.delayTime.setValueAtTime(s.stereoSpread, 0);
    s.mergerNode = this.offlineCtx.createChannelMerger(2);
    s.gainNode = this.offlineCtx.createGain();
    s.gainNode.channelCount = 1;
    s.gainNode.channelCountMode = "explicit";
    s.gainNode.gain.setValueAtTime(1, 0);
    s.echoGainNode = this.offlineCtx.createGain();
    s.echoGainNode.channelCount = 1;
    s.echoGainNode.channelCountMode = "explicit";
    s.echoGainNode.gain.setValueAtTime(s.echoVolume, 0);
    s.outNode = this.offlineCtx.createGain();
    s.gainNode.connect(s.convolverNode);
    {
      let {
        buffer: m
      } = s.convolverNode;
      if (m && m.numberOfChannels != 1) {
        console.error("stereoSpread can only be applied to mono IRs");
      }
      s.convolverNode.connect(s.stereoDelayNode);
      s.convolverNode.connect(s.mergerNode, 0, 0);
      s.stereoDelayNode?.connect(s.mergerNode, 0, 1);
      s.mergerNode?.connect(s.outNode);
    }
    console.log("starting convolver");
    i.connect(s.gainNode);
    s.outNode.connect(this.offlineCtx.destination);
    i.start();
    this.startTime = performance.now();
    this.offlineCtx.oncomplete = m => {
      let d = performance.now();
      console.log("Offline render time: ", d - this.startTime);
      this.runningOfflineTest = false;
    };
    this.offlineCtx.startRendering();
  }
}
let ye = {
  Sound: new Yr()
};
let ea = {
  players: {
    m9_01: {
      path: "audio/guns/m9_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m9_reload_01: {
      path: "audio/guns/m9_reload_01.mp3",
      volume: 1
    },
    m9_reload_02: {
      path: "audio/guns/m9_reload_02.mp3",
      volume: 1
    },
    m9_switch_01: {
      path: "audio/guns/m9_switch_01.mp3",
      volume: 1
    },
    m93r_01: {
      path: "audio/guns/m93r_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m93r_reload_01: {
      path: "audio/guns/m93r_reload_01.mp3",
      volume: 1
    },
    m93r_reload_02: {
      path: "audio/guns/m93r_reload_02.mp3",
      volume: 1
    },
    m93r_switch_01: {
      path: "audio/guns/m93r_switch_01.mp3",
      volume: 1
    },
    glock_01: {
      path: "audio/guns/glock_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    glock_reload_01: {
      path: "audio/guns/glock_reload_01.mp3",
      volume: 1
    },
    glock_reload_02: {
      path: "audio/guns/glock_reload_02.mp3",
      volume: 1
    },
    glock_switch_01: {
      path: "audio/guns/glock_switch_01.mp3",
      volume: 1
    },
    p30l_01: {
      path: "audio/guns/p30l_01.mp3",
      volume: 1.2,
      maxInstances: 5
    },
    p30l_reload_01: {
      path: "audio/guns/p30l_reload_01.mp3",
      volume: 1.4
    },
    p30l_reload_02: {
      path: "audio/guns/p30l_reload_02.mp3",
      volume: 1.4
    },
    p30l_switch_01: {
      path: "audio/guns/p30l_switch_01.mp3",
      volume: 1.5
    },
    m1911_01: {
      path: "audio/guns/m1911_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1911_reload_01: {
      path: "audio/guns/m1911_reload_01.mp3",
      volume: 1
    },
    m1911_reload_02: {
      path: "audio/guns/m1911_reload_02.mp3",
      volume: 1
    },
    m1911_switch_01: {
      path: "audio/guns/m1911_switch_01.mp3",
      volume: 1
    },
    ot38_01: {
      path: "audio/guns/ot38_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    ot38_reload_01: {
      path: "audio/guns/ot38_reload_01.mp3",
      volume: 1
    },
    ot38_reload_02: {
      path: "audio/guns/ot38_reload_02.mp3",
      volume: 1
    },
    ot38_switch_01: {
      path: "audio/guns/ot38_switch_01.mp3",
      volume: 1
    },
    ots38_01: {
      path: "audio/guns/ots38_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    colt45_01: {
      path: "audio/guns/colt45_01.mp3",
      volume: 1
    },
    colt45_reload_01: {
      path: "audio/guns/colt45_reload_01.mp3",
      volume: 1
    },
    colt45_reload_02: {
      path: "audio/guns/colt45_reload_02.mp3",
      volume: 1
    },
    colt45_switch_01: {
      path: "audio/guns/colt45_switch_01.mp3",
      volume: 1
    },
    deagle_01: {
      path: "audio/guns/deagle_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    deagle_reload_01: {
      path: "audio/guns/deagle_reload_01.mp3",
      volume: 1
    },
    deagle_reload_02: {
      path: "audio/guns/deagle_reload_02.mp3",
      volume: 1
    },
    deagle_switch_01: {
      path: "audio/guns/deagle_switch_01.mp3",
      volume: 1
    },
    flare_gun_01: {
      path: "audio/guns/flare_gun_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    flare_gun_reload_01: {
      path: "audio/guns/flare_gun_reload_01.mp3",
      volume: 1
    },
    flare_gun_reload_02: {
      path: "audio/guns/flare_gun_reload_02.mp3",
      volume: 1
    },
    ak47_01: {
      path: "audio/guns/ak47_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    ak47_reload_01: {
      path: "audio/guns/ak47_reload_01.mp3",
      volume: 1
    },
    ak47_switch_01: {
      path: "audio/guns/ak47_switch_01.mp3",
      volume: 1
    },
    an94_01: {
      path: "audio/guns/an94_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    an94_reload_01: {
      path: "audio/guns/an94_reload_01.mp3",
      volume: 1
    },
    an94_switch_01: {
      path: "audio/guns/an94_switch_01.mp3",
      volume: 1
    },
    groza_01: {
      path: "audio/guns/groza_01.mp3",
      volume: 0.95,
      maxInstances: 5
    },
    groza_reload_01: {
      path: "audio/guns/groza_reload_01.mp3",
      volume: 1.1
    },
    groza_switch_01: {
      path: "audio/guns/groza_switch_01.mp3",
      volume: 1.1
    },
    grozas_01: {
      path: "audio/guns/grozas_01.mp3",
      volume: 0.95,
      maxInstances: 5
    },
    scar_01: {
      path: "audio/guns/scar_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    scar_reload_01: {
      path: "audio/guns/scar_reload_01.mp3",
      volume: 1
    },
    scar_switch_01: {
      path: "audio/guns/scar_switch_01.mp3",
      volume: 1
    },
    scarssr_01: {
      path: "audio/guns/scarssr_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    dp28_01: {
      path: "audio/guns/dp28_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    dp28_reload_01: {
      path: "audio/guns/dp28_reload_01.mp3",
      volume: 1
    },
    dp28_switch_01: {
      path: "audio/guns/dp28_switch_01.mp3",
      volume: 1
    },
    bar_01: {
      path: "audio/guns/bar_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    bar_reload_01: {
      path: "audio/guns/bar_reload_01.mp3",
      volume: 1
    },
    bar_switch_01: {
      path: "audio/guns/bar_switch_01.mp3",
      volume: 1
    },
    pkp_01: {
      path: "audio/guns/pkp_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    pkp_reload_01: {
      path: "audio/guns/pkp_reload_01.mp3",
      volume: 1
    },
    pkp_switch_01: {
      path: "audio/guns/pkp_switch_01.mp3",
      volume: 1
    },
    m870_01: {
      path: "audio/guns/m870_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m870_reload_01: {
      path: "audio/guns/m870_reload_01.mp3",
      volume: 1
    },
    m870_cycle_01: {
      path: "audio/guns/m870_cycle_01.mp3",
      volume: 1
    },
    m870_pull_01: {
      path: "audio/guns/m870_pull_01.mp3",
      volume: 1
    },
    spas12_01: {
      path: "audio/guns/spas12_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    spas12_reload_01: {
      path: "audio/guns/spas12_reload_01.mp3",
      volume: 1
    },
    spas12_cycle_01: {
      path: "audio/guns/spas12_cycle_01.mp3",
      volume: 1
    },
    spas12_pull_01: {
      path: "audio/guns/spas12_pull_01.mp3",
      volume: 1
    },
    mp220_01: {
      path: "audio/guns/mp220_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mp220_reload_01: {
      path: "audio/guns/mp220_reload_01.mp3",
      volume: 1
    },
    mp220_deploy_01: {
      path: "audio/guns/mp220_deploy_01.mp3",
      volume: 1
    },
    saiga_01: {
      path: "audio/guns/saiga_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    saiga_reload_01: {
      path: "audio/guns/saiga_reload_01.mp3",
      volume: 1
    },
    saiga_switch_01: {
      path: "audio/guns/saiga_switch_01.mp3",
      volume: 1
    },
    usas_01: {
      path: "audio/guns/usas_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    usas_reload_01: {
      path: "audio/guns/usas_reload_01.mp3",
      volume: 1
    },
    usas_switch_01: {
      path: "audio/guns/usas_switch_01.mp3",
      volume: 1
    },
    m1100_01: {
      path: "audio/guns/m1100_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1100_reload_01: {
      path: "audio/guns/m1100_reload_01.mp3",
      volume: 1
    },
    m1100_deploy_01: {
      path: "audio/guns/m1100_deploy_01.mp3",
      volume: 1
    },
    m1014_01: {
      path: "audio/guns/m1014_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1014_reload_01: {
      path: "audio/guns/m1014_reload_01.mp3",
      volume: 1
    },
    m1014_deploy_01: {
      path: "audio/guns/m1014_deploy_01.mp3",
      volume: 1
    },
    m39_01: {
      path: "audio/guns/m39_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m39_reload_01: {
      path: "audio/guns/m39_reload_01.mp3",
      volume: 1
    },
    m39_switch_01: {
      path: "audio/guns/m39_switch_01.mp3",
      volume: 1
    },
    svd_01: {
      path: "audio/guns/svd_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    svd_reload_01: {
      path: "audio/guns/svd_reload_01.mp3",
      volume: 1
    },
    svd_switch_01: {
      path: "audio/guns/svd_switch_01.mp3",
      volume: 1
    },
    garand_01: {
      path: "audio/guns/garand_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    garand_02: {
      path: "audio/guns/garand_02.mp3",
      volume: 1,
      maxInstances: 5
    },
    garand_reload_01: {
      path: "audio/guns/garand_reload_01.mp3",
      volume: 1
    },
    garand_switch_01: {
      path: "audio/guns/garand_switch_01.mp3",
      volume: 1
    },
    m1a1_01: {
      path: "audio/guns/m1a1_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1a1_reload_01: {
      path: "audio/guns/m1a1_reload_01.mp3",
      volume: 1
    },
    m1a1_switch_01: {
      path: "audio/guns/m1a1_switch_01.mp3",
      volume: 1
    },
    mp5_01: {
      path: "audio/guns/mp5_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mp5_reload_01: {
      path: "audio/guns/mp5_reload_01.mp3",
      volume: 1
    },
    mp5_switch_01: {
      path: "audio/guns/mp5_switch_01.mp3",
      volume: 1
    },
    mac10_01: {
      path: "audio/guns/mac10_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mac10_reload_01: {
      path: "audio/guns/mac10_reload_01.mp3",
      volume: 1
    },
    mac10_switch_01: {
      path: "audio/guns/mac10_switch_01.mp3",
      volume: 1
    },
    ump9_01: {
      path: "audio/guns/ump9_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    ump9_reload_01: {
      path: "audio/guns/ump9_reload_01.mp3",
      volume: 1
    },
    ump9_switch_01: {
      path: "audio/guns/ump9_switch_01.mp3",
      volume: 1
    },
    vector_01: {
      path: "audio/guns/vector_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    vector_02: {
      path: "audio/guns/vector_02.mp3",
      volume: 1,
      maxInstances: 5
    },
    vector_reload_01: {
      path: "audio/guns/vector_reload_01.mp3",
      volume: 1
    },
    vector_switch_01: {
      path: "audio/guns/vector_switch_01.mp3",
      volume: 1
    },
    scorpion_01: {
      path: "audio/guns/scorpion_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    scorpion_reload_01: {
      path: "audio/guns/scorpion_reload_01.mp3",
      volume: 1
    },
    scorpion_switch_01: {
      path: "audio/guns/scorpion_switch_01.mp3",
      volume: 1
    },
    vss_01: {
      path: "audio/guns/vss_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    vss_reload_01: {
      path: "audio/guns/vss_reload_01.mp3",
      volume: 1
    },
    vss_switch_01: {
      path: "audio/guns/vss_switch_01.mp3",
      volume: 1
    },
    famas_01: {
      path: "audio/guns/famas_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    famas_reload_01: {
      path: "audio/guns/famas_reload_01.mp3",
      volume: 1
    },
    famas_switch_01: {
      path: "audio/guns/famas_switch_01.mp3",
      volume: 1
    },
    hk416_01: {
      path: "audio/guns/hk416_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    hk416_reload_01: {
      path: "audio/guns/hk416_reload_01.mp3",
      volume: 1
    },
    hk416_switch_01: {
      path: "audio/guns/hk416_switch_01.mp3",
      volume: 1
    },
    m4a1_01: {
      path: "audio/guns/m4a1_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m4a1_reload_01: {
      path: "audio/guns/m4a1_reload_01.mp3",
      volume: 1
    },
    m4a1_switch_01: {
      path: "audio/guns/m4a1_switch_01.mp3",
      volume: 1
    },
    mk12_01: {
      path: "audio/guns/mk12_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mk12_reload_01: {
      path: "audio/guns/mk12_reload_01.mp3",
      volume: 1
    },
    mk12_switch_01: {
      path: "audio/guns/mk12_switch_01.mp3",
      volume: 1
    },
    l86_01: {
      path: "audio/guns/l86_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    l86_reload_01: {
      path: "audio/guns/l86_reload_01.mp3",
      volume: 1
    },
    l86_switch_01: {
      path: "audio/guns/l86_switch_01.mp3",
      volume: 1
    },
    m249_01: {
      path: "audio/guns/m249_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m249_reload_01: {
      path: "audio/guns/m249_reload_01.mp3",
      volume: 1.5
    },
    m249_switch_01: {
      path: "audio/guns/m249_switch_01.mp3",
      volume: 1.5
    },
    qbb97_01: {
      path: "audio/guns/qbb97_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    qbb97_reload_01: {
      path: "audio/guns/qbb97_reload_01.mp3",
      volume: 1
    },
    qbb97_switch_01: {
      path: "audio/guns/qbb97_switch_01.mp3",
      volume: 1
    },
    scout_01: {
      path: "audio/guns/scout_01.mp3",
      volume: 2,
      maxInstances: 5
    },
    scout_reload_01: {
      path: "audio/guns/scout_reload_01.mp3",
      volume: 1.2
    },
    scout_cycle_01: {
      path: "audio/guns/scout_cycle_01.mp3",
      volume: 1.2
    },
    scout_pull_01: {
      path: "audio/guns/scout_pull_01.mp3",
      volume: 1.2
    },
    model94_01: {
      path: "audio/guns/model94_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    model94_reload_01: {
      path: "audio/guns/model94_reload_01.mp3",
      volume: 1
    },
    model94_cycle_01: {
      path: "audio/guns/model94_cycle_01.mp3",
      volume: 1
    },
    mkg45_01: {
      path: "audio/guns/mkg45_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mkg45_reload_01: {
      path: "audio/guns/mkg45_reload_01.mp3",
      volume: 1.25
    },
    mkg45_switch_01: {
      path: "audio/guns/mkg45_switch_01.mp3",
      volume: 1.25
    },
    blr_01: {
      path: "audio/guns/blr_01.mp3",
      volume: 1.5,
      maxInstances: 5
    },
    blr_reload_01: {
      path: "audio/guns/blr_reload_01.mp3",
      volume: 1
    },
    blr_cycle_01: {
      path: "audio/guns/blr_cycle_01.mp3",
      volume: 1
    },
    mosin_01: {
      path: "audio/guns/mosin_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mosin_reload_01: {
      path: "audio/guns/mosin_reload_01.mp3",
      volume: 1
    },
    mosin_reload_02: {
      path: "audio/guns/mosin_reload_02.mp3",
      volume: 1
    },
    mosin_cycle_01: {
      path: "audio/guns/mosin_cycle_01.mp3",
      volume: 1
    },
    mosin_pull_01: {
      path: "audio/guns/mosin_pull_01.mp3",
      volume: 1
    },
    sv98_01: {
      path: "audio/guns/sv98_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    sv98_reload_01: {
      path: "audio/guns/sv98_reload_01.mp3",
      volume: 1
    },
    sv98_cycle_01: {
      path: "audio/guns/sv98_cycle_01.mp3",
      volume: 1
    },
    sv98_pull_01: {
      path: "audio/guns/sv98_pull_01.mp3",
      volume: 1
    },
    awc_01: {
      path: "audio/guns/awc_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    awc_reload_01: {
      path: "audio/guns/awc_reload_01.mp3",
      volume: 1
    },
    awc_cycle_01: {
      path: "audio/guns/awc_cycle_01.mp3",
      volume: 1
    },
    awc_pull_01: {
      path: "audio/guns/awc_pull_01.mp3",
      volume: 1
    },
    potato_cannon_01: {
      path: "audio/guns/potato_cannon_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    potato_cannon_reload_01: {
      path: "audio/guns/potato_cannon_reload_01.mp3",
      volume: 1
    },
    potato_cannon_switch_01: {
      path: "audio/guns/potato_cannon_switch_01.mp3",
      volume: 1
    },
    potato_smg_01: {
      path: "audio/guns/potato_smg_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    potato_smg_reload_01: {
      path: "audio/guns/potato_smg_reload_01.mp3",
      volume: 1
    },
    potato_smg_switch_01: {
      path: "audio/guns/potato_smg_switch_01.mp3",
      volume: 1
    },
    bugle_01: {
      path: "audio/guns/bugle_01.mp3",
      volume: 1.5,
      maxInstances: 3,
      preload: false
    },
    bugle_02: {
      path: "audio/guns/bugle_02.mp3",
      volume: 1.5,
      maxInstances: 3,
      preload: false
    },
    bugle_03: {
      path: "audio/guns/bugle_03.mp3",
      volume: 1.5,
      maxInstances: 3,
      preload: false
    },
    empty_fire_01: {
      path: "audio/guns/empty_fire_01.mp3",
      volume: 0.9
    },
    empty_fire_02: {
      path: "audio/guns/empty_fire_02.mp3",
      volume: 0.9
    },
    gun_switch_01: {
      path: "audio/guns/gun_switch_01.mp3",
      volume: 1
    },
    bandage_use_01: {
      path: "audio/ui/bandage_use_01.mp3",
      volume: 1
    },
    healthkit_use_01: {
      path: "audio/ui/healthkit_use_01.mp3",
      volume: 1
    },
    soda_use_01: {
      path: "audio/ui/soda_use_01.mp3",
      volume: 1
    },
    pills_use_01: {
      path: "audio/ui/pills_use_01.mp3",
      volume: 1
    },
    stow_weapon_01: {
      path: "audio/ui/stow_weapon_01.mp3",
      volume: 1
    }
  },
  hits: {
    stone_bullet_hit_01: {
      path: "audio/hits/stone_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_01: {
      path: "audio/hits/wood_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_02: {
      path: "audio/hits/wood_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_03: {
      path: "audio/hits/wood_bullet_hit_03.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_04: {
      path: "audio/hits/wood_bullet_hit_04.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    bush_bullet_hit_01: {
      path: "audio/hits/bush_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_01: {
      path: "audio/hits/metal_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_02: {
      path: "audio/hits/metal_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_03: {
      path: "audio/hits/metal_bullet_hit_03.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_04: {
      path: "audio/hits/metal_bullet_hit_04.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 6
    },
    pan_bullet_hit_01: {
      path: "audio/hits/pan_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 6
    },
    brick_bullet_hit_01: {
      path: "audio/hits/brick_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    punch_hit_01: {
      path: "audio/hits/punch_hit_01.mp3",
      volume: 1
    },
    knife_hit_01: {
      path: "audio/hits/knife_hit_01.mp3",
      volume: 1
    },
    pan_hit_01: {
      path: "audio/hits/pan_hit_01.mp3",
      volume: 1
    },
    axe_hit_01: {
      path: "audio/hits/axe_hit_01.mp3",
      volume: 1
    },
    hook_hit_01: {
      path: "audio/hits/hook_hit_01.mp3",
      volume: 1
    },
    saw_hit_01: {
      path: "audio/hits/saw_hit_01.mp3",
      volume: 2.5
    },
    crowbar_hit_01: {
      path: "audio/hits/crowbar_hit_01.mp3",
      volume: 1
    },
    spade_hit_01: {
      path: "audio/hits/spade_hit_01.mp3",
      volume: 1
    },
    hammer_hit_01: {
      path: "audio/hits/hammer_hit_01.mp3",
      volume: 1
    },
    metal_punch_hit_01: {
      path: "audio/hits/metal_punch_hit_01.mp3",
      volume: 1
    },
    metal_punch_hit_02: {
      path: "audio/hits/metal_punch_hit_02.mp3",
      volume: 1
    },
    player_bullet_hit_01: {
      path: "audio/hits/player_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    player_bullet_hit_02: {
      path: "audio/hits/player_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true
    },
    plastic_bullet_hit_01: {
      path: "audio/hits/plastic_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    toilet_bullet_hit_01: {
      path: "audio/hits/toilet_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    toilet_bullet_hit_02: {
      path: "audio/hits/toilet_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    glass_bullet_hit_01: {
      path: "audio/hits/glass_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    concrete_hit_01: {
      path: "audio/hits/concrete_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    frag_grass_01: {
      path: "audio/hits/frag_grass_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    frag_sand_01: {
      path: "audio/hits/frag_sand_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    frag_water_01: {
      path: "audio/hits/frag_water_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    cloth_hit_01: {
      path: "audio/hits/cloth_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    cloth_hit_02: {
      path: "audio/hits/cloth_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    organic_hit_01: {
      path: "audio/hits/organic_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    piano_hit_01: {
      path: "audio/hits/piano_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    piano_hit_02: {
      path: "audio/hits/piano_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    }
  },
  sfx: {
    crate_break_01: {
      path: "audio/sfx/crate_break_01.mp3",
      volume: 1
    },
    crate_break_02: {
      path: "audio/sfx/crate_break_02.mp3",
      volume: 1
    },
    tree_break_01: {
      path: "audio/sfx/tree_break_01.mp3",
      volume: 1
    },
    bush_break_01: {
      path: "audio/sfx/bush_break_01.mp3",
      volume: 1
    },
    bush_enter_01: {
      path: "audio/sfx/bush_enter_01.mp3",
      volume: 1,
      canCoalesce: true
    },
    bush_enter_02: {
      path: "audio/sfx/bush_enter_02.mp3",
      volume: 1,
      canCoalesce: true
    },
    barrel_break_01: {
      path: "audio/sfx/barrel_break_01.mp3",
      volume: 1
    },
    barrel_break_02: {
      path: "audio/sfx/barrel_break_02.mp3",
      volume: 1
    },
    stone_break_01: {
      path: "audio/sfx/stone_break_01.mp3",
      volume: 1
    },
    wall_break_01: {
      path: "audio/sfx/wall_break_01.mp3",
      volume: 1
    },
    ceiling_break_01: {
      path: "audio/sfx/ceiling_break_01.mp3",
      volume: 1
    },
    ceiling_break_02: {
      path: "audio/sfx/ceiling_break_02.mp3",
      volume: 1
    },
    toilet_break_01: {
      path: "audio/sfx/toilet_break_01.mp3",
      volume: 1
    },
    toilet_break_02: {
      path: "audio/sfx/toilet_break_02.mp3",
      volume: 1
    },
    vending_break_01: {
      path: "audio/sfx/vending_break_01.mp3",
      volume: 1
    },
    window_break_01: {
      path: "audio/sfx/window_break_01.mp3",
      volume: 1
    },
    window_break_02: {
      path: "audio/sfx/window_break_02.mp3",
      volume: 1
    },
    drawers_break_01: {
      path: "audio/sfx/drawers_break_01.mp3",
      volume: 1
    },
    oven_break_01: {
      path: "audio/sfx/oven_break_01.mp3",
      volume: 1
    },
    deposit_box_break_01: {
      path: "audio/sfx/deposit_box_break_01.mp3",
      volume: 1
    },
    cloth_break_01: {
      path: "audio/sfx/cloth_break_01.mp3",
      volume: 1
    },
    screen_break_01: {
      path: "audio/sfx/screen_break_01.mp3",
      volume: 1
    },
    pumpkin_break_01: {
      path: "audio/sfx/pumpkin_break_01.mp3",
      volume: 1,
      preload: false
    },
    ceramic_break_01: {
      path: "audio/sfx/ceramic_break_01.mp3",
      volume: 1
    },
    footstep_grass_01: {
      path: "audio/sfx/footstep_grass_01.mp3",
      volume: 1
    },
    footstep_grass_02: {
      path: "audio/sfx/footstep_grass_02.mp3",
      volume: 1
    },
    footstep_metal_01: {
      path: "audio/sfx/footstep_metal_01.mp3",
      volume: 1
    },
    footstep_metal_02: {
      path: "audio/sfx/footstep_metal_02.mp3",
      volume: 1
    },
    footstep_metal_03: {
      path: "audio/sfx/footstep_metal_03.mp3",
      volume: 1
    },
    footstep_metal_04: {
      path: "audio/sfx/footstep_metal_04.mp3",
      volume: 1
    },
    footstep_metal_05: {
      path: "audio/sfx/footstep_metal_05.mp3",
      volume: 1
    },
    footstep_wood_01: {
      path: "audio/sfx/footstep_wood_01.mp3",
      volume: 1
    },
    footstep_wood_02: {
      path: "audio/sfx/footstep_wood_02.mp3",
      volume: 1
    },
    footstep_wood_03: {
      path: "audio/sfx/footstep_wood_03.mp3",
      volume: 1
    },
    footstep_sand_01: {
      path: "audio/sfx/footstep_sand_01.mp3",
      volume: 1
    },
    footstep_sand_02: {
      path: "audio/sfx/footstep_sand_02.mp3",
      volume: 1
    },
    footstep_water_01: {
      path: "audio/sfx/footstep_water_01.mp3",
      volume: 1
    },
    footstep_water_02: {
      path: "audio/sfx/footstep_water_02.mp3",
      volume: 1
    },
    footstep_tile_01: {
      path: "audio/sfx/footstep_tile_01.mp3",
      volume: 1
    },
    footstep_tile_02: {
      path: "audio/sfx/footstep_tile_02.mp3",
      volume: 1
    },
    footstep_asphalt_01: {
      path: "audio/sfx/footstep_asphalt_01.mp3",
      volume: 1
    },
    footstep_asphalt_02: {
      path: "audio/sfx/footstep_asphalt_02.mp3",
      volume: 1
    },
    footstep_brick_01: {
      path: "audio/sfx/footstep_brick_01.mp3",
      volume: 1
    },
    footstep_stone_01: {
      path: "audio/sfx/footstep_stone_01.mp3",
      volume: 0.8
    },
    footstep_carpet_01: {
      path: "audio/sfx/footstep_carpet_01.mp3",
      volume: 1
    },
    punch_swing_01: {
      path: "audio/sfx/punch_swing_01.mp3",
      volume: 1
    },
    knife_swing_01: {
      path: "audio/sfx/knife_swing_01.mp3",
      volume: 1
    },
    medium_swing_01: {
      path: "audio/sfx/medium_swing_01.mp3",
      volume: 1
    },
    heavy_swing_01: {
      path: "audio/sfx/heavy_swing_01.mp3",
      volume: 1
    },
    bullet_whiz_01: {
      path: "audio/sfx/bullet_whiz_01.mp3",
      volume: 1
    },
    bullet_whiz_02: {
      path: "audio/sfx/bullet_whiz_02.mp3",
      volume: 1
    },
    bullet_whiz_03: {
      path: "audio/sfx/bullet_whiz_03.mp3",
      volume: 1
    },
    frag_throw_01: {
      path: "audio/sfx/frag_throw_01.mp3",
      volume: 1
    },
    frag_pin_01: {
      path: "audio/sfx/frag_pin_01.mp3",
      volume: 1
    },
    frag_deploy_01: {
      path: "audio/ui/frag_pickup_01.mp3",
      volume: 1
    },
    frag_water_01: {
      path: "audio/hits/frag_water_01.mp3",
      volume: 1
    },
    strobe_click_01: {
      path: "audio/sfx/strobe_click_01.mp3",
      volume: 1
    },
    explosion_01: {
      path: "audio/sfx/explosion_01.mp3",
      volume: 1
    },
    explosion_02: {
      path: "audio/sfx/explosion_02.mp3",
      volume: 1
    },
    explosion_03: {
      path: "audio/sfx/explosion_03.mp3",
      volume: 1
    },
    explosion_04: {
      path: "audio/sfx/explosion_04.mp3",
      volume: 1,
      maxInstances: 4
    },
    explosion_05: {
      path: "audio/sfx/explosion_05.mp3",
      volume: 1
    },
    explosion_smoke_01: {
      path: "audio/sfx/explosion_smoke_01.mp3",
      volume: 1
    },
    snowball_01: {
      path: "audio/sfx/snowball_01.mp3",
      volume: 1,
      preload: false
    },
    snowball_02: {
      path: "audio/sfx/snowball_02.mp3",
      volume: 1,
      preload: false
    },
    potato_01: {
      path: "audio/sfx/potato_01.mp3",
      volume: 1,
      preload: false
    },
    potato_02: {
      path: "audio/sfx/potato_02.mp3",
      volume: 1,
      preload: false
    },
    stow_weapon_01: {
      path: "audio/ui/stow_weapon_01.mp3",
      volume: 1
    },
    knife_deploy_01: {
      path: "audio/ui/knife_deploy_01.mp3",
      volume: 1
    },
    pan_pickup_01: {
      path: "audio/ui/pan_pickup_01.mp3",
      volume: 1
    },
    knuckles_deploy_01: {
      path: "audio/ui/knuckles_deploy_01.mp3",
      volume: 1
    },
    door_open_01: {
      path: "audio/sfx/door_open_01.mp3",
      volume: 1
    },
    door_close_01: {
      path: "audio/sfx/door_close_01.mp3",
      volume: 1
    },
    door_open_02: {
      path: "audio/sfx/door_open_02.mp3",
      volume: 1
    },
    door_close_02: {
      path: "audio/sfx/door_close_02.mp3",
      volume: 1
    },
    door_open_03: {
      path: "audio/sfx/door_open_03.mp3",
      volume: 1
    },
    door_close_03: {
      path: "audio/sfx/door_close_03.mp3",
      volume: 1
    },
    door_open_04: {
      path: "audio/sfx/door_open_04.mp3",
      volume: 0.8
    },
    door_error_01: {
      path: "audio/sfx/door_error_01.mp3",
      volume: 1
    },
    vault_change_01: {
      path: "audio/sfx/vault_change_01.mp3",
      volume: 1
    },
    vault_change_02: {
      path: "audio/sfx/vault_change_02.mp3",
      volume: 1,
      preload: false
    },
    vault_change_03: {
      path: "audio/sfx/vault_change_03.mp3",
      volume: 1,
      preload: false
    },
    cell_control_01: {
      path: "audio/sfx/cell_control_01.mp3",
      volume: 1
    },
    cell_control_02: {
      path: "audio/sfx/cell_control_02.mp3",
      volume: 1
    },
    plane_01: {
      path: "audio/sfx/plane_01.mp3",
      volume: 1
    },
    plane_02: {
      path: "audio/sfx/plane_02.mp3",
      volume: 1,
      preload: false
    },
    fighter_01: {
      path: "audio/sfx/fighter_01.mp3",
      volume: 1
    },
    airdrop_chute_01: {
      path: "audio/sfx/airdrop_chute_01.mp3",
      volume: 1
    },
    airdrop_fall_01: {
      path: "audio/sfx/airdrop_fall_01.mp3",
      volume: 1
    },
    airdrop_crash_01: {
      path: "audio/sfx/airdrop_crash_01.mp3",
      volume: 1
    },
    airdrop_crash_02: {
      path: "audio/sfx/airdrop_crash_02.mp3",
      volume: 1
    },
    airdrop_open_01: {
      path: "audio/sfx/airdrop_open_01.mp3",
      volume: 1
    },
    airdrop_open_02: {
      path: "audio/sfx/airdrop_open_02.mp3",
      volume: 1
    },
    button_press_01: {
      path: "audio/sfx/button_press_01.mp3",
      volume: 1,
      maxInstances: 3
    },
    watering_01: {
      path: "audio/sfx/watering_01.mp3",
      volume: 1,
      maxInstances: 3,
      preload: false
    },
    piano_02: {
      path: "audio/sfx/piano_02.mp3",
      volume: 1,
      preload: false
    },
    footstep_08: {
      path: "audio/sfx/footstep_08.mp3",
      volume: 1,
      preload: false
    },
    footstep_09: {
      path: "audio/sfx/footstep_09.mp3",
      volume: 1,
      preload: false
    },
    howl_01: {
      path: "audio/sfx/howl_01.mp3",
      volume: 1,
      preload: false
    },
    wheel_control_01: {
      path: "audio/sfx/wheel_control_01.mp3",
      volume: 1,
      preload: false
    },
    log_01: {
      path: "audio/sfx/log_01.mp3",
      volume: 1,
      preload: false
    },
    log_02: {
      path: "audio/sfx/log_02.mp3",
      volume: 1,
      preload: false
    },
    log_03: {
      path: "audio/sfx/log_03.mp3",
      volume: 1,
      preload: false
    },
    log_04: {
      path: "audio/sfx/log_04.mp3",
      volume: 1,
      preload: false
    },
    log_05: {
      path: "audio/sfx/log_05.mp3",
      volume: 1,
      preload: false
    },
    log_06: {
      path: "audio/sfx/log_06.mp3",
      volume: 1,
      preload: false
    },
    log_11: {
      path: "audio/sfx/log_11.mp3",
      volume: 4,
      preload: false
    },
    log_12: {
      path: "audio/sfx/log_12.mp3",
      volume: 4,
      preload: false
    },
    log_13: {
      path: "audio/sfx/log_13.mp3",
      volume: 2,
      preload: false
    },
    log_14: {
      path: "audio/sfx/log_14.mp3",
      volume: 2,
      preload: false
    },
    ability_stim_01: {
      path: "audio/sfx/ability_stim_01.mp3",
      volume: 4
    },
    xp_drop_01: {
      path: "audio/sfx/xp_drop_01.mp3",
      volume: 1.25,
      preload: false
    },
    xp_drop_02: {
      path: "audio/sfx/xp_drop_02.mp3",
      volume: 1.25,
      preload: false
    },
    cluck_01: {
      path: "audio/sfx/cluck_01.mp3",
      volume: 1,
      preload: false
    },
    cluck_02: {
      path: "audio/sfx/cluck_02.mp3",
      volume: 1,
      preload: false
    },
    feather_01: {
      path: "audio/sfx/feather_01.mp3",
      volume: 1,
      preload: false
    }
  },
  ambient: {
    ambient_wind_01: {
      path: "audio/ambient/ambient_wind_01.mp3",
      volume: 1,
      loadPriority: 1
    },
    ambient_waves_01: {
      path: "audio/ambient/ambient_waves_01.mp3",
      volume: 1,
      loadPriority: 1
    },
    ambient_stream_01: {
      path: "audio/ambient/ambient_stream_01.mp3",
      volume: 1,
      loadPriority: 1
    },
    piano_music_01: {
      path: "audio/ambient/piano_music_01.mp3",
      volume: 1,
      preload: false
    },
    ambient_wind_02: {
      path: "audio/ambient/ambient_wind_02.mp3",
      volume: 1,
      preload: false
    },
    ambient_steam_01: {
      path: "audio/ambient/ambient_steam_01.mp3",
      volume: 1,
      preload: false
    },
    club_music_01: {
      path: "audio/ambient/club_music_01.mp3",
      volume: 1,
      preload: false
    },
    club_music_02: {
      path: "audio/ambient/club_music_02.mp3",
      volume: 1,
      preload: false
    },
    ambient_lab_01: {
      path: "audio/ambient/ambient_lab_01.mp3",
      volume: 0.2,
      preload: false
    }
  },
  ui: {
    ammo_pickup_01: {
      path: "audio/ui/ammo_pickup_01.mp3",
      volume: 1
    },
    clothes_pickup_01: {
      path: "audio/ui/clothes_pickup_01.mp3",
      volume: 1
    },
    bells_01: {
      path: "audio/sfx/plane_02.mp3",
      volume: 1,
      preload: false
    },
    helmet_pickup_01: {
      path: "audio/ui/helmet_pickup_01.mp3",
      volume: 1
    },
    chest_pickup_01: {
      path: "audio/ui/chest_pickup_01.mp3",
      volume: 1
    },
    gun_pickup_01: {
      path: "audio/ui/gun_pickup_01.mp3",
      volume: 1
    },
    scope_pickup_01: {
      path: "audio/ui/scope_pickup_01.mp3",
      volume: 1
    },
    pack_pickup_01: {
      path: "audio/ui/pack_pickup_01.mp3",
      volume: 1
    },
    soda_pickup_01: {
      path: "audio/ui/soda_pickup_01.mp3",
      volume: 1
    },
    pills_pickup_01: {
      path: "audio/ui/pills_pickup_01.mp3",
      volume: 1
    },
    bandage_pickup_01: {
      path: "audio/ui/bandage_pickup_01.mp3",
      volume: 1
    },
    healthkit_pickup_01: {
      path: "audio/ui/healthkit_pickup_01.mp3",
      volume: 1
    },
    frag_pickup_01: {
      path: "audio/ui/frag_pickup_01.mp3",
      volume: 1
    },
    snowball_pickup_01: {
      path: "audio/ui/snowball_pickup_01.mp3",
      volume: 1,
      preload: false
    },
    potato_pickup_01: {
      path: "audio/ui/potato_pickup_01.mp3",
      volume: 1,
      preload: false
    },
    heavy_pickup_01: {
      path: "audio/ui/heavy_pickup_01.mp3",
      volume: 1
    },
    pan_pickup_01: {
      path: "audio/ui/pan_pickup_01.mp3",
      volume: 1
    },
    perk_pickup_01: {
      path: "audio/ui/perk_pickup_01.mp3",
      volume: 1
    },
    xp_pickup_01: {
      path: "audio/ui/xp_pickup_01.mp3",
      volume: 1.5,
      preload: false
    },
    xp_pickup_02: {
      path: "audio/ui/xp_pickup_02.mp3",
      volume: 1.5,
      preload: false
    },
    ping_danger_01: {
      path: "audio/ui/ping_danger_01.mp3",
      volume: 1
    },
    ping_coming_01: {
      path: "audio/ui/ping_coming_01.mp3",
      volume: 1
    },
    ping_help_01: {
      path: "audio/ui/ping_help_01.mp3",
      volume: 1
    },
    ping_leader_01: {
      path: "audio/ui/ping_leader_01.mp3",
      volume: 1,
      preload: false
    },
    ping_airdrop_01: {
      path: "audio/ui/ping_airdrop_01.mp3",
      volume: 1
    },
    ping_airstrike_01: {
      path: "audio/ui/ping_airstrike_01.mp3",
      volume: 1
    },
    ping_unlock_01: {
      path: "audio/ui/ping_unlock_01.mp3",
      volume: 1,
      preload: false
    },
    emote_01: {
      path: "audio/ui/emote_01.mp3",
      volume: 1
    },
    trick_01: {
      path: "audio/ui/trick_01.mp3",
      volume: 1.5,
      preload: false
    },
    trick_02: {
      path: "audio/ui/trick_02.mp3",
      volume: 1.5,
      preload: false
    },
    trick_03: {
      path: "audio/ui/trick_03.mp3",
      volume: 1.5,
      preload: false
    },
    treat_01: {
      path: "audio/ui/treat_01.mp3",
      volume: 1,
      preload: false
    },
    loot_drop_01: {
      path: "audio/ui/loot_drop_01.mp3",
      volume: 1
    },
    notification_start_01: {
      path: "audio/ui/notification_start_01.mp3",
      volume: 1
    },
    notification_join_01: {
      path: "audio/ui/notification_join_01.mp3",
      volume: 1
    },
    leader_assigned_01: {
      path: "audio/ui/leader_assigned_01.mp3",
      volume: 1,
      maxInstances: 1
    },
    leader_dead_01: {
      path: "audio/ui/leader_dead_01.mp3",
      volume: 1.75,
      maxInstances: 1
    },
    lt_assigned_01: {
      path: "audio/ui/lt_assigned_01.mp3",
      volume: 1,
      preload: false,
      maxInstances: 1
    },
    medic_assigned_01: {
      path: "audio/ui/medic_assigned_01.mp3",
      volume: 2,
      preload: false,
      maxInstances: 1
    },
    marksman_assigned_01: {
      path: "audio/ui/marksman_assigned_01.mp3",
      volume: 2,
      preload: false,
      maxInstances: 1
    },
    recon_assigned_01: {
      path: "audio/ui/recon_assigned_01.mp3",
      volume: 1.5,
      preload: false,
      maxInstances: 1
    },
    grenadier_assigned_01: {
      path: "audio/ui/grenadier_assigned_01.mp3",
      volume: 2.5,
      preload: false,
      maxInstances: 1
    },
    bugler_assigned_01: {
      path: "audio/ui/bugler_assigned_01.mp3",
      volume: 2.5,
      preload: false,
      maxInstances: 1
    },
    last_man_assigned_01: {
      path: "audio/ui/last_man_assigned_01.mp3",
      volume: 1.75,
      preload: false,
      maxInstances: 1
    },
    helmet03_forest_pickup_01: {
      path: "audio/ui/helmet03_forest_pickup_01.mp3",
      volume: 1,
      maxInstances: 1,
      preload: false
    },
    kill_leader_assigned_01: {
      path: "audio/ui/kill_leader_assigned_01.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    kill_leader_assigned_02: {
      path: "audio/ui/kill_leader_assigned_02.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    kill_leader_dead_01: {
      path: "audio/ui/kill_leader_dead_01.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    kill_leader_dead_02: {
      path: "audio/ui/kill_leader_dead_02.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    spawn_01: {
      path: "audio/ui/spawn_01.mp3",
      volume: 3,
      preload: false
    }
  },
  music: {
    menu_music: {
      path: "audio/ambient/menu_music_01.mp3",
      volume: 1,
      loadPriority: 2
    }
  }
};
let ta = {
  footstep_grass: {
    channel: "sfx",
    sounds: ["footstep_grass_01", "footstep_grass_02"]
  },
  footstep_container: {
    channel: "sfx",
    sounds: ["footstep_metal_03"]
  },
  footstep_warehouse: {
    channel: "sfx",
    sounds: ["footstep_metal_01", "footstep_metal_02"]
  },
  footstep_house: {
    channel: "sfx",
    sounds: ["footstep_wood_02", "footstep_wood_03"]
  },
  footstep_shack: {
    channel: "sfx",
    sounds: ["footstep_wood_01"]
  },
  footstep_sand: {
    channel: "sfx",
    sounds: ["footstep_sand_01", "footstep_sand_02"]
  },
  footstep_water: {
    channel: "sfx",
    sounds: ["footstep_water_01", "footstep_water_02"]
  },
  footstep_tile: {
    channel: "sfx",
    sounds: ["footstep_tile_01", "footstep_tile_02"]
  },
  footstep_asphalt: {
    channel: "sfx",
    sounds: ["footstep_asphalt_01", "footstep_asphalt_02"]
  },
  footstep_brick: {
    channel: "sfx",
    sounds: ["footstep_brick_01"]
  },
  footstep_bunker: {
    channel: "sfx",
    sounds: ["footstep_metal_04", "footstep_metal_05"]
  },
  footstep_stone: {
    channel: "sfx",
    sounds: ["footstep_stone_01"]
  },
  footstep_carpet: {
    channel: "sfx",
    sounds: ["footstep_carpet_01"]
  },
  player_bullet_hit: {
    channel: "hits",
    sounds: ["player_bullet_hit_01"]
  },
  metal_punch: {
    channel: "hits",
    sounds: ["metal_punch_hit_01", "metal_punch_hit_02"]
  },
  cloth_punch: {
    channel: "hits",
    sounds: ["cloth_hit_01"]
  },
  cloth_bullet: {
    channel: "hits",
    sounds: ["cloth_hit_02"]
  },
  organic_hit: {
    channel: "hits",
    sounds: ["organic_hit_01"]
  },
  piano_hit: {
    channel: "hits",
    sounds: ["piano_hit_01", "piano_hit_02"]
  },
  wall_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_01"]
  },
  wall_wood_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_02"]
  },
  wall_brick_bullet: {
    channel: "hits",
    sounds: ["brick_bullet_hit_01"]
  },
  stone_bullet: {
    channel: "hits",
    sounds: ["stone_bullet_hit_01"]
  },
  barrel_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_03"]
  },
  pan_bullet: {
    channel: "hits",
    sounds: ["pan_bullet_hit_01"]
  },
  silo_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_04"]
  },
  toilet_porc_bullet: {
    channel: "hits",
    sounds: ["toilet_bullet_hit_01"]
  },
  toilet_metal_bullet: {
    channel: "hits",
    sounds: ["toilet_bullet_hit_02"]
  },
  glass_bullet: {
    channel: "hits",
    sounds: ["glass_bullet_hit_01"]
  },
  cobalt_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_02"]
  },
  concrete_hit: {
    channel: "hits",
    sounds: ["concrete_hit_01"]
  },
  wood_prop_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_03"]
  },
  wood_crate_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_04"]
  },
  ammo_crate_bullet: {
    channel: "hits",
    sounds: ["plastic_bullet_hit_01"]
  },
  bush_bullet: {
    channel: "hits",
    sounds: ["bush_bullet_hit_01"]
  },
  tree_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_01"]
  },
  player_bullet_grunt: {
    channel: "hits",
    sounds: ["player_bullet_hit_02"]
  },
  bullet_whiz: {
    channel: "sfx",
    sounds: ["bullet_whiz_01", "bullet_whiz_02", "bullet_whiz_03"]
  },
  frag_grass: {
    channel: "hits",
    sounds: ["frag_grass_01"]
  },
  frag_sand: {
    channel: "hits",
    sounds: ["frag_sand_01"]
  },
  frag_water: {
    channel: "hits",
    sounds: ["frag_water_01"]
  },
  kill_leader_assigned: {
    channel: "ui",
    sounds: ["kill_leader_assigned_01", "kill_leader_assigned_02"]
  },
  kill_leader_dead: {
    channel: "ui",
    sounds: ["kill_leader_dead_01", "kill_leader_dead_02"]
  },
  cluck: {
    channel: "sfx",
    sounds: ["cluck_01", "cluck_02"]
  }
};
let ia = {
  activePlayer: {
    volume: 0.5,
    maxRange: 48,
    list: "players",
    type: "sound"
  },
  otherPlayers: {
    volume: 0.5,
    maxRange: 48,
    list: "players",
    type: "sound"
  },
  hits: {
    volume: 0.4,
    maxRange: 48,
    list: "hits",
    type: "sound"
  },
  sfx: {
    volume: 1,
    maxRange: 48,
    list: "sfx",
    type: "sound"
  },
  ambient: {
    volume: 1,
    maxRange: 1,
    list: "ambient",
    type: "sound"
  },
  ui: {
    volume: 0.75,
    maxRange: 48,
    list: "ui",
    type: "sound"
  },
  music: {
    volume: 1,
    maxRange: 1,
    list: "music",
    type: "music"
  }
};
let ra = {
  cathedral: {
    path: "audio/reverb/cathedral_01.mp3",
    volume: 0.7,
    stereoSpread: 0.004
  },
  cave: {
    path: "audio/reverb/cave_mono_01.mp3",
    volume: 0.7,
    echoVolume: 0.5,
    echoDelay: 0.25,
    echoLowPass: 800,
    stereoSpread: 0.004
  }
};
let fe = {
  Sounds: ea,
  Groups: ta,
  Channels: ia,
  Reverbs: ra
};
let ri = 0.003;
let pt = 0.5;
class aa {
  mute = false;
  masterVolume = 1;
  soundVolume = 1;
  musicVolume = 1;
  baseVolume = 0.5;
  sounds = {};
  loadedFiles = {};
  preloadedSounds = false;
  cameraPos = n.create(0, 0);
  activeLayer = 0;
  underground = false;
  soundInstances = [];
  letructor(e) {
    ye.Sound.volume = 0.5;
    ye.Sound.on("fileload", this.loadHandler, this);
  }
  preloadSounds() {
    if (!this.preloadedSounds) {
      this.preloadedSounds = true;
      let e = {};
      let t = Object.keys(fe.Sounds);
      for (let s = 0; s < t.length; s++) {
        let m = t[s];
        let d = fe.Sounds[m];
        let h = Object.keys(d);
        for (let p = 0; p < h.length; p++) {
          let w = h[p];
          if (e[w] !== undefined) {
            console.log(`Sound ${w} defined multiple times!`);
          }
          e[w] = true;
        }
      }
      let i = [];
      let r = Object.keys(fe.Channels);
      for (let s = 0; s < r.length; s++) {
        let m = r[s];
        let d = fe.Channels[m];
        let h = fe.Sounds[d.list];
        let p = Object.keys(h);
        for (let w = 0; w < p.length; w++) {
          let f = p[w];
          let S = h[f];
          if (S.preload === undefined || S.preload) {
            let x = {
              canCoalesce: S.canCoalesce,
              channels: S.maxInstances,
              volume: S.volume
            };
            i.push({
              name: f,
              channel: m,
              path: S.path,
              options: x,
              priority: S.loadPriority || 0
            });
          }
        }
      }
      i.sort((s, m) => m.priority - s.priority);
      for (let s = 0; s < i.length; s++) {
        let m = i[s];
        this.loadSound(m);
      }
      let a = fe.Reverbs;
      let l = Object.keys(a);
      for (let s = 0; s < l.length; s++) {
        let m = l[s];
        let d = a[m];
        ye.Sound.registerReverb(d.path, m, d);
      }
    }
  }
  loadSound(e) {
    let t = e.name + e.channel;
    if (!this.sounds[t]) {
      ye.Sound.registerSound(e.path, t, e.options);
      this.sounds[t] = {
        path: e.path,
        name: e.name,
        channel: e.channel
      };
    }
  }
  loadHandler(e) {
    this.loadedFiles[e] = true;
  }
  update(e) {
    for (let r = this.soundInstances.length - 1; r >= 0; r--) {
      let a = this.soundInstances[r];
      if (a.instance.playState == "playFinished" || a.instance.playState == "playInterrupted" || a.instance.playState == "playFailed") {
        this.soundInstances.splice(r, 1);
      }
    }
    let t = [0, 1, 1 / 3, 2 / 3];
    let i = this.underground ? t[this.activeLayer] : 0;
    ye.Sound.setReverbs({
      cathedral: i
    });
    ye.Sound.update(e);
  }
  playSound(e, t = {}) {
    if (!e || e == "none") {
      return null;
    }
    t.channel = t.channel || "activePlayer";
    t.startSilent = t.startSilent || false;
    t.forceStart = t.forceStart || false;
    t.loop = t.loop || false;
    t.soundPos = t.soundPos || null;
    t.fallOff = t.fallOff || 0;
    t.filter = t.filter || "";
    t.delay = t.delay || 0;
    t.ignoreMinAllowable = t.ignoreMinAllowable || false;
    t.rangeMult = t.rangeMult || 1;
    t.offset = t.offset || 0;
    t.ambient = t.channel == "ambient" || t.channel == "music";
    t.detune = t.detune || 0;
    t.volumeScale = t.volumeScale || 1;
    let i = null;
    let r = fe.Channels[t.channel];
    if (r && (!this.mute || t.forceStart)) {
      let a = this.baseVolume * 1 * this.getTypeVolume(r.type) * t.volumeScale;
      let l = t.layer !== undefined && !g.sameAudioLayer(t.layer, this.activeLayer);
      let s = t.filter ? l || t.forceFilter ? t.filter : "reverb" : "none";
      if (t.channel != "activePlayer" && t.soundPos) {
        let m = n.sub(this.cameraPos, t.soundPos);
        let d = n.length(m);
        let h = r.maxRange * t.rangeMult;
        if (z.eqAbs(h, 0)) {
          h = 1;
        }
        let p = z.clamp(Math.abs(d / h), 0, 1);
        let w = Math.pow(1 - p, 1 + t.fallOff * 2);
        let f = r.volume * w * a;
        f = l ? f * pt : f;
        if (f > ri || t.ignoreMinAllowable) {
          let S = z.clamp(m.x / h * -1, -1, 1);
          i = ye.Sound.play(e + t.channel, {
            filter: s,
            loop: t.loop ? -1 : 0,
            volume: t.startSilent ? 0 : f,
            pan: S,
            delay: t.delay,
            offset: t.offset,
            ambient: t.ambient,
            detune: t.detune
          });
        }
      } else {
        let m = r.volume * a;
        m = l ? m * pt : m;
        i = ye.Sound.play(e + t.channel, {
          filter: s,
          loop: t.loop ? -1 : 0,
          volume: t.startSilent ? 0 : m,
          delay: t.delay,
          offset: t.offset,
          ambient: t.ambient,
          detune: t.detune
        });
      }
      if (i && (t.loop || t.channel == "music")) {
        let m = t.channel == "music" ? "music" : "sound";
        this.soundInstances.push({
          instance: i,
          type: m
        });
      }
    }
    return i;
  }
  playGroup(e, t = {}) {
    let i = fe.Groups[e];
    if (i) {
      let r = i.sounds;
      let a = Math.floor(g.random(0, r.length));
      t.channel = i.channel;
      return this.playSound(r[a], t);
    }
    return null;
  }
  updateSound(e, t, i, r = {}) {
    r.fallOff = r.fallOff || 0;
    r.rangeMult = r.rangeMult || 1;
    r.ignoreMinAllowable = r.ignoreMinAllowable || false;
    r.volumeScale = r.volumeScale || 1;
    let a = fe.Channels[t];
    if (e && a) {
      let l = this.baseVolume * 1 * this.getTypeVolume(a.type) * r.volumeScale;
      let s = n.sub(this.cameraPos, i);
      let m = n.length(s);
      let d = a.maxRange * r.rangeMult;
      if (z.eqAbs(d, 0)) {
        d = 1;
      }
      let h = z.clamp(Math.abs(m / d), 0, 1);
      let p = Math.pow(1 - h, 1 + r.fallOff * 2);
      let w = a.volume * p * l;
      w = r.layer === undefined || g.sameAudioLayer(r.layer, this.activeLayer) ? w : w * pt;
      if (w > ri || r.ignoreMinAllowable) {
        let S = z.clamp(s.x / d * -1, -1, 1);
        e.volume = w;
        e.pan = S;
      }
    }
  }
  setMasterVolume(e) {
    e = z.clamp(e, 0, 1);
    ye.Sound.volume = e;
  }
  _setInstanceTypeVolume(e, t) {
    t = z.clamp(t, 0, 1);
    let i = this.getTypeVolume(e);
    let r = i > 0.0001 ? t / i : 0;
    for (let a = 0; a < this.soundInstances.length; a++) {
      let l = this.soundInstances[a];
      if (l.type == e) {
        l.instance.volume *= r;
      }
    }
  }
  setSoundVolume(e) {
    this._setInstanceTypeVolume("sound", e);
    this.soundVolume = e;
  }
  setMusicVolume(e) {
    this._setInstanceTypeVolume("music", e);
    this.musicVolume = e;
  }
  setVolume(e, t, i) {
    if (e) {
      i = i || "sound";
      let r = this.getTypeVolume(i);
      e.volume = t * r;
    }
  }
  getVolume(e) {
    if (e) {
      return e.volume;
    } else {
      return 0;
    }
  }
  setMute(e) {
    this.mute = e;
    ye.Sound.setMute(this.mute);
    return this.mute;
  }
  muteToggle() {
    return this.setMute(!this.mute);
  }
  stopSound(e) {
    e?.stop();
  }
  stopAll() {
    ye.Sound.stop();
  }
  allLoaded() {
    let e = Object.keys(this.sounds);
    for (let t = 0; t < e.length; t++) {
      let i = this.sounds[e[t]];
      if (!this.isSoundLoaded(i.name, i.channel)) {
        return false;
      }
    }
    return true;
  }
  isSoundLoaded(e, t) {
    let i = this.sounds[e + t];
    return i && this.loadedFiles[i.path];
  }
  isSoundPlaying(e) {
    return !!e && e.playState == ye.Sound.PLAY_SUCCEEDED;
  }
  getSoundDefVolume(e, t) {
    let i = fe.Sounds[t][e];
    let r = fe.Channels[t];
    if (i && r) {
      return i.volume * r.volume;
    } else {
      return 1;
    }
  }
  getTypeVolume(e) {
    switch (e) {
      case "music":
        return this.musicVolume;
      case "sound":
        return this.soundVolume;
      default:
        return this.soundVolume;
    }
  }
}
let sa = {
  ENV: "website",
  muteAudio: false,
  masterVolume: 1,
  soundVolume: 1,
  musicVolume: 1,
  highResTex: true,
  _interpolation: false,
  screenShake: true,
  anonPlayerNames: false,
  touchMoveStyle: "anywhere",
  touchAimStyle: "anywhere",
  touchAimLine: true,
  profile: null,
  playerName: "",
  region: "na",
  gameModeIdx: 2,
  teamAutoFill: true,
  language: "en",
  prerollGamesPlayed: 0,
  totalGamesPlayed: 0,
  promptAppRate: true,
  regionSelected: false,
  lastNewsTimestamp: 0,
  perkModeRole: "",
  loadout: le.defaultLoadout(),
  sessionCookie: "",
  binds: "",
  version: 1
};
class oa {
  loaded = false;
  localStorageAvailable = true;
  config = {};
  onModifiedListeners = [];
  async load(e) {
    let t = r => {
      let a = {};
      try {
        a = JSON.parse(r);
      } catch {}
      this.config = g.mergeDeep({}, sa, a);
      this.checkUpgradeConfig();
      this.onModified();
      this.loaded = true;
    };
    let i = "{}";
    try {
      i = localStorage.getItem("surviv_config");
    } catch {
      this.localStorageAvailable = false;
    }
    t(i);
    if (Br()) {
      this.config.ENV = "CrazyGames";
      await Nr();
    } else if (Vr()) {
      this.config.ENV = "POKI";
      await Fr();
    } else if (qr()) {
      this.config.ENV = "GameMonetize";
      await jr();
    } else {
      this.config.ENV = "website";
      document.getElementById("btn-start-fullscreen").style.display = "inline-block";
      document.getElementById("btn-game-fullscreen").style.display = "block";
      document.getElementById("left-column").style.display = "block";
    }
    e();
    if (this.config.ENV === "POKI") {
      window.PokiSDK.gameLoadingFinished();
    }
  }
  store() {
    let e = JSON.stringify(this.config);
    if (this.localStorageAvailable) {
      try {
        localStorage.setItem("surviv_config", e);
      } catch {}
    }
  }
  set(e, t) {
    if (!e) {
      return;
    }
    let i = e.split(".");
    let r = this.config;
    while (i.length > 1) {
      r = r[i.shift()];
    }
    r[i.shift()] = t;
    this.store();
    this.onModified(e);
  }
  get(e) {
    if (!e) {
      return;
    }
    let t = e.split(".");
    let i = this.config;
    for (let r = 0; r < t.length; r++) {
      i = i[t[r]];
    }
    return i;
  }
  addModifiedListener(e) {
    this.onModifiedListeners.push(e);
  }
  onModified(e) {
    for (let t = 0; t < this.onModifiedListeners.length; t++) {
      this.onModifiedListeners[t](e);
    }
  }
  checkUpgradeConfig() {}
}
let la = JSON.parse(`["2 girls 1 cup","2g1c","4r5e","5h1t","5hit","a_s_s","a55","a55hole","acrotomophilia","aeolus","ahole","alabama hot pocket","alaskan pipeline","anal","analprobe","anilingus","anus","apeshit","ar5e","areola","areole","arian","arrse","arse","arsehole","aryan","ass","ass hole","assbag","assbandit","assbang","assbanged","assbanger","assbangs","assbite","assclown","asscock","asscracker","asses","assface","assfuck","assfucker","ass-fucker","assfukka","assgoblin","assh0le","asshat","ass-hat","asshead","assho1e","asshole","assholes","asshopper","ass-jabber","assjacker","asslick","asslicker","assmaster","assmonkey","assmunch","assmuncher","assnigger","asspirate","ass-pirate","assshit","assshole","asssucker","asswad","asswhole","asswipe","asswipes","auto erotic","autoerotic","axwound","azazel","azz","b!tch","b00bs","b17ch","b1tch","babe","babeland","babes","baby batter","baby juice","balls","ball gag","ball gravy","ball kicking","ball licking","ball sack","ball sucking","ballbag","ballsack","bampot","bang","bangbros","banger","bareback","barely legal","barenaked","barf","bastard","bastardo","bastards","bastinado","bawdy","bbw","bdsm","beaner","beaners","beardedclam","beastial","beastiality","beatch","beater","beaver cleaver","beaver lips","beeyotch","bellend","beotch","bestial","bestiality","bi+ch","biatch","big black","big breasts","big knockers","big tits","bigtits","bimbo","bimbos","birdlock","bitch","bitchass","bitched","bitcher","bitchers","bitches","bitchin","bitching","bitchtits","bitchy","black cock","blonde action","blonde on blonde action","blow job","blow your load","blowjob","blowjobs","blue waffle","blumpkin","bod","bodily","boink","boiolas","bollock","bollocks","bollok","bollox","bondage","boned","boner","boners","bong","boob","boobies","boobs","booby","booger","bookie","booobs","boooobs","booooobs","booooooobs","bootee","bootie","booty","booty call","booze","boozer","boozy","bosom","bosomy","bra","brassiere","breast","breasts","breeder","brotherfucker","brown showers","brunette action","buceta","bugger","bukkake","bull shit","bulldyke","bullet vibe","bullshit","bullshits","bullshitted","bullturds","bum","bumblefuck","bung","bung hole","bunghole","bunny fucker","busty","butt","butt fuck","butt plug","buttcheeks","buttfuck","buttfucka","buttfucker","butthole","buttmuch","butt-pirate","buttplug","c.0.c.k","c.o.c.k.","c.u.n.t","c0ck","c-0-c-k","c0cksucker","caca","cahone","camel toe","cameltoe","camgirl","camslut","camwhore","carpet muncher","carpetmuncher","cawk","cervix","chesticle","chinc","chincs","chink","choad","chocolate rosebuds","chode","chodes","cipa","circlejerk","cl1t","cleveland steamer","climax","clit","clitface","clitfuck","clitoris","clitorus","clits","clitty","clover clamps","clusterfuck","cnut","cocain","cocaine","cock","c-o-c-k","cock sucker","cockass","cockbite","cockblock","cockburger","cockeye","cockface","cockfucker","cockhead","cockholster","cockjockey","cockknocker","cockknoker","cocklump","cockmaster","cockmongler","cockmongruel","cockmonkey","cockmunch","cockmuncher","cocknose","cocknugget","cocks","cockshit","cocksmith","cocksmoke","cocksmoker","cocksniffer","cocksuck","cocksucked","cocksucker","cock-sucker","cocksucking","cocksucks","cocksuka","cocksukka","cockwaffle","coital","cok","cokmuncher","coksucka","commie","condom","coochie","coochy","coon","coons","cooter","coprolagnia","coprophilia","corksucker","cornhole","cox","crabs","crack","crackwhore","crap","crappy","creampie","crotte","cum","cumbubble","cumdumpster","cumguzzler","cumjockey","cummer","cummin","cumming","cums","cumshot","cumshots","cumslut","cumstain","cumtart","cunilingus","cunillingus","cunnie","cunnilingus","cunny","cunt","c-u-n-t","cuntass","cuntface","cunthole","cunthunter","cuntlick","cuntlicker","cuntlicking","cuntrag","cunts","cuntslut","cyalis","cyberfuc","cyberfuck","cyberfucked","cyberfucker","cyberfuckers","cyberfucking","d0ng","d0uch3","d0uche","d1ck","d1ld0","d1ldo","dago","dagos","darkie","damn","damned","dammit","date rape","daterape","dawgie-style","deep throat","deepthroat","deggo","dendrophilia","dick","dickbag","dickbeaters","dickdipper","dickface","dickflipper","dickfuck","dickfucker","dickhead","dickheads","dickhole","dickish","dick-ish","dickjuice","dickmilkÂ ","dickmonger","dickripper","dicks","dicksipper","dickslap","dick-sneeze","dicksuck","dicksucker","dicksucking","dicktickler","dickwad","dickweasel","dickweed","dickwhipper","dickwod","dickzipper","diddle","dike","dildo","dildos","diligaf","dillweed","dimwit","dingle","dingleberries","dingleberry","dink","dinks","dipship","dipshit","dirsa","dirty pillows","dirty sanchez","dlck","dog style","dog-fucker","doggie style","doggiestyle","doggie-style","doggin","dogging","doggy style","doggystyle","doggy-style","dolcett","domination","dominatrix","dommes","dong","donkey punch","donkeyribber","doochbag","doofus","dookie","doosh","dopey","double dong","double penetration","doublelift","douch3","douche","douchebag","douchebags","douche-fag","douchewaffle","douchey","dp action","drunk","dry hump","duche","dumass","dumb ass","dumbass","dumbasses","dumbcunt","dumbfuck","dumbshit","dummy","dumshit","dvda","dyke","dykes","eat my ass","ecchi","ejaculate","ejaculated","ejaculates","ejaculating","ejaculatings","ejaculation","ejakulate","enlargement","erect","erection","erotic","erotism","escort","essohbee","eunuch","extacy","extasy","f u c k","f u c k e r","f.u.c.k","f_u_c_k","f4nny","fack","fag","fagbag","fagfucker","fagg","fagged","fagging","faggit","faggitt","faggot","faggotcock","faggs","fagot","fagots","fags","fagtard","faig","faigt","fanny","fannybandit","fannyflaps","fannyfucker","fanyy","fartknocker","fatass","fcuk","fcuker","fcuking","fecal","feck","fecker","felch","felcher","felching","fellate","fellatio","feltch","feltcher","female squirting","femdom","figging","fingerbang","fingerfuck","fingerfucked","fingerfucker","fingerfuckers","fingerfucking","fingerfucks","fingering","fisted","fistfuck","fistfucked","fistfucker","fistfuckers","fistfucking","fistfuckings","fistfucks","fisting","fisty","flamer","flange","floozy","foad","foah","fondle","foobar","fook","fooker","foot fetish","footjob","foreskin","freex","frigg","frigga","frotting","fubar","fuck","f-u-c-k","fuck buttons","fuck off","fucka","fuckass","fuckbag","fuckboy","fuckbrain","fuckbutt","fuckbutter","fucked","fucker","fuckers","fuckersucker","fuckface","fuckhead","fuckheads","fuckhole","fuckin","fucking","fuckings","fuckingshitmotherfucker","fuckme","fucknugget","fucknut","fucknutt","fuckoff","fucks","fuckstick","fucktard","fuck-tard","fucktards","fucktart","fucktwat","fuckup","fuckwad","fuckwhit","fuckwit","fuckwitt","fudge packer","fudgepacker","fuk","fuker","fukker","fukkin","fuks","fukwhit","fukwit","futanari","fux","fux0r","fvck","fxck","gae","gai","gang bang","gangbang","gangbanged","gangbangs","ganja","gay","gay sex","gayass","gaybob","gaydo","gayfuck","gayfuckist","gaylord","gays","gaysex","gaytard","gaywad","genitals","gey","gfy","ghay","ghey","giant cock","gigolo","girl on","girl on top","girls gone wild","glans","goatcx","goatse","god damn","godamn","godamnit","goddam","god-dam","goddammit","goddamn","goddamned","god-damned","goddamnit","gokkun","golden shower","goldenshower","gonad","gonads","goo girl","gooch","goodpoop","gook","gooks","goregasm","gringo","grope","group sex","gspot","g-spot","gtfo","guido","guro","h0m0","h0mo","hand job","handjob","hard core","hard on","hardcore","hardcoresex","he11","heeb","hemp","hentai","heroin","herp","herpes","herpy","heshe","hitler","hiv","ho","hoar","hoare","hobag","hoe","hoer","hom0","homey","homo","homodumbshit","homoerotic","homoey","honkey","honky","hooch","hookah","hooker","hoor","hootch","hooter","hooters","hore","horniest","horny","hot carl","hot chick","hotsex","how to kill","how to murder","huge fat","hump","humped","humping","hussy","hymen","inbred","incest","injun","intercourse","j3rk0ff","jack Off","jackass","jackhole","jackoff","jack-off","jaggi","jagoff","jail bait","jailbait","jap","japs","jelly donut","jerk","jerk off","jerk0ff","jerkass","jerked","jerkoff","jerk-off","jigaboo","jiggaboo","jiggerboo","jism","jiz","jizm","jizz","jizzed","juggs","jungle bunny","junglebunny","junkie","junky","kawk","kike","kikes","kinbaku","kinkster","kinky","kkk","knob","knobbing","knobead","knobed","knobend","knobhead","knobjocky","knobjokey","kock","kondum","kondums","kooch","kooches","kootch","kraut","kum","kummer","kumming","kums","kunilingus","kunja","kunt","kyke","l3i+ch","l3itch","labia","lameass","lardass","leather restraint","leather straight jacket","lech","lemon party","leper","lesbian","lesbians","lesbo","lesbos","lez","lezbian","lezbians","lezbo","lezbos","lezzie","lezzies","lezzy","lmao","lmfao","loin","loins","lolita","lovemaking","lube","lust","lusting","lusty","m0f0","m0fo","m45terbate","ma5terb8","ma5terbate","make me come","male squirting","mams","masochist","massa","masterb8","masterbat","masterbat3","masterbate","master-bate","masterbating","masterbation","masterbations","masturbate","masturbating","masturbation","maxi","mcfagget","menage a trois","menses","menstruate","menstruation","meth","m-fucking","mick","milf","minge","missionary position","mof0","mofo","mo-fo","molest","moolie","moron","mothafuck","mothafucka","mothafuckas","mothafuckaz","mothafucked","mothafucker","mothafuckers","mothafuckin","mothafucking","mothafuckings","mothafucks","mother fucker","motherfuck","motherfucka","motherfucked","motherfucker","motherfuckers","motherfuckin","motherfucking","motherfuckings","motherfuckka","motherfucks","mound of venus","mr hands","mtherfucker","mthrfucker","mthrfucking","muff","muff diver","muffdiver","muffdiving","munging","murder","mutha","muthafecker","muthafuckaz","muthafucker","muthafuckker","muther","mutherfucker","mutherfucking","muthrfucking","n1gga","n1gger","nad","nads","naked","nambla","napalm","nappy","nawashi","nazi","nazism","negro","neonazi","nig nog","nigaboo","nigg3r","nigg4h","nigga","niggah","niggas","niggaz","nigger","niggers","niggle","niglet","nimphomania","nimrod","ninny","nipple","nipples","nob","nob jokey","nobhead","nobjocky","nobjokey","nooky","nsfw images","nude","nudity","numbnuts","nut sack","nutsack","nympho","nymphomania","octopussy","omorashi","one cup two girls","one guy one jar","opiate","opium","oral","orally","organ","orgasim","orgasims","orgasm","orgasmic","orgasms","orgies","orgy","ovary","ovum","ovums","p.u.s.s.y.","p0rn","paddy","paedophile","paki","panooch","pantie","panties","panty","pastie","pasty","pawn","pcp","pecker","peckerhead","pedo","pedobear","pedophile","pedophilia","pedophiliac","peepee","pegging","penetrate","penetration","penial","penile","penis","penisbanger","penisfucker","penispuffer","perversion","peyote","phalli","phallic","phone sex","phonesex","phuck","phuk","phuked","phuking","phukked","phukking","phuks","phuq","piece of shit","pigfucker","pillowbiter","pimp","pimpis","pinko","piss pig","pissed","pissed off","pisser","pissers","pisses","pissflaps","pissin","pissing","pissoff","piss-off","pisspig","playboy","pleasure chest","pms","polack","pole smoker","polesmoker","pollock","ponyplay","poof","poon","poonani","poonany","poontang","poop","poop chute","poopchute","poopuncher","porch monkey","porchmonkey","porn","porno","pornography","pornos","potty","prick","pricks","prig","prince albert piercing","pron","prostitute","prude","pthc","pube","pubes","pubic","pubis","punanny","punany","punkass","punky","punta","puss","pusse","pussi","pussies","pussy","pussylicking","pussypounder","pussys","pust","puto","queaf","queef","queer","queerbait","queerhole","queero","queers","quicky","quim","racy","raghead","raging boner","rape","raped","raper","raping","rapist","raunch","rectal","rectum","rectus","reefer","reetard","reich","renob","retard","retarded","reverse cowgirl","revue","rimjaw","rimjob","rimming","ritard","rosy palm","rosy palm and her 5 sisters","rtard","r-tard","rump","rumprammer","ruski","rusty trombone","s hit","s&m","s.h.i.t.","s.o.b.","s_h_i_t","s0b","sadism","sadist","sand nigger","sandler","sandnigger","sanger","santorum","scag","scantily","scat","schizo","schlong","scissoring","screw","screwed","screwing","scroat","scrog","scrot","scrote","scrotum","scrud","scum","seaman","seamen","seduce","seks","semen","sex","sexo","sexual","sexy","sh!+","sh!t","sh1t","s-h-1-t","shag","shagger","shaggin","shagging","shamedame","shaved beaver","shaved pussy","shemale","shi+","shibari","shit","s-h-i-t","shitass","shitbag","shitbagger","shitblimp","shitbrains","shitbreath","shitcanned","shitcunt","shitdick","shite","shiteater","shited","shitey","shitface","shitfaced","shitfuck","shitfull","shithead","shithole","shithouse","shiting","shitings","shits","shitspitter","shitstain","shitt","shitted","shitter","shitters","shittiest","shitting","shittings","shitty","shiz","shiznit","shota","shrimping","sissy","skag","skank","skeet","skullfuck","slag","slanteye","slave","sleaze","sleazy","slut","slutbag","slutdumper","slutkiss","sluts","smeg","smegma","smut","smutty","snatch","snowballing","snuff","s-o-b","sodom","sodomize","sodomy","son-of-a-bitch","souse","soused","spac","sperm","spic","spick","spik","spiks","splooge","splooge moose","spooge","spook","spread legs","spunk","steamy","stfu","stiffy","stoned","strap on","strapon","strappado","strip","strip club","stroke","stupid","style doggy","suck","suckass","sucked","sucking","suckmydick","sucks","suicide girls","sultry women","sumofabiatch","swastika","swinger","t1t","t1tt1e5","t1tties","tainted love","tampon","tard","taste my","tawdry","tea bagging","teabagging","teat","teets","teez","terd","teste","testee","testes","testical","testicle","testis","threesome","throating","thrust","thug","thundercunt","tied up","tight white","tinkle","tit","titfuck","titi","tits","titt","tittie5","tittiefucker","titties","titty","tittyfuck","tittyfucker","tittywank","titwank","toke","tongue in a","toots","topless","tosser","towelhead","tramp","tranny","transsexual","trashy","tribadism","tub girl","tubgirl","turd","tush","tushy","tw4t","twat","twathead","twatlips","twats","twatty","twatwaffle","twink","twinkie","two girls one cup","twunt","twunter","ugly","unclefucker","undies","undressing","unwed","upskirt","urethra play","urinal","urine","urophilia","uterus","uzi","v14gra","v1gra","vag","vagina","vajayjay","va-j-j","valium","venus mound","viagra","vibrator","violet wand","virgin","vixen","vjayjay","vodka","vomit","vorarephilia","voyeur","vulgar","vulva","w00se","wad","wang","wank","wanker","wankjob","wanky","wazoo","wedgie","weed","weenie","weewee","weiner","weirdo","wench","wet dream","wetback","wh0re","wh0reface","white power","whitey","whiz","whoar","whoralicious","whore","whorealicious","whorebag","whored","whoreface","whorehopper","whorehouse","whores","whoring","wigger","willies","willy","womb","woody","wop","wrapping men","wrinkled starfish","wtf","xrated","x-rated","xxx","yaoi","yeasty","yellow showers","yiffy","yobbo","zoophile","zoophilia","zubb","(ock","[ock",".f uc k","@rse","@rsehol","@unt","[unt","< unt","<.unt","<loth head","<lothhead","<nuts","<o(k","<o<&nbsp;k","<o<ksu<ka","<o<ksu<ker","<oon","<u&nbsp;nt","<u&nbsp;nts","<u*t","<unt","<unt's","<vnt","<vnts","a$$hole","a$$hole$","a$$holes","a.rse","a+*hole","ar$ehole","ar$hole","ar$holes","ar5h0le","ar5h0les","ars3","arse hole","arseh0le","arseh0les","arseho","arsehol","arseholes","arsewipe","arsh0le","arshole","arsholes","ashole","ass h0le","assh0les","b.astard","b.ollocks","b.ugger","b@st@rd","b@st@rds","b00tha","b00thas","b0ll0cks","b0llocks","b3llend","basterd","basyard","basyards","batty boy","batty&nbsp;boi","batty&nbsp;boy","beef curtains","belend","bell end","bell.end","bell-end","bin dippers","bin-dippers","bo11ocks","boabie sooking","boaby sooking","boll0cks","bolocks","bolox","bootha","boothas","bum bandit","bum hole","bumbandit","bum-bandit","bumh0l3","bumh0le","bumhol3","bumhole","c *nt!","c *nts!","c u n t","c u n t.","c#nt","c&nbsp;u&nbsp;n&nbsp;t","c* nt","c.unt","c.untyb.ollocks","c_u_n_t","c00n","c0cksucka","cahnt","cahnts","clunge","cnuts","co(k","coc&nbsp;k","cocksucka","cocksuckers","cocksuckers.","cossor ali","cretin","cripple","critest","cu&nbsp;nt","cu&nbsp;nts","cunting","cunt's","cvnt","cvnts","d1ck!","d1ckh@ed","darky","dick&nbsp;head","dumbfucker","dxxkhead","ethnics","f ck","f o a d","f off","f u c ked","f uc k","f uc king","f uck","f###","f##k","f##king","f#cked","f$cks","f&nbsp;cked","f&nbsp;u&nbsp;c&nbsp;k","f&nbsp;uck","f&nbsp;ucker","f&nbsp;ucking","f()()k","f()()ker","f()()king","f*#kin'","f*&k","f*&k!ng","f.o.a.d","f.o.a.d.","f.u.c.k.","f.uck","f@@@in","f@@@ing","f@ck","f@g","f@gs","f[_]cker","f[_]cking","f^^k","f^^ked","f^^ker","f^^king","f^ck","f^cker","f^cking","f__kin","f__king","f<uk","f>>k","f00k","f00ked","f0oked","fackin","facking","f4ggot","f4gg0t","fagg0t","faggits","fagits","fck","f'ck","fck&nbsp;ing","fck1ng","fckeud","fckin","fcking","fcks","fckw1t","fckwit","fcuked","fcukin","fcuks","feckin","fecking","f---ed","fekking","felched","feltching","f-----g","f---ing","f--k","fkin","fking","flucknuts","fo0ked","f-o-a-d","fookd","fooked","fookin","fookin'","fooking","frig","frigging","frigin","friging","fu <k","fu&kin","fu&king","fu&nbsp;ck","fu&nbsp;cked","fu&nbsp;cker","fu&nbsp;cking","fu(k","fu(ker","fu(kers","fu.ck","fu@k","fu@ker","fu^k","fu^ker","fu^king","fu< kin","fu<k","f-u-<-k","fu<ked","fu<ker","fu<kin","fu<king","fu<kker","fu<kr","fu<ks","fuc&nbsp;ked","fuc&nbsp;ker","fuc&nbsp;king","f-uck","fÃºck","fÃºÃ§k","fÃ¹ck","fÃ»ck","fÃ¼ck","fuck&nbsp;ed","fuck&nbsp;ing","fucke&nbsp;d","fucki&nbsp;ng","fÃºcking","fuckinghell","fuckk","fuckw1t","fuck-wit","fuckwits","fucw1t","fucwit","fudge p@cker","fudgep@cker","fudge-p@cker","fudge-packer","fudgpacker","fukced","fuked","fukin","fuking","fukk","fukked","fukking","fuukn","fvckup","fvck-up","fvckw1t","fvckwit","gang-bang","gash","gayhole","gimp","girlie-gardening","goris","gypo","gypos","gyppo","gyppos","hvns","israelians","ities","k@ffir","k@ffirs","k@fir","k@firs","kaf1r","kaff1r","kaffir","kaffirs","kafir","kafirs","kafr","kants","khunt","kiddie fiddler","kiddie fiddling","kiddie-fiddler","kiddie-fiddling","kiddy fiddler","kiddyfiddler","kiddy-fiddler","kn0b","knob&nbsp;head","knobber","kuffar","m.inge","m.otherf.ucker","m1nge","mofuccer","mofucker","mofuckers","mofucking","mofukcer","mohterfuccer","mohterfuccers","mohterfuck","mohterfucker","mohterfuckers","mohterfucking","mohterfucks","mohterfuk","mohterfukcer","mohterfukcers","mohterfuking","mohterfuks","moterfuccer","moterfuck","moterfucker","moterfuckers","moterfucking","moterfucks","mothafuccer","motha-fucka","mother f---ers","motherfuccer","motherfuccers","motherfukkker","mthafucca","mthafuccas","mthafucka","mthafuckas","mthafukca","mthafukcas","muff-diver","muff-diving","muffs","muth@fucker","muthafuccer","muthafuck","muthafuck@","muthafucka","muthafuckers","muthafucking","muthafucks","muthafukas","niga","nignog","nig-nog","nob&nbsp;head","nonce","p.iss-flaps","p@ki","p@kis","p00f","p00fs","p00fter","p00fters","p0of","paedo","paedophiles","pak1","pakis","peado","peadofile","peadofiles","peedo","peedofile","peedofiles","peedophile","peedophiles","peedos","pench0d","pench0ds","penchod","penchods","phanny","phanny.","pheck","phecking","phelching","pheque","phequing","phucker","phuckin","phucking","phucks","pikey","pillow biter","pillow-biter","piss off","po0f","poff","ponce","poo stabber","poo stabbers","poofs","poofter","pr!ck","pr!ck.","pr1ck","pr1ck!","pr1cks","pr1cks!","prik","pu$$y","ragheads","ret@rd","rim job","s.hit","s1ut","sc u m!","sc um","sh hit","sh!te","sh!tes","sh1te","shirtlifter","shirtlifters","shit stabber","shit stabbers","shitstabber","shitstabbers","spastic","spaz","spaz.","spit roasting","spitroast","spit-roast","spit-roasting","spunking","ÃŸ0ll0Ã§k5","t w a t","t wat","t.wat","t0$$er","t0sser","t0ssers","tea-bagging","to55er","to55ers","tosser,","tossers","tossurs","towel head","tvvat","tvvats","tw at","tw&nbsp;at","tw@","tw@t","tw@ts","tw_t","twa t","twatt","twattish","twunts","up the gary","w anker","w ankers","w#nker","w#nkers","w*nkers, 0","w.ank","w@nk","w@nker","w@nkers","w@nks","w0g","w0gs","w4nker!","w4nkers!","wa nker","wan k er","wan k ers","wan ker","wanka","wanke r","wanked","wankers","wanking","wanks","wank's","wet spam","whanker","whankers","wog","xrse","xrseh","xrsehol","xrsehole","xxxhole","y!ddo!","y!ddo!!","yid","yido","zachariah bishop","blow-job","boner:deboner","bonk:bonkers","candy-ass","chuffnuts","cojones","dipstick","feak","furbox","furburger","gayboy","ginch","gnikcuf","hardon","honkers","kcid","kcuf","lactoids","lesbyterian","lezzo","man-root","nestlecock","onanism","pusy","queve","quimsteak","qveer","sappho","scumbag","scumber","sexpot","shagbucket","shagstress","snarf","sodomite","strollop","suckster","tnuc","toggaf","tribadist","twank","wiseass","wizzer","abbo","abortionist","abuser","alabama hotpocket","alligatorbait","analannie","analsex","arsebagger","arsebandit","arseblaster","arsecowboy","arsefuck","arsefucker","arsehat","arsehore","arsejockey","arsekiss","arsekisser","arselick","arselicker","arselover","arseman","arsemonkey","arsemunch","arsemuncher","arsepacker","arsepirate","arsepuppies","arseranger","arses","arsewhore","assbagger","assblaster","asscowboy","assholz","asshore","assjockey","asskiss","asskisser","assklown","asslover","assman","ass monkey","asspacker","asspuppies","assranger","asswhore","azzhole","backdoorman","badfuck","baldy","ball licker","balllicker","banging","barelylegal","barface","barfface","bassterds","bastardz","basterds","basterdz","bazongas","bazooms","beastality","beat-off","beatoff","beatyourmeat","bicurious","bigass","bigbastard","bigbutt","bitchez","bitchslap","biteme","boffing","bohunk","bollick","bootycall","bountybar","breastjob","breastlover","breastman","brothel","buggered","buggery","bukake","bullcrap","bulldike","bumfuck","bungabunga","butchbabes","butchdike","butchdyke","butt-bang","buttbang","buttface","butt-fuck","butt-fucker","butt-fuckers","buttfuckers","butthead","buttman","buttmunch","buttmuncher","buttpirate","buttstain","buttwipe","byatch","cacker","cameljockey","cawks","chav","cherrypopper","chickslick","clamdigger","clamdiver","clogwog","cnts","cntz","cockblocker","cockcowboy","cockfight","cock-head","cockknob","cocklicker","cocklover","cocknob","cockqueen","cockrider","cocksman","cocksucer","cocktease","cocky","coitus","coondog","copulate","cracker","crackpipe","crack-whore","crotchjockey","crotchmonkey","crotchrot","cumfest","cumm","cumquat","cumqueen","cunntt","cunteyed","cuntfuck","cuntfucker","cuntsucker","cuntz","cybersex","cyberslimer","damnation","damnit","datnigga","deapthroat","dego","devilworshipper","dickbrain","dickforbrains","dickless","dicklick","dicklicker","dickmilk","dilldo","dilldos","dixiedike","dixiedyke","dominatricks","dominatrics","douch","douchbag","drag queen","dragqueen","dragqween","dripdick","dumbbitch","easyslut","eatballs","eatme","eatpussy","enema","excrement","facefucker","facist","faeces","faget","faggots","fagit","fagz","faigs","fark","farted","farting","farty","fastfuck","fatfuck","fatfucker","fatso","feces","felatio","fister","flasher","flid","flipping the bird","flyd","flydie","flydye","footaction","footfuck","footfucker","footlicker","fornicate","freakfuck","freakyfucker","freefuck","fucck","fuckable","fuckbuddy","fuckedup","fuckfest","fuckfreak","fuckfriend","fuckher","fuckina","fuckingbitch","fuckingcunt","fuckinnuts","fuckinright","fuckit","fuckknob","fuckmehard","fuckmonkey","fuckpig","fuckwhore","fuckyou","fugly","Fukah","Fuken","Fukkah","Fukken","funfuck","fuuck","gangbanger","gatorbait","gaygirl","gaymuthafuckinwhore","gayz","getiton","givehead","glazeddonut","godammit","goddamit","goddamnes","goddamnmuthafucker","gonorrehea","gonzagas","gotohell","greaseball","grostulation","gypp","gyppie","gyppy","headfuck","hells","hijacker","hijacking","hillbillies","hindoo","hitlerism","hitlerist","hobo","hoes","holestuffer","homobangers","honger","hookers","hoore","horney","horseshit","hosejob","hotdamn","hotpussy","hottotrot","iblowu","idiot","insest","internet wife","intheass","inthebuff","jackshit","japcrap","jesuschrist","jiggabo","jihad","jijjiboo","jisim","jiss","jizim","jizjuice","jizzim","jizzum","jubblies","juggalo","kissass","knobz","krap","krappy","kumbubble","kumbullbe","kunnilingus","kunts","kuntz","lactate","lady boy","ladyboy","lapdance","lesbain","lesbayn","lesbin","lezbe","lezbefriends","lezz","lezzer","libido","lickme","limpdick","lipshits","lipshitz","livesex","loadedgun","lovebone","lovegoo","lovegun","lovejuice","lovemuscle","lovepistol","loverocket","low life","lowlife","lubejob","luckycameltoe","manhater","manpaste","masokist","massterbait","masstrbait","masstrbate","mastabate","mastabater","masterbaiter","master bates","masterbates","mastrabator","mattressprincess","meatbeater","meatrack","mgger","mggor","molestation","molester","molestor","moneyshot","mooncricket","motha fucker","motha fuker","motha fukkah","motha fukker","mother-fucker","mother fukah","mother fuker","mother fukkah","mother fukker","motherlovebone","muffdive","muffindiver","mufflikcer","muncher","mutha fucker","mutha fukah","mutha fuker","mutha fukkah","mutha fukker","nastt","nastybitch","nastyho","nastyslut","nastywhore","necro","negroes","negroid","niggaracci","niggard","niggarded","niggarding","niggardliness","niggardliness's,","niggardly","niggard's,","niggards","niggerhead","niggerhole","nigger's,","niggled","niggles","niggling","nigglings","niggor","niggur","nigr","nigra","nigre","nigur","niiger","niigr","nipplering","nittit","nlgger","nlggor","nofuckingway","nookey","nookie","nudger","nut case","nutcase","nutfucker","ontherag","orafis","orgasum","oriface","orifice","orifiss","packi","packie","packy","paedofile","pakie","paky","palesimian","panti","pearlnecklace","peckerwood","peeenus","peeenusss","peehole","peenus","peinus","penas","penis-breath","penises","penus","penuus","perv","pervert","phuc","phuker","phukker","phungky","pi55","picaninny","piccaninny","pickaninny","piky","pimper","pimpjuic","pimpjuice","pimpsimp","pindick","piss","pisshead","play boy","play bunny","playbunny","play girl","playgirl","plumper","pocketpool","polac","polak","pooperscooper","pooping","poorwhitetrash","poostabber","popimp","pornflick","pornking","pornprincess","pric","prickhead","pu55i","pu55y","pubiclice","puke","puntang","purinaprincess","pussee","pussie","pussyeater","pussyfucker","pussylicker","pussylips","pussylover","puuke","puuker","queerz","qweers","qweerz","qweir","rag head","rearend","rearentry","recktum","redneck","rentafuck","russki","russkie","sadom","saeema butt","sandm","scank","screwyou","seaman staines","sexed","sexfarm","sexhound","sexhouse","sexing","sexkitten","sexslave","sextogo","sextoy","sextoys","sexwhore","sexymoma","sexy-slim","seymour butts","shat","shhit","shitcan","shiter","shitfit","shitforbrains","shitfucker","shithapens","shithappens","shitlist","shitola","shitoutofluck","shity","shitz","shortfuck","shyt","shyte","shytty","shyty","sixsixsix","sixtynine","sixtyniner","skanck","skankbitch","skankee","skankey","skankfuck","skanks","skankwhore","skanky","skankybitch","skankywhore","skinflute","skum","skumbag","slantyeye","slapper","slavedriver","sleezebag","sleezeball","slideitin","slimeball","slimebucket","slopehead","slopey","slopy","slutt","slutting","slutty","slutwear","slutwhore","slutz","smackthemonkey","smelly","snatchpatch","snot","snowback","snownigger","sodomise","sonofabitch","sonofbitch","spacca","spaghettibender","spaghettinigger","spankthemonkey","spazza","spermacide","spermbag","spermhearder","spermherder","spig","spigotty","spitter","splittail","spreadeagle","squaw","stabber","stripclub","stroking","stupidfuck","stupidfucker","suckdick","sucker","suckme","suckmyass","suckmytit","suckoff","tarbaby","testicles","thicklips","thicko","thirdeye","thirdleg","timbernigger","titbitnipply","titfucker","titfuckin","titjob","titlicker","titlover","tittie","tonguethrust","tonguethruster","tonguetramp","torture","tosspot","trailertrash","trannie","trots","trouser snake","tuckahoe","tunneloflove","twobitwhore","unfuckable","uptheass","upthebutt","urinate","usama bin laden","vaginal","vajina","valjina","vibrater","vietcong","violate","violation","virginbreaker","vullva","waysted","welcher","wetspot","whacker","whigger","whiskeydick","whiskydick","whitenigger","whitetrash","whoor","whop","whorefucker","wife beater","williewanker","wuss","wuzzie","yellowman","zigabo","zipperhea","zipper head","suicide","kill yourself","kys","hang yourself","unalive yourself","nigg","puta","amcik","boobz","boody","boong","cazzo","forni","fotze","ginzo","gippo","gipps","godam","goyim","groid","gubba","guizi","gyopo","gyped","harem","heebs","horis","hoser","hymie","japie","jewed","jigga","jiggs","jiggy","jizin","jizzd","jizzn","kacap","kumer","kurac","kurwa","kushi","kykes","kyopo","kyrpa","lebos","lubra","lugan","lynch","mibun","mocky","nibba","nigar","nigas","niger","nigha","nigor","niqqa","nudie","nymph","pansy","paska","pendy","pizda","pocha","pocho","pohms","quiff","seppo","smack","spank","spics","stagg","trois","ukrop","vittu","wigga","beaney","boches","bungas","chinga","crotch","darkey","doggie","dyefly","dziwka","exkwew","fetish","ficken","geezer","gummer","gwailo","gweilo","gypped","gypsys","hodgie","honkie","huevon","humper","humpin","ikeymo","jewess","jigger","jizzin","kaffer","kaffre","kanake","kanker","katsap","kigger","knulle","kwailo","mabuno","macaca","maumau","menage","mierda","mockey","mockie","moskal","moslem","mtrfck","mulkku","muschi","mzungu","necked","negres","noonan","nooner","orospu","piefke","pimmel","pimped","pooper","pudboy","punani","pusies","qahbeh","racial","redleg","rigger","sambos","shipal","skribz","slanty","sloper","slopes","tantra","tiedup","tittis","tortur","trojan","turnon","yarpie","arabush","asholes","ballgag","bangbro","bluegum","bootlip","buffies","coolies","coonass","cowgirl","dothead","dryhump","fanculo","flikker","gangsta","genital","googirl","horndog","hotcarl","hugefat","humpher","humphim","hustler","israels","jerries","jimfish","khokhol","lezzian","licking","mahbuno","mamhoon","maricon","mideast","mulatto","nigette","pendejo","pierdol","preteen","puddboy","quashie","sanchez","scheiss","schmuck","septics","sheeney","shinola","shylock","slopeys","spludge","squinty","triplex","urethra","vagiina","whities","wichser","africoon","andskota","bassterd","bigblack","blackman","burrhead","chinaman","chinamen","clansman","clansmen","dogstyle","dunecoon","earotics","eatmyass","footstar","foursome","godsdamn","golliwog","homicide","horndawg","hotchick","illegals","klansman","klansmen","klootzak","knockers","kuksuger","lingerie","mosshead","peepshow","peepshpw","poontsee","pplicker","schaffer","schlampe","sharmuta","sharmute","stringer","syphilis","tacohead","thicklip","threeway","wetdream","yourtits","zabourah","arschloch","assrammer","babyjuice","ballgravy","futkretzn","girlontop","hairyback","halfbreed","halfcaste","hillbilly","howtokill","jigarooni","magicwand","marijuana","masturbat","monkleigh","mouliewop","penthouse","poundtown","premature","scallywag","schvartse","schwartze","skurwysyn","sphencter","squirting","stuinties","swallower","tarbabies","tongueina","babybatter","beastility","beaverlips","bigbreasts","bluewaffle","buddhahead","bulletvibe","chinaswede","chingchong","clanswoman","clanswomen","deepaction","doubledong","ejackulate","jellydonut","klanswoman","klanswomen","makemecome","mickeyfinn","missionary","rautenberg","samckdaddy","shawtypimp","socksucker","spierdalaj","spreadlegs","squarehead","styledoggy","tightwhite","udgepacker","venusmound","whitepower","zipperhead","ballkicking","dawgiestyle","diaperdaddy","donkeypunch","howtomurder","meatbeatter","pancakeface","pommiegrant","swampguinea","taintedlove","beefcurtains","blowyourload","brownshowers","christkiller","cloverclamps","currymuncher","dirtypillows","motherfvcker","moundofvenus","pickaninnies","porchmonkies","spearchucker","tigolbitties","transvestite","beavercleaver","girlsgonewild","jacktheripper","junglebunnies","masterblaster","pleasurechest","tigoldbitties","tongethruster","yellowshowers","brunetteaction","femalesquirtin","luckycammeltoe","purinapricness","clevelandsteamer","wrinkledstarfish","princealbertpiercing","niggardliness's","niggard's","nigger's","nicotine","hell","f*ck","f**k","f***k","fu*k","fu**k","fk","fuq","sh*t","damm","d@mn","d@mm","h3ll","h*ll","b*tch","btch","bast4rd","b@stard","bast@rd","@ss","a$$","@$$","cr@p","d!ck","p1ss","p!ss","p@ss","c*nt","c**t","wh*re","wh0r3","slvt","sl*t","sl*tt","d*uche","d*uch3","@sshole","@$$hole","m0therfucker","m0therf*cker","m0th3rfucker","motherf*cker","c*cksucker","c*cksuck3r","cocksuck3r","j@ckass","j@ck@ss","jack@ss","j@ck*ss","b*llshit","b@llshit","bllsht","b*llsh1t","bullsh1t","b@llsh1t","@rsehole","ars3hole","ars*hole","f*ggot","f@gg0t","b@st4rd","sh!thead","sh1thead","sh1th3ad","shith3ad","sh*thead","c*ck","c0k","p*rn","pr0n","porn0","fckr","f*ckr","fc*k","fc*kr","fkn","fn","fqn","fnck","d1k","d!k","dik","dyk","dykk","d*kk","c*m","c*mm","s!ut","p1mp","p!mp","b00b","b*ob","b0b","b00bz","b0bz","b0obs","@ssh0le","@$$h0le","f!ck","f1ck","f*q","f*cking","f**king","f***king","fkng","f*kin","f@king","buggr","buggrr","bugg3r","buggering","f@ggot","f*gg0t","twatface","twatfaced","wankr","w4nk","w4nker","w@nkr","w*nkr","wankd","tossr","toss3r","t0ss3r","t!t","titz","t!tt","t!tz","c_nt","c*ntz","c_ntz","pisd","pissd","pishead","p!sshead","p1sshead","f*cker","f_ckr","f@ckr","fcukr","f_ck3r","f*cked","fc*ked","f_ckd","f_cked","f_cking","fc*king","f_ckn","f_ckng","f@cking","motherfckr","mthrfcukr","mthrfcuker","mothrf*cker","mthrf*cker","d!ckhead","d!ckhed","d!ckh3ad","d1ckh3ad","dickh3ad","d!ckhd","d*ckhead","dickhed","dikhead","dickhd","ballz","ballzy","ballsy","ballsz","b@llz","b@lls","b*llz","b*lls","b00bies","boobi","boobied","co*k","co**k","pr!k","prickr","pr1kr","pr!kr","pr!cker","w0gg","w0gger","wogger","w*gg","w0gg3r","wogging","f4git","f@git","fag0t","f@got","fagott","f4gott","faggets","faggy","fagzz","pissr","p!ssr","piss3r","p1ss3r","p1ssr","p!ssed","p1ssed","p1ssd","tw*t","fuc","fucc","fkk","f*k","d*mn","dammn","d@mmn","sl*tty","slttty","sltttty","sluttz","slttz","sltttz","bitchz","biotch","bitchr","b*tchr","b1tchr","n!gger","nigg*r","nigg@r","n!gg3r","n1gg3r","n1gg@r","n!gg@r","n1gg*r","n!gg*r","n1g","n!gg","n1gg","n*gg","niggr","n!ggr","n1ggr","n*gger","n!gga","n!gg@","n1gg@","nigg@","n1ggah","n!ggah","n*ggah","nigg@h","n!gg@h","n1gg@h","n1g@h","n!g@h","nigguh","n1gguh","n!gguh","n*gguh","n1ggaz","n!ggaz","n*ggaz","nigg@s","n!gg@s","n1gg@s","n1gg@z","nigg@z","n!gg@z","n*gg@z","niggahz","n1ggahz","n!ggahz","n*ggahz","nigg@hz","n!gg@hz","n1gg@hz","niggar","n1ggar","n!ggar","n*ggar","nigg@rs","n1gg@rs","n!gg@rs","n!g@rs","n!g@r","n!g@rz","niggrz","n1ggrz","n!ggrz","n!gg@rz","nigg@rz","niggrs","n1ggrs","n!ggrs","shiit","cr4p","c@cksucker","c0cksuck3r","c0ck$ucker","c*cksucka","c@cksucka","c0cksuck@h","loser","l0ser","looser","l00ser","l0s3r","l*ser","l*s3r","l@s3r","l@ser","l0$er","l0$3r","l0ozer","lozer","l0z3r","l*zer","l*z3r","lo$er","l0zer","loz3r","loos3r","l0oser","l00z3r","looz3r","looz*r","l0o$er","l0os3r","l*ozer"]`);
let ma = document.createElement("canvas");
function Fi(u, e) {
  return new URLSearchParams(e || window.location.search).get(u) || "";
}
let $ = {
  getParameterByName: Fi,
  getCookie: function (u) {
    let e = `${u}=`;
    let i = decodeURIComponent(document.cookie).split(";");
    for (let r = 0; r < i.length; r++) {
      let a = i[r];
      while (a.charAt(0) == " ") {
        a = a.substring(1);
      }
      if (a.indexOf(e) == 0) {
        return a.substring(e.length, a.length);
      }
    }
    return "";
  },
  sanitizeNameInput: function (u) {
    let e = u.trim();
    if (e.length > He.PlayerNameMaxLen) {
      e = e.substring(0, He.PlayerNameMaxLen);
    }
    let t = ` ${e.toLowerCase()} `;
    if (la.some(i => t.includes(` ${i} `))) {
      e = "Survev.io";
    }
    return e;
  },
  colorToHexString: function (u) {
    return `#${`000000${u.toString(16)}`.slice(-6)}`;
  },
  colorToDOMString: function (u, e) {
    return `rgba(${u >> 16 & 255}, ${u >> 8 & 255}, ${u & 255}, ${e})`;
  },
  htmlEscape: function (u = "") {
    return u.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  },
  truncateString: function (u, e, t) {
    let i = ma.getContext("2d");
    i.font = e;
    let r = u;
    for (let a = u.length; a > 0 && i.measureText(r).width > t;) {
      r = `${u.substring(0, --a)}â€¦`;
    }
    return r;
  },
  toggleFullScreen: function (u) {
    let e = document.documentElement;
    if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement || u) {
      if (document.exitFullscreen) {
        document.exitFullscreen();
      } else if (document.msExitFullscreen) {
        document.msExitFullscreen();
      } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
      } else {
        document.webkitExitFullscreen?.();
      }
    } else if (e.requestFullscreen) {
      e.requestFullscreen();
    } else if (e.msRequestFullscreen) {
      e = document.body;
      e.msRequestFullscreen();
    } else if (e.mozRequestFullScreen) {
      e.mozRequestFullScreen();
    } else {
      e.webkitRequestFullscreen?.();
    }
  },
  copyTextToClipboard: function (u) {
    try {
      let e = c("<input>");
      c("body").append(e);
      e.val(u);
      if (v.os == "ios") {
        let t = e.get(0);
        let i = t.contentEditable;
        let r = t.readOnly;
        t.contentEditable = "true";
        t.readOnly = true;
        let a = document.createRange();
        a.selectNodeContents(t);
        let l = window.getSelection();
        l.removeAllRanges();
        l.addRange(a);
        t.setSelectionRange(0, 999999);
        t.contentEditable = i;
        t.readOnly = r;
      } else {
        e.select();
      }
      document.execCommand("copy");
      e.remove();
    } catch {}
  },
  getSvgFromGameType: function (u) {
    let e = B[u];
    switch (e ? e.type : "") {
      case "gun":
      case "melee":
      case "throwable":
      case "heal":
      case "boost":
      case "helmet":
      case "chest":
      case "scope":
      case "backpack":
      case "perk":
      case "xp":
        return `img/loot/${e.lootImg?.sprite.slice(0, -4)}.svg`;
      case "heal_effect":
      case "boost_effect":
        return `img/particles/${e.texture?.slice(0, -4)}.svg`;
      case "emote":
        return `img/emotes/${e.texture.slice(0, -4)}.svg`;
      case "crosshair":
        return `img/crosshairs/${e.texture.slice(0, -4)}.svg`;
      case "outfit":
        {
          let i = e.lootImg;
          if (i.sprite !== "loot-shirt-01.img") {
            return `img/loot/${i.sprite.slice(0, -4)}.svg`;
          }
          let r = `<svg xmlns="http://www.w3.org/2000/svg" width="128" height="128"><path d="M63.993 8.15c-10.38 0-22.796 3.526-30.355 7.22-8.038 3.266-14.581 7.287-19.253 14.509C8.102 39.594 5.051 54.6 7.13 78.482c5.964 2.07 11.333 1.45 16.842-.415-1.727-7.884-1.448-15.764.496-22.204 2.126-7.044 6.404-12.722 12.675-13.701l2.77-.432.074 2.803c.054 2.043.09 4.17.116 6.335l.027 6.312c-.037 8.798-.382 18.286-1.277 27.845 5.637 1.831 14.806 2.954 23.964 3.019l4.597-.058c8.53-.275 16.742-1.449 21.665-3.063-1.093-14.65-1.166-29.434-1.52-41.334l-.097-3.283 3.18.824c6.238 1.617 10.55 7.376 12.76 14.507 2.02 6.51 2.353 14.37.64 22.248a29.764 29.764 0 0 0 12.847 1.181l4.399-.588c1.033-18.811-1.433-37.403-6.27-46.264l-4.408-6.376c-4.647-5.357-10.62-8.399-17.665-11.074-6.746-3.458-18.358-6.614-28.95-6.614zm0 3.05c6.494 0 13.37 1.942 19.274 4.516-3.123 2.758-6.971 4.665-11.067 5.754l-7.852 17.31-6.838-16.882c-4.757-.93-9.26-2.957-12.783-6.174C50.9 13.081 57.809 11.2 63.993 11.2zm.58 28.539l3.512 5.327-3.497 5.053-3.53-5.053zm0 11.888l3.512 5.328-3.497 5.052-3.53-5.053 3.514-5.327zm0 11.733l3.512 5.327-3.497 5.054-3.53-5.054zm0 11.876l3.512 5.327-3.497 5.054-3.53-5.053 3.514-5.327zm25.079 13.715c-6.61 2.055-15.829 2.907-25.277 2.951-9.5.045-18.965-.744-25.902-2.892-.205 1.785-.43 3.569-.678 5.347 5.968 2.132 16.346 3.408 26.497 3.36 10.143-.05 20.355-1.444 25.912-3.433a241.302 241.302 0 0 1-.552-5.333zm1.368 9.086c-6.782 2.308-16.533 3.262-26.53 3.31-2.935.015-5.866-.052-8.724-.213l-4.227-.315c-5.358-.5-10.307-1.382-14.329-2.758-.897 5.43-2.02 10.772-3.413 15.903 2.117 1.06 4.41 1.968 6.835 2.733l3.97 1.096c15.85 3.805 35.88 2.156 49.601-3.513-1.355-5.09-2.387-10.57-3.183-16.243z" fill="${this.colorToHexString(i.tint)}"/></svg>`;
          return URL.createObjectURL(new Blob([r], {
            type: "image/svg+xml;charset=utf-8"
          }));
        }
      default:
        return "";
    }
  },
  getCssTransformFromGameType: function (u) {
    let e = B[u];
    let t = "";
    if (e?.lootImg) {
      t = `rotate(${e.lootImg.rot || 0}rad) scaleX(${e.lootImg.mirror ? -1 : 1})`;
    }
    return t;
  },
  random64: function () {
    function u() {
      return Math.floor(Math.random() * Math.pow(2, 32)).toString(16);
    }
    return u() + u();
  }
};
function na() {
  return Ce.android.device || Ce.apple.device || Vi();
}
function Vi() {
  let u = navigator.userAgent.toLowerCase();
  return u.includes("ipad") || u.includes("macintosh") && "ontouchend" in document;
}
function Zi() {
  return Ce.apple.phone || Ce.apple.ipod;
}
function ha() {
  return Ce.android.device;
}
function ca() {
  let u = window.navigator.userAgent;
  let e = u.indexOf("MSIE ");
  let t = u.indexOf("Trident/");
  return e > 0 || t > 0;
}
function ua() {
  return window.navigator.userAgent.indexOf("Edge/") > 0;
}
function da() {
  return Zi() && (screen.width == 375 && screen.height == 812 || screen.height == 375 && screen.width == 812 || screen.width == 414 && screen.height == 896 || screen.height == 414 && screen.width == 896);
}
function pa() {
  if (Zi()) {
    return "ios";
  } else if (ha()) {
    return "android";
  } else {
    return "pc";
  }
}
function fa() {
  if (ca()) {
    return "ie";
  } else if (ua()) {
    return "edge";
  } else {
    return "unknown";
  }
}
function wa(u, e) {
  try {
    localStorage.setItem(u, e);
  } catch {}
}
function ga(u) {
  let e = null;
  try {
    e = localStorage.getItem(u);
  } catch {}
  return e;
}
class Sa {
  os;
  browser;
  model;
  pixelRatio = window.devicePixelRatio;
  version;
  mobile;
  tablet;
  touch;
  uiLayout;
  debug = false;
  UiLayout = {
    Lg: 0,
    Sm: 1
  };
  isLandscape = true;
  screenWidth = 0;
  screenHeight = 0;
  letructor() {
    this.os = pa();
    this.browser = fa();
    this.model = da() ? "iphonex" : "unknown";
    let e = Fi("version");
    if (e) {
      wa("surviv_version", e);
    }
    this.version = ga("surviv_version") || "1.0.0";
    this.mobile = na();
    this.tablet = Ce.tablet || Vi();
    this.touch = this.mobile || this.tablet;
    this.uiLayout = this.mobile ? this.UiLayout.Sm : this.UiLayout.Lg;
    this.onResize();
  }
  onResize() {
    this.isLandscape = window.innerWidth > window.innerHeight || window.orientation == 90 || window.orientation == -90;
    this.screenWidth = window.innerWidth;
    this.screenHeight = window.innerHeight;
    let e = this.isLandscape ? this.screenWidth : this.screenHeight;
    this.uiLayout = this.mobile || e <= 850 || e <= 900 && this.pixelRatio >= 3 ? this.UiLayout.Sm : this.UiLayout.Lg;
  }
}
let v = new Sa();
class Xi {
  aznZwb = n.create(0, 0);
  HrSNF = 16;
  HyIw = 1.5;
  chvM = 1.5;
  LCRnPO = 1;
  gMqwV = 1;
  RUGSbn = true;
  KuuprX = 0;
  rTq = true;
  UUHe = 0;
  fVAy() {
    return this.HrSNF * this.HyIw;
  }
  JDbtXa(e) {
    return {
      x: this.LCRnPO * 0.5 + (e.x - this.aznZwb.x) * this.fVAy(),
      y: this.gMqwV * 0.5 - (e.y - this.aznZwb.y) * this.fVAy()
    };
  }
  iCWER(e) {
    return {
      x: this.aznZwb.x + (e.x - this.LCRnPO * 0.5) / this.fVAy(),
      y: this.aznZwb.y + (this.gMqwV * 0.5 - e.y) / this.fVAy()
    };
  }
  Jjwns(e) {
    return e * this.HyIw;
  }
  iDeS(e) {
    return e * this.fVAy();
  }
  RCZ(e) {
    this.RUGSbn = e;
  }
  OwZJE(e) {
    this.rTq = e;
  }
  NTm(e, t) {
    let i = n.length(n.sub(this.aznZwb, e));
    let r = z.delerp(i, 40, 10) * t;
    this.KuuprX = Math.max(this.KuuprX, r);
  }
  WYloD() {
    if (this.RUGSbn) {
      this.aznZwb = n.add(this.aznZwb, n.mul(n.randomUnit(), this.KuuprX));
    }
    this.KuuprX = 0;
  }
}
class ya {
  shapes = [];
  addLine(e, t, i, r) {
    this.shapes.push({
      type: 0,
      start: n.copy(e),
      end: n.copy(t),
      color: i,
      fill: r
    });
  }
  addRay(e, t, i, r, a) {
    this.shapes.push({
      type: 1,
      pos: n.copy(e),
      dir: n.copy(t),
      len: i,
      color: r,
      fill: a
    });
  }
  addCircle(e, t, i, r) {
    this.shapes.push({
      type: 2,
      pos: n.copy(e),
      rad: t,
      color: i,
      fill: r
    });
  }
  addAabb(e, t, i, r) {
    this.shapes.push({
      type: 3,
      min: n.copy(e),
      max: n.copy(t),
      color: i,
      fill: r
    });
  }
  addCollider(e, t, i) {
    if (e.type == X.Type.Aabb) {
      this.addAabb(e.min, e.max, t, i);
    } else {
      this.addCircle(e.pos, e.rad, t, i);
    }
  }
  lXaw(e, t) {}
  flush() {
    this.shapes = [];
  }
}
let me = new ya();
let ai = 4;
let si = 5;
let xa = 10;
function oi(u) {
  if (u.displayCloseIcon) {
    return "img/gui/close.svg";
  } else {
    return $.getSvgFromGameType(u.ping || u.emote);
  }
}
function Ne(u) {
  let e = Math.atan2(u.y, u.x) * 180 / Math.PI;
  if (e < 0) {
    e += 360;
  }
  return e;
}
function za(u, e, t) {
  if (e <= t) {
    if (t - e <= 180) {
      return e <= u && u <= t;
    } else {
      return t <= u || u <= e;
    }
  } else if (e - t <= 180) {
    return t <= u && u <= e;
  } else {
    return e <= u || u <= t;
  }
}
class ba {
  letructor(e, t, i, r, a) {
    this.audioManager = e;
    this.uiManager = t;
    this.playerBarn = i;
    this.camera = r;
    this.map = a;
    this.triggerPing = () => {
      if (this.activePlayer) {
        let m;
        if (this.emoteSelector.ping && !this.emoteWheelsGreyed) {
          if (Fe[this.emoteSelector.ping]?.pingMap) {
            m = this.uiManager.getWorldPosFromMapPos(this.bigmapPingPos || this.emoteScreenPos, this.map, this.camera);
            m ||= this.camera.iCWER(this.emoteScreenPos);
            m.x = z.clamp(m.x, 0, this.map.width);
            m.y = z.clamp(m.y, 0, this.map.height);
            this.sendPing({
              type: this.emoteSelector.ping,
              pos: m
            });
          }
        } else if (this.emoteSelector.emote && !this.emoteWheelsGreyed) {
          m = this.activePlayer.aznZwb;
          this.sendEmote({
            type: this.emoteSelector.emote,
            pos: m
          });
          this.uiManager.displayMapLarge(true);
        }
        this.inputReset();
        this.pingKeyTriggered = this.pingKeyDown;
      }
    };
    this.triggerEmote = () => {
      if (this.activePlayer) {
        let m;
        if (this.emoteSelector.emote && !this.emoteWheelsGreyed) {
          m = this.activePlayer.aznZwb;
          this.sendEmote({
            type: this.emoteSelector.emote,
            pos: m
          });
        }
        this.inputReset();
      }
    };
    this.onTouchStart = m => {
      if (this.wheelDisplayed) {
        m.stopPropagation();
        this.inputReset();
      }
    };
    if (v.touch) {
      this.emoteElems.css("pointer-events", "auto");
      this.bigmapCollision.on("touchend", m => {
        m.stopPropagation();
        this.bigmapPingPos = {
          x: m.originalEvent?.changedTouches[0].pageX,
          y: m.originalEvent?.changedTouches[0].pageY
        };
        this.emoteScreenPos = n.create(this.camera.LCRnPO / 2, this.camera.gMqwV / 2);
        this.pingMouseTriggered = true;
      });
      this.emoteButtonElem.css("pointer-events", "auto");
      this.emoteButtonElem.on("touchstart", m => {
        m.stopPropagation();
        this.emoteScreenPos = n.create(this.camera.LCRnPO / 2, this.camera.gMqwV / 2);
        this.emoteMouseTriggered = true;
      });
      this.emoteElems.on("touchstart", m => {
        m.stopPropagation();
        this.emoteTouchedPos = {
          x: m.originalEvent?.changedTouches[0].pageX,
          y: m.originalEvent?.changedTouches[0].pageY
        };
      });
      c(document).on("touchstart", this.onTouchStart);
    }
    this.emoteWheelData = {
      middle: {
        parent: c("#ui-emote-middle"),
        vA: n.create(-1, 1),
        vC: n.create(1, 1),
        ping: "",
        emote: "",
        displayCloseIcon: true
      },
      top: {
        parent: c("#ui-emote-top"),
        vA: n.create(-1, 1),
        vC: n.create(1, 1),
        ping: "",
        emote: "",
        emoteSlot: ue.Top
      },
      right: {
        parent: c("#ui-emote-right"),
        vA: n.create(1, 1),
        vC: n.create(1, -1),
        ping: "",
        emote: "",
        emoteSlot: ue.Right
      },
      bottom: {
        parent: c("#ui-emote-bottom"),
        vA: n.create(1, -1),
        vC: n.create(-1, -1),
        ping: "",
        emote: "",
        emoteSlot: ue.Bottom
      },
      left: {
        parent: c("#ui-emote-left"),
        vA: n.create(-1, -1),
        vC: n.create(-1, 1),
        ping: "",
        emote: "",
        emoteSlot: ue.Left
      }
    };
    let l = {
      middle: {
        parent: c("#ui-team-ping-middle"),
        vA: n.create(-1, 1),
        vC: n.create(1, 1),
        ping: "",
        emote: "",
        displayCloseIcon: true
      },
      top: {
        parent: c("#ui-team-ping-top"),
        vA: n.create(-1, 1),
        vC: n.create(1, 1),
        ping: "ping_danger",
        emote: ""
      },
      right: {
        parent: c("#ui-team-ping-right"),
        vA: n.create(1, 1),
        vC: n.create(1, -1),
        ping: "ping_coming",
        emote: ""
      },
      bottom: {
        parent: c("#ui-team-ping-bottom"),
        vA: n.create(1, -1),
        vC: n.create(-1, -1),
        ping: "ping_help",
        emote: ""
      },
      "bottom-left": {
        parent: c("#ui-team-ping-bottom-left"),
        vA: n.create(-1, -1),
        vC: n.create(-1, 0),
        ping: "",
        emote: "emote_medical"
      },
      "top-left": {
        parent: c("#ui-team-ping-top-left"),
        vA: n.create(-1, 0),
        vC: n.create(-1, 1),
        ping: "",
        emote: "emote_ammo",
        ammoEmote: true
      }
    };
    for (let m in l) {
      if (l.hasOwnProperty(m)) {
        let d = l[m];
        let h = Ne(d.vA);
        let p = Ne(d.vC);
        this.teamPingSelectors.push({
          parent: d.parent,
          angleA: h,
          angleC: p,
          highlight: d.parent.find(".ui-emote-hl"),
          highlightDisplayed: false,
          ping: d.ping,
          emote: d.emote,
          ammoEmote: d?.ammoEmote,
          displayCloseIcon: d?.displayCloseIcon
        });
      }
    }
    this.displayedSelectors = this.teamPingSelectors;
    this.container.scale.set(this.baseScale, this.baseScale);
    this.container.addChild(this.pingContainer);
    let s = function (m, d = 16777215) {
      let h = new Y();
      let p = new Y();
      let w = R.groupColors[m] || d;
      let f = ee.from("ping-border.img");
      f.scale.set(0.4, 0.4);
      f.anchor.set(0.5, 0.5);
      f.tint = w;
      f.alpha = 0;
      f.visible = true;
      h.addChild(f);
      let S = ee.from("ping-team-danger.img");
      S.scale.set(0.4, 0.4);
      S.anchor.set(0.5, 0.5);
      S.tint = w;
      S.alpha = 0;
      S.visible = true;
      h.addChild(S);
      let x = ee.from("ping-team-danger.img");
      x.scale.set(0.5, 0.5);
      x.anchor.set(0.5, 0.5);
      x.tint = w;
      x.alpha = 0;
      x.visible = true;
      p.addChild(x);
      let y = ee.from("ping-indicator.img");
      y.scale.set(0.5, 0.5);
      y.anchor.set(0.5, 0);
      y.alpha = 0;
      y.visible = true;
      p.addChild(y);
      return {
        elem: c("#ui-team-indicators").find(`.ui-indicator-ping[data-id=${m}]`),
        borderElem: c("#ui-team-indicators").find(`.ui-indicator-ping-border[data-id=${m}]`),
        pingContainer: h,
        indContainer: p,
        borderSprite: {
          sprite: f,
          baseScale: 0.4
        },
        pingSprite: {
          sprite: S,
          baseScale: 0.4
        },
        indSpriteOuter: {
          sprite: y,
          baseScale: 0.5,
          baseTint: Number(y.tint)
        },
        indSpriteInner: {
          sprite: x,
          baseScale: 0.5,
          baseTint: Number(x.tint)
        },
        displayed: false,
        fadeIn: 0,
        life: 0,
        fadeOut: 0,
        pos: n.create(0, 0)
      };
    };
    for (let m = 0; m < 4; m++) {
      let d = s(m);
      this.pingContainer.addChild(d.pingContainer);
      this.indContainer.addChild(d.indContainer);
      this.pingIndicators.push({
        ping: d
      });
    }
    this.airdropIndicator = s(ai, Fe.ping_airdrop.tint);
    this.pingContainer.addChild(this.airdropIndicator.pingContainer);
    this.indContainer.addChild(this.airdropIndicator.indContainer);
    this.pingIndicators.push({
      ping: this.airdropIndicator
    });
    this.airstrikeIndicator = s(si, Fe.ping_airstrike.tint);
    this.pingContainer.addChild(this.airstrikeIndicator.pingContainer);
    this.indContainer.addChild(this.airstrikeIndicator.indContainer);
    this.pingIndicators.push({
      ping: this.airstrikeIndicator
    });
  }
  gameElem = c("#ui-game");
  disable = false;
  activePlayer = null;
  worldPos = n.create(0, 0);
  zIdxNext = 0;
  emoteSelector = {
    ping: "",
    emote: ""
  };
  emoteSoftTicker = 0;
  emoteHardTicker = 0;
  emoteCounter = 0;
  emoteWheelsGreyed = false;
  teamEmotesGreyed = false;
  wheelKeyTriggered = false;
  emoteTimeoutTicker = 0;
  pingKeyTriggered = false;
  pingKeyDown = false;
  pingMouseTriggered = false;
  wheelDisplayed = false;
  emoteMouseTriggered = false;
  emoteScreenPos = n.create(0, 0);
  triggerPing;
  triggerEmote;
  emoteTouchedPos = null;
  bigmapPingPos = null;
  onTouchStart;
  emoteElems = c(".ui-emote");
  bigmapCollision = c("#big-map-collision");
  emoteButtonElem = c("#ui-emote-button");
  emoteWheels = c("#ui-emotes, #ui-team-pings");
  teamEmotes = c(".ui-emote-bottom-left, .ui-emote-top-left");
  emoteWheel = c("#ui-emotes");
  emoteWheelData;
  teamPingWheel = c("#ui-team-pings");
  teamPingSelectors = [];
  displayedSelectors;
  baseScale = 1;
  container = new Y();
  pingContainer = new Y();
  indContainer = new Y();
  pingIndicators = [];
  airdropIndicator;
  airstrikeIndicator;
  emoteLifeIn = 0.75;
  emoteLife = 1;
  emoteLifeOut = 0.1;
  pingFadeIn = 0.5;
  pingLife = 4.25;
  pingFadeOut = 0.1;
  wedgeOpacityReset = v.touch ? 1 : 0.75;
  teamEmoteOpacityReset = 0.2;
  emotes = [];
  newPings = [];
  newEmotes = [];
  emoteLoadout = [];
  unlockTypes = {};
  socialUnlocked = false;
  emoteWheelSelectors;
  parentDisplayed;
  HJMxT() {
    if (v.touch) {
      c(document).off("touchstart", this.onTouchStart);
      this.emoteButtonElem.off("touchstart");
      this.emoteElems.off("touchstart");
      this.bigmapCollision.off("touchend");
    }
    this.init();
  }
  init() {
    this.emoteWheelsGreyed = false;
    this.emoteWheels.css("opacity", 1);
    this.teamEmotesGreyed = false;
    this.teamEmotes.css("opacity", 1);
    this.disable = false;
    this.inputReset();
  }
  inputReset() {
    this.pingMouseTriggered = false;
    this.pingKeyTriggered = false;
    this.emoteMouseTriggered = false;
    this.wheelDisplayed = false;
    this.displayWheel(this.teamPingWheel, false);
    this.displayWheel(this.emoteWheel, false);
    this.emoteTouchedPos = null;
    this.bigmapPingPos = null;
    this.emoteTimeoutTicker = 0;
    for (let e = 0; e < this.displayedSelectors.length; e++) {
      let t = this.displayedSelectors[e];
      let r = Re[t.emote]?.teamOnly;
      if (this.teamEmotesGreyed && r) {
        t.parent.css("opacity", this.teamEmoteOpacityReset);
      } else {
        t.parent.css("opacity", this.wedgeOpacityReset);
      }
      t.highlight.css("display", "none");
      t.highlightDisplayed = false;
    }
  }
  sendPing(e) {
    this.newPings.push({
      type: e.type,
      pos: e.pos
    });
    this.incrementEmote();
  }
  addPing(e, t) {
    if (this.activePlayer) {
      let i = Fe[e.type];
      if (i) {
        this.uiManager.createPing(e.type, e.pos, e.playerId, this.activePlayer.__id, this.playerBarn, t);
        let r = null;
        let a = i.sound;
        if (e.type == "ping_airdrop") {
          r = this.pingIndicators[ai].ping;
        } else if (e.type == "ping_airstrike") {
          r = this.pingIndicators[si].ping;
        } else {
          let l = this.playerBarn.getPlayerInfo(e.playerId);
          if (l) {
            let m = this.playerBarn.getPlayerInfo(this.activePlayer.__id).groupId;
            let d = l.groupId;
            if (m == d) {
              let p = this.playerBarn.getGroupInfo(d).playerIds.indexOf(e.playerId);
              if (p !== -1) {
                r = this.pingIndicators[p].ping;
              }
            }
          }
          let s = this.playerBarn.getPlayerStatus(e.playerId);
          if (s && s.role == "leader") {
            a = i.soundLeader;
          }
        }
        if (t || e.type != "ping_airstrike") {
          this.audioManager.playSound(a, {
            channel: "ui"
          });
        } else {
          this.audioManager.playSound(a, {
            channel: "ui",
            fallOff: 1,
            soundPos: e.pos,
            rangeMult: 20
          });
        }
        if (r) {
          r.pos = e.pos;
          r.pingSprite.sprite.texture = G.from(i.texture);
          r.indSpriteInner.sprite.texture = G.from(i.texture);
          r.indSpriteInner.sprite.tint = i.mapEvent ? i.tint : r.indSpriteInner.baseTint;
          r.indSpriteOuter.sprite.tint = i.mapEvent ? i.tint : r.indSpriteOuter.baseTint;
          r.fadeIn = this.pingFadeIn;
          r.life = this.pingLife;
          r.fadeOut = this.pingFadeOut;
          r.mapEvent = i.mapEvent;
          r.worldDisplay = i.worldDisplay;
        }
      }
    }
  }
  sendEmote(e) {
    this.newEmotes.push({
      type: e.type,
      pos: e.pos
    });
    this.incrementEmote();
  }
  addEmote(e) {
    let t = Re[e.type];
    if (t) {
      let i = null;
      for (let r = 0; r < this.emotes.length; r++) {
        if (this.emotes[r].alive || i) {
          if (this.emotes[r].alive && this.emotes[r].playerId == e.playerId) {
            this.emotes[r].alive = false;
          }
        } else {
          i = this.emotes[r];
        }
      }
      if (!i) {
        i = {};
        i.alive = false;
        i.pos = n.create(0, 0);
        i.container = new Y();
        i.circleOuter = ee.from("emote-circle-outer.img");
        i.circleOuter.anchor.set(0.5, 0.5);
        i.baseScale = 0.55;
        i.circleOuter.scale.set(i.baseScale * 0.8, i.baseScale * 0.8);
        i.circleOuter.tint = 0;
        i.circleOuter.visible = true;
        i.container.addChild(i.circleOuter);
        i.sprite = new ee();
        i.sprite.anchor.set(0.5, 0.5);
        i.container.addChild(i.sprite);
        i.sprite.scale.set(i.baseScale, i.baseScale);
        i.posOffset = n.create(0, 4);
        i.container.scale.set(1, 1);
        i.container.visible = false;
        this.emotes.push(i);
      }
      i.alive = true;
      i.isNew = true;
      i.type = e.type;
      i.playerId = e.playerId;
      i.pos = n.create(0, 0);
      i.lifeIn = this.emoteLifeIn;
      i.life = this.emoteLife;
      i.lifeOut = this.emoteLifeOut;
      i.zIdx = this.zIdxNext++;
      if (t.texture) {
        i.sprite.texture = G.from(t.texture);
      }
      i.container.visible = false;
      i.baseScale = 0.55;
      i.sound = t.sound;
      i.channel = t.channel;
      if (e.type == "emote_loot") {
        let r = B[e.itemType];
        if (r?.lootImg) {
          i.sprite.texture = G.from(r.lootImg.sprite);
          let a = B[r.ammo];
          i.circleOuter.tint = a ? a.lootImg.tintDark : 0;
          if (r.lootImg.rot) {
            i.sprite.rotation = r.lootImg.rot;
          } else {
            i.sprite.rotation = 0;
          }
          if (r.lootImg.mirror) {
            i.sprite.scale.set(i.baseScale * -1, i.baseScale);
          } else {
            i.sprite.scale.set(i.baseScale, i.baseScale);
          }
          if (r.sound?.deploy) {
            if (r.type == "gun") {
              i.sound = r.sound.deploy;
              i.channel = "activePlayer";
            } else {
              i.sound = "";
            }
          }
        }
      } else {
        i.circleOuter.tint = 0;
        i.sprite.rotation = 0;
        i.sprite.scale.set(i.baseScale, i.baseScale);
      }
    }
  }
  incrementEmote() {
    this.emoteCounter++;
    if (this.emoteCounter >= R.player.emoteThreshold) {
      this.emoteHardTicker = this.emoteHardTicker > 0 ? this.emoteHardTicker : R.player.emoteHardCooldown * 1.5;
    }
  }
  PEHQLt(e, t, i, r, a, l, s, m, d, h) {
    let p = this.playerBarn;
    let w = this.camera;
    let f = n.create(m.mousePos.x, m.mousePos.y);
    if (m.lostFocus) {
      this.inputReset();
    }
    if (d.isBindPressed(A.TeamPingMenu) && !this.pingKeyDown && !h) {
      this.pingKeyDown = true;
      this.pingKeyTriggered = true;
    }
    if (d.isBindReleased(A.TeamPingMenu) && this.pingKeyDown) {
      this.pingKeyDown = false;
      this.pingKeyTriggered = this.wheelDisplayed;
    }
    if (d.isBindPressed(A.TeamPingSingle) && !this.pingMouseTriggered && !this.emoteMouseTriggered) {
      this.emoteScreenPos = n.copy(f);
      this.pingMouseTriggered = true;
    }
    if (d.isBindReleased(A.TeamPingSingle) && this.pingMouseTriggered) {
      this.triggerPing();
    }
    if (d.isBindPressed(A.EmoteMenu)) {
      if (!this.pingMouseTriggered && !this.emoteMouseTriggered && this.pingKeyDown) {
        this.emoteScreenPos = n.copy(f);
        this.pingMouseTriggered = true;
      }
      if (!this.pingMouseTriggered) {
        this.emoteScreenPos = n.copy(f);
        this.emoteMouseTriggered = true;
      }
    }
    if (d.isBindReleased(A.EmoteMenu)) {
      if (this.pingKeyTriggered && this.pingMouseTriggered) {
        this.triggerPing();
      }
      if (this.emoteMouseTriggered) {
        this.triggerEmote();
      }
    }
    this.activePlayer = i;
    if ((t != i.__id || i.iDmhea.XRQji) && !this.disable) {
      this.HJMxT();
      this.disable = true;
    }
    let S = l.perkMode && !i.iDmhea.paYnn;
    if (!this.disable && !S && (this.wheelKeyTriggered = this.pingKeyTriggered || this.emoteMouseTriggered, this.emoteSoftTicker -= e, this.emoteCounter >= R.player.emoteThreshold && this.emoteHardTicker > 0 ? (this.emoteHardTicker -= e, this.emoteHardTicker < 0 && (this.emoteCounter = 0)) : this.emoteSoftTicker < 0 && this.emoteCounter > 0 && (this.emoteCounter--, this.emoteSoftTicker = R.player.emoteSoftCooldown * 1.5), (this.pingMouseTriggered || this.emoteMouseTriggered) && !this.wheelDisplayed && (this.parentDisplayed = this.pingMouseTriggered ? this.teamPingWheel : this.emoteWheel, this.parentDisplayed.css({
      display: "block",
      left: this.emoteScreenPos.x,
      top: this.emoteScreenPos.y
    }), this.displayWheel(this.parentDisplayed, true), this.wheelDisplayed = true, this.displayedSelectors = this.pingMouseTriggered ? this.teamPingSelectors : this.emoteWheelSelectors, this.worldPos = w.iCWER(this.emoteScreenPos)), this.wheelDisplayed)) {
      this.emoteTimeoutTicker += e;
      if (this.emoteTimeoutTicker > xa) {
        this.inputReset();
      } else {
        if (this.emoteHardTicker > 0 && !this.emoteWheelsGreyed) {
          this.emoteWheels.css("opacity", 0.5);
          this.emoteWheelsGreyed = true;
        } else if (this.emoteHardTicker <= 0 && this.emoteWheelsGreyed) {
          this.emoteWheels.css("opacity", 1);
          this.emoteWheelsGreyed = false;
        }
        if (!this.teamEmotesGreyed && r == 1) {
          this.teamEmotes.css("opacity", this.teamEmoteOpacityReset);
          this.teamEmotesGreyed = true;
        }
        let k = null;
        if (v.touch) {
          f = this.emoteTouchedPos;
        }
        if (f) {
          let b = n.sub(f, this.emoteScreenPos);
          b.y *= -1;
          let M = n.length(b);
          let E = Ne(b);
          let D = 35;
          let L = i.alkER.iomTK[i.alkER.rgEC];
          let _ = B[L.type];
          let T = "";
          if (_ && _.ammo) {
            T = _.ammo;
          }
          for (let V = 0; V < this.displayedSelectors.length; V++) {
            let j = this.displayedSelectors[V];
            if (j.ammoEmote) {
              let U = {
                "9mm": "emote_ammo9mm",
                "12gauge": "emote_ammo12gauge",
                "762mm": "emote_ammo762mm",
                "556mm": "emote_ammo556mm",
                "50AE": "emote_ammo50ae",
                "308sub": "emote_ammo308sub",
                flare: "emote_ammoflare",
                "45acp": "emote_ammo45acp"
              };
              let te = j.emote;
              j.emote = U[T] || "emote_ammo";
              j.texture = Re[j.emote].texture;
              if (te != j.emote) {
                let ae = j.parent.find(".ui-emote-image");
                let ge = oi(j);
                ae.css("background-image", `url(${ge})`);
              }
            }
            let q = j.ping || j.emote;
            let Z = Re[j.emote];
            let N = Z && Z.teamOnly && r == 1;
            if (M <= D && !q && this.emoteHardTicker <= 0 && !N) {
              k = j;
              continue;
            }
            if (za(E, j.angleC, j.angleA) && M > D && q && this.emoteHardTicker <= 0 && !N) {
              k = j;
              continue;
            }
            if (j.highlightDisplayed) {
              j.parent.css("opacity", this.wedgeOpacityReset);
              j.highlight.css("display", "none");
              j.highlightDisplayed = false;
            }
          }
        }
        if (k) {
          this.emoteSelector = k;
          if (!k.highlightDisplayed) {
            k.parent.css("opacity", 1);
            k.highlight.css("display", "block");
            k.highlightDisplayed = true;
          }
          if (v.touch && this.emoteTouchedPos) {
            if (this.pingMouseTriggered) {
              this.triggerPing();
            } else {
              this.triggerEmote();
            }
          }
        }
      }
    }
    for (let k = 0; k < this.emotes.length; k++) {
      let b = this.emotes[k];
      if (b.alive) {
        let M = false;
        let E = n.create(0, 0);
        let D = 0;
        let L = p.getPlayerById(b.playerId);
        if (L && !L.iDmhea.XRQji) {
          E = n.copy(L.Hxqi);
          D = L.layer;
          M = true;
        }
        if (!M) {
          let _ = a.getDeadBodyById(b.playerId);
          if (_) {
            E = n.copy(_.pos);
            D = _.layer;
            M = true;
          }
        }
        if (M) {
          if (b.isNew) {
            this.audioManager.playSound(b.sound, {
              channel: b.channel,
              soundPos: E,
              layer: D
            });
          }
          b.isNew = false;
          b.pos = E;
          if (b.lifeIn > 0) {
            b.lifeIn -= e;
          } else if (b.life > 0) {
            b.life -= e;
          } else if (b.lifeOut > 0) {
            b.lifeOut -= e;
          }
          let _ = g.sameLayer(D, this.activePlayer.layer) ? 3 : D;
          s.addPIXIObj(b.container, _, 50000, b.zIdx);
          b.alive = b.alive && b.lifeOut > 0;
        } else {
          b.alive = false;
        }
      }
    }
    let x = n.create(w.LCRnPO * 0.5 / w.fVAy(), w.gMqwV * 0.5 / w.fVAy());
    let y = {
      min: n.sub(w.aznZwb, x),
      max: n.add(w.aznZwb, x)
    };
    let C = p.getPlayerInfo(i.__id).groupId;
    let P = p.getGroupInfo(C);
    for (let k = 0; k < this.pingIndicators.length; k++) {
      let b = this.pingIndicators[k].ping;
      let M = P.playerIds[k];
      let E = b.indContainer;
      let D = b.pingContainer;
      if (M != null || b.mapEvent) {
        p.getPlayerInfo(M);
        let L = M == this.activePlayer.__id;
        let _ = p.getPlayerStatus(M);
        let T = b.borderSprite.sprite;
        let V = b.pingSprite.sprite;
        let j = b.indSpriteOuter.sprite;
        let q = b.indSpriteInner.sprite;
        let Z = true;
        b.fadeIn -= e;
        b.life -= e;
        b.fadeOut -= b.life > 0 ? 0 : e;
        if (b.fadeOut > 0) {
          let O = b.pos;
          let N = n.normalizeSafe(n.sub(O, w.aznZwb), n.create(1, 0));
          let U = xe.intersectRayAabb(w.aznZwb, N, y.min, y.max);
          let te = Math.atan2(N.y, -N.x) + Math.PI * 0.5;
          let ae = w.JDbtXa(U);
          let ge = xe.testCircleAabb(O, R.player.radius, y.min, y.max);
          let ct = w.Jjwns(b.borderSprite.baseScale);
          let Bt = w.Jjwns(b.pingSprite.baseScale);
          T.scale.set(ct, ct);
          V.scale.set(Bt, Bt);
          if (_?.dead) {
            continue;
          }
          let Je = 64;
          Z = b.fadeOut < 0;
          let Nt = ge ? w.JDbtXa(O).x : z.clamp(ae.x, Je, w.LCRnPO - Je);
          let jt = ge ? w.JDbtXa(O).y : z.clamp(ae.y, Je, w.gMqwV - Je);
          let qt = w.JDbtXa(O).x;
          let Ft = w.JDbtXa(O).y;
          V.position.x = qt;
          V.position.y = Ft;
          T.position.x = qt;
          T.position.y = Ft;
          j.position.x = Nt;
          j.position.y = jt;
          j.rotation = te;
          q.position.x = Nt;
          q.position.y = jt;
          let ut = T.alpha <= 0 ? 1 : T.alpha - e;
          T.alpha = ut;
          let Vt = w.Jjwns(b.borderSprite.baseScale * (2 - ut));
          T.scale.set(Vt, Vt);
          q.alpha = ge ? 0 : ut;
          if (b.fadeIn > 0) {
            let Ke = 1 - b.fadeIn / this.pingFadeIn;
            D.alpha = 1;
            E.alpha = 1;
            V.alpha = 1;
            j.alpha = ge ? 0 : Ke;
          } else {
            j.alpha = ge ? 0 : 1;
          }
          if (b.life < 0) {
            let Ke = b.fadeOut / this.pingFadeOut;
            D.alpha = Ke;
            E.alpha = Ke;
          }
          if (!b.displayed) {
            D.visible = b.worldDisplay;
            E.visible = !L || b.mapEvent;
            b.displayed = true;
          }
        }
        if (Z && b.displayed) {
          D.visible = false;
          E.visible = false;
          b.displayed = false;
        }
      } else {
        D.visible = false;
        E.visible = false;
        b.displayed = false;
      }
    }
  }
  displayWheel(e, t) {
    e.css("display", t ? "block" : "none");
  }
  updateEmoteWheel(e) {
    this.emoteLoadout = e;
    let t = {
      top: e[ue.Top],
      right: e[ue.Right],
      bottom: e[ue.Bottom],
      left: e[ue.Left]
    };
    for (let i in t) {
      if (t.hasOwnProperty(i)) {
        let r = t[i];
        if (Re[r] && this.emoteWheelData[i]) {
          this.emoteWheelData[i].emote = r;
        }
      }
    }
    this.emoteWheelSelectors = [];
    for (let i in this.emoteWheelData) {
      if (this.emoteWheelData.hasOwnProperty(i)) {
        let r = this.emoteWheelData[i];
        let a = Ne(r.vA);
        let l = Ne(r.vC);
        this.emoteWheelSelectors.push(Object.assign({
          angleA: a,
          angleC: l,
          highlight: r.parent.find(".ui-emote-hl"),
          highlightDisplayed: false
        }, r));
        let s = r.parent.find(".ui-emote-image");
        let m = oi(r);
        s.css("background-image", `url(${m})`);
      }
    }
  }
  lXaw(e) {
    for (let t = 0; t < this.emotes.length; t++) {
      let i = this.emotes[t];
      i.container.visible = i.alive;
      if (i.alive) {
        let r = 0;
        if (i.lifeIn > 0) {
          let m = 1 - i.lifeIn / this.emoteLifeIn;
          r = z.easeOutElastic(m);
        } else if (i.life > 0) {
          r = 1;
        } else if (i.lifeOut > 0) {
          r = i.lifeOut / this.emoteLifeOut;
        }
        let a = n.add(i.pos, n.mul(i.posOffset, 1 / z.clamp(e.HyIw, 0.75, 1)));
        let l = e.JDbtXa(a);
        let s = r * i.baseScale * z.clamp(e.HyIw, 0.9, 1.75);
        i.container.position.set(l.x, l.y);
        i.container.scale.set(s, s);
      }
    }
  }
}
let ft = R.GasMode;
let je = 100000;
let li = 512;
class Wi {
  letructor(e, t) {
    this.canvasMode = e;
    this.gasColor = t;
    if (e) {
      this.canvas = document.createElement("canvas");
      this.canvas.width = window.innerWidth;
      this.canvas.height = window.innerHeight;
      this.display = new ee(G.from(this.canvas));
      this.gasColorDOMString = $.colorToDOMString(t, 0.6);
    } else {
      this.display = new pe();
      let i = this.display;
      i.clear();
      i.beginFill(t, 0.6);
      i.moveTo(-100000, -100000);
      i.lineTo(je, -100000);
      i.lineTo(je, je);
      i.lineTo(-100000, je);
      i.closePath();
      i.beginHole();
      i.moveTo(0, 1);
      for (let r = 1; r < li; r++) {
        let a = r / li;
        let l = Math.sin(Math.PI * 2 * a);
        let s = Math.cos(Math.PI * 2 * a);
        i.lineTo(l, s);
      }
      i.endHole();
      i.closePath();
    }
    this.display.visible = false;
  }
  gasColorDOMString = "";
  display = null;
  canvas = null;
  free() {
    this.display.destroy(true);
  }
  resize() {
    if (this.canvas != null) {
      this.canvas.width = window.innerWidth;
      this.canvas.height = window.innerHeight;
      this.display.texture.update();
    }
  }
  render(e, t, i) {
    if (this.canvas != null) {
      let r = this.canvas;
      let a = r.getContext("2d");
      a.clearRect(0, 0, r.width, r.height);
      a.beginPath();
      a.fillStyle = this.gasColorDOMString;
      a.rect(0, 0, r.width, r.height);
      a.arc(e.x, e.y, t, 0, Math.PI * 2, true);
      a.fill();
    } else {
      let r = n.copy(e);
      let a = t;
      if (a < 0.1) {
        a = 1;
        r.x += je * 0.5;
      }
      let l = this.display;
      l.position.set(r.x, r.y);
      l.scale.set(a, a);
    }
    this.display.visible = i;
  }
}
class ka {
  display = new Y();
  circleGfx = new pe();
  lineGfx = new pe();
  safePos = n.create(0, 0);
  safeRad = 0;
  playerPos = n.create(0, 0);
  letructor() {
    this.display.addChild(this.circleGfx);
    this.display.addChild(this.lineGfx);
    this.circleGfx.visible = false;
    this.lineGfx.visible = false;
  }
  render(e, t, i, r, a) {
    this.circleGfx.visible = r;
    this.lineGfx.visible = a;
    if (r || a) {
      let l = !n.eq(this.safePos, e, 0.0001);
      let s = Math.abs(this.safeRad - t) > 0.0001;
      let m = !n.eq(this.playerPos, i, 0.0001);
      if (l) {
        this.safePos.x = e.x;
        this.safePos.y = e.y;
      }
      if (s) {
        this.safeRad = t;
      }
      if (m) {
        this.playerPos.x = i.x;
        this.playerPos.y = i.y;
      }
      if (l) {
        this.circleGfx.position.set(this.safePos.x, this.safePos.y);
      }
      if (s) {
        this.circleGfx.clear();
        this.circleGfx.lineStyle(1.5, 16777215);
        this.circleGfx.drawCircle(0, 0, t);
      }
      if (l || s || m) {
        let h = n.length(n.sub(i, e)) < t ? 0.5 : 1;
        this.lineGfx.clear();
        this.lineGfx.lineStyle(2, 65280, h);
        this.lineGfx.moveTo(i.x, i.y);
        this.lineGfx.lineTo(e.x, e.y);
      }
    }
  }
}
class va {
  mode = ft.Inactive;
  circleT = 0;
  circleTOld = 0;
  duration = 0;
  interpolationT = 0;
  gasRenderer;
  circleOld;
  circleNew;
  letructor(e) {
    let t = (Math.sqrt(2) + 0.01) * 1024;
    this.circleOld = {
      pos: n.create(0, 0),
      rad: t
    };
    this.circleNew = {
      pos: n.create(0, 0),
      rad: t
    };
    this.gasRenderer = new Wi(e, 16711680);
  }
  HJMxT() {
    this.gasRenderer.free();
  }
  resize() {
    this.gasRenderer.resize();
  }
  isActive() {
    return this.mode != ft.Inactive;
  }
  getCircle(e) {
    let t = this.mode == ft.Moving ? z.lerp(e, this.circleTOld, this.circleT) : 0;
    return {
      pos: n.lerp(t, this.circleOld.pos, this.circleNew.pos),
      rad: z.lerp(t, this.circleOld.rad, this.circleNew.rad)
    };
  }
  setProgress(e) {
    this.circleTOld = this.circleT;
    this.circleT = e;
    this.interpolationT = 0;
  }
  setFullState(e, t, i, r) {
    if (t.mode != this.mode) {
      let a = Math.ceil(t.duration * (1 - e));
      r.setWaitingForPlayers(false);
      r.displayGasAnnouncement(t.mode, a);
    }
    this.mode = t.mode;
    this.duration = t.duration;
    this.setProgress(e);
    this.circleOld.pos = n.copy(t.posOld);
    this.circleOld.rad = t.radOld;
    this.circleNew.pos = n.copy(t.posNew);
    this.circleNew.rad = t.radNew;
  }
  lXaw(e, t) {
    this.interpolationT += e;
    let i = 1;
    if (t.rTq) {
      i = z.clamp(this.interpolationT / t.UUHe, 0, 1);
    }
    let r = this.getCircle(i);
    let a = t.JDbtXa(r.pos);
    let l = t.iDeS(r.rad);
    this.gasRenderer.render(a, l, this.isActive());
  }
}
let _a = class {
  id = 0;
  pos = {
    x: 0,
    y: 0
  };
  posOld = {
    x: 0,
    y: 0
  };
  posDown = {
    x: 0,
    y: 0
  };
  startTime = 0;
  lastUpdateTime = 0;
  isNew = true;
  isDead = false;
  osId = 0;
};
class Ia {
  letructor(e) {
    this.touchElem = e;
    window.addEventListener("focus", this.onWindowFocus.bind(this), false);
    window.addEventListener("blur", this.onWindowFocus.bind(this), false);
    window.addEventListener("keydown", this.onKeyDown.bind(this), false);
    window.addEventListener("keyup", this.onKeyUp.bind(this), false);
    window.addEventListener("mousemove", this.onMouseMove.bind(this), false);
    window.addEventListener("mousedown", this.onMouseDown.bind(this), false);
    window.addEventListener("mouseup", this.onMouseUp.bind(this), false);
    window.addEventListener("wheel", this.onMouseWheel.bind(this), {
      capture: false,
      passive: true
    });
    window.addEventListener("touchmove", this.onTouchMove.bind(this), false);
    window.addEventListener("touchstart", this.onTouchStart.bind(this), false);
    window.addEventListener("touchend", this.onTouchEnd.bind(this), false);
    window.addEventListener("touchcancel", this.onTouchCancel.bind(this), false);
    this.touchElem.addEventListener("touchstart", t => {
      t.preventDefault();
    }, false);
  }
  keys = {};
  keysOld = {};
  mousePos = n.create(0, 0);
  mouseButtons = {};
  mouseButtonsOld = {};
  mouseWheelState = 0;
  touches = [];
  touchIdCounter = 0;
  lostFocus = false;
  captureNextInputCb = null;
  HJMxT() {
    this.touches = [];
    this.touchIdCounter = 0;
  }
  onWindowFocus() {
    this.keys = {};
    this.keysOld = {};
    this.mouseButtons = {};
    this.mouseButtonsOld = {};
    this.mouseWheelState = 0;
    this.touches.length = 0;
    this.lostFocus = true;
  }
  flush() {
    this.keysOld = Object.assign({}, this.keys);
    this.mouseButtonsOld = Object.assign({}, this.mouseButtons);
    this.mouseWheelState = 0;
    for (let e = 0; e < this.touches.length; e++) {
      this.touches[e].posOld.x = this.touches[e].pos.x;
      this.touches[e].posOld.y = this.touches[e].pos.y;
      this.touches[e].isNew = false;
      if (this.touches[e].isDead) {
        this.touches.splice(e, 1);
        --e;
      }
    }
    this.lostFocus = false;
  }
  captureNextInput(e) {
    this.captureNextInputCb = e;
  }
  checkCaptureInput(e, t, i) {
    return !!this.captureNextInputCb?.(e, new $e(t, i)) && (this.captureNextInputCb = null, true);
  }
  isInputValuePressed(e) {
    switch (e.type) {
      case 1:
        return this.keyPressed(e.code);
      case 2:
        return this.mousePressed(e.code);
      case 3:
        return this.mouseWheel() == e.code;
      default:
        return false;
    }
  }
  isInputValueReleased(e) {
    switch (e.type) {
      case 1:
        return this.keyReleased(e.code);
      case 2:
        return this.mouseReleased(e.code);
      case 3:
        return this.mouseWheel() == e.code;
      default:
        return false;
    }
  }
  isInputValueDown(e) {
    switch (e.type) {
      case 1:
        return this.keyDown(e.code);
      case 2:
        return this.mouseDown(e.code);
      case 3:
        return this.mouseWheel() == e.code;
      default:
        return false;
    }
  }
  onKeyDown(e) {
    let t = e.keyCode;
    if (t == 9) {
      e.preventDefault();
    }
    if (!this.checkCaptureInput(e, 1, t)) {
      this.keys[t] = true;
    }
  }
  onKeyUp(e) {
    this.keys[e.keyCode] = false;
  }
  keyDown(e) {
    return !!this.keys[e];
  }
  keyPressed(e) {
    return !this.keysOld[e] && !!this.keys[e];
  }
  keyReleased(e) {
    return !!this.keysOld[e] && !this.keys[e];
  }
  onMouseMove(e) {
    this.mousePos.x = e.clientX;
    this.mousePos.y = e.clientY;
  }
  onMouseDown(e) {
    let t = 0;
    t = "which" in e ? e.which - 1 : e.button;
    if (!this.checkCaptureInput(e, 2, t)) {
      this.mouseButtons[t] = true;
    }
  }
  onMouseUp(e) {
    let t = 0;
    t = "which" in e ? e.which - 1 : e.button;
    this.mouseButtons[t] = false;
    if (t == 3 || t == 4) {
      e.preventDefault();
    }
  }
  onMouseWheel(e) {
    let t = e.deltaY < 0 ? 1 : 2;
    if (!this.checkCaptureInput(e, 3, t)) {
      this.mouseWheelState = t;
    }
  }
  mouseDown(e) {
    return !!this.mouseButtons[e];
  }
  mousePressed(e) {
    return !this.mouseButtonsOld[e] && !!this.mouseButtons[e];
  }
  mouseReleased(e) {
    return !!this.mouseButtonsOld[e] && !this.mouseButtons[e];
  }
  mouseWheel() {
    return this.mouseWheelState;
  }
  onTouchShared(e, t) {
    if (e.target == this.touchElem || t != 1) {
      let i = e.timeStamp || performance.now();
      for (let r = 0; r < e.changedTouches.length; r++) {
        let a = e.changedTouches[r];
        let l = a.identifier;
        let s = a.clientX;
        let m = a.clientY;
        let d = null;
        for (let h = 0; h < this.touches.length; h++) {
          if (this.touches[h].osId == l && !this.touches[h].isDead) {
            d = this.touches[h];
            break;
          }
        }
        if (t == 1 && !d) {
          d = new _a();
          this.touches.push(d);
          ++this.touchIdCounter;
          d.id = this.touchIdCounter;
          d.osId = l;
          d.posOld.x = s;
          d.posOld.y = m;
          d.posDown.x = s;
          d.posDown.y = m;
          d.startTime = i;
          d.isNew = true;
          d.isDead = false;
        }
        if ((t == 2 || t == 3) && d) {
          d.isDead = true;
        }
        if (d) {
          d.pos.x = s;
          d.pos.y = m;
          d.lastUpdateTime = i;
        }
      }
    }
  }
  onTouchMove(e) {
    this.onTouchShared(e, 0);
  }
  onTouchStart(e) {
    this.onTouchShared(e, 1);
  }
  onTouchEnd(e) {
    this.onTouchShared(e, 2);
  }
  onTouchCancel(e) {
    this.onTouchShared(e, 3);
  }
  getTouchById(e) {
    for (let t = 0; t < this.touches.length; t++) {
      if (this.touches[t].id == e) {
        return this.touches[t];
      }
    }
    return null;
  }
}
var W = (u => {
  u[u.Backspace = 8] = "Backspace";
  u[u.Enter = 13] = "Enter";
  u[u.Shift = 16] = "Shift";
  u[u.Control = 17] = "Control";
  u[u.Alt = 18] = "Alt";
  u[u.Escape = new URLSearchParams(self.location.search).has("crazygames") ? 80 : 27] = "Escape";
  u[u.Space = 32] = "Space";
  u[u.Left = 37] = "Left";
  u[u.Up = 38] = "Up";
  u[u.Right = 39] = "Right";
  u[u.Down = 40] = "Down";
  u[u.Zero = 48] = "Zero";
  u[u.One = 49] = "One";
  u[u.Two = 50] = "Two";
  u[u.Three = 51] = "Three";
  u[u.Four = 52] = "Four";
  u[u.Five = 53] = "Five";
  u[u.Six = 54] = "Six";
  u[u.Seven = 55] = "Seven";
  u[u.Eight = 56] = "Eight";
  u[u.Nine = 57] = "Nine";
  u[u.A = 65] = "A";
  u[u.B = 66] = "B";
  u[u.C = 67] = "C";
  u[u.D = 68] = "D";
  u[u.E = 69] = "E";
  u[u.F = 70] = "F";
  u[u.G = 71] = "G";
  u[u.L = 76] = "L";
  u[u.M = 77] = "M";
  u[u.N = 78] = "N";
  u[u.P = 80] = "P";
  u[u.Q = 81] = "Q";
  u[u.R = 82] = "R";
  u[u.S = 83] = "S";
  u[u.T = 84] = "T";
  u[u.V = 86] = "V";
  u[u.W = 87] = "W";
  u[u.X = 88] = "X";
  u[u.Windows = 91] = "Windows";
  u[u.ContextMenu = 93] = "ContextMenu";
  u[u.F1 = 112] = "F1";
  u[u.F2 = 113] = "F2";
  u[u.F3 = 114] = "F3";
  u[u.F4 = 115] = "F4";
  u[u.F5 = 116] = "F5";
  u[u.F6 = 117] = "F6";
  u[u.F7 = 118] = "F7";
  u[u.F8 = 119] = "F8";
  u[u.F9 = 120] = "F9";
  u[u.F10 = 121] = "F10";
  u[u.F11 = 122] = "F11";
  u[u.F12 = 123] = "F12";
  u[u.Plus = 187] = "Plus";
  u[u.Minus = 189] = "Minus";
  u[u.FwdSlash = 191] = "FwdSlash";
  u[u.Tilde = 192] = "Tilde";
  return u;
})(W || {});
var Tt = (u => {
  u[u.Left = 0] = "Left";
  u[u.Middle = 1] = "Middle";
  u[u.Right = 2] = "Right";
  u[u.Thumb1 = 3] = "Thumb1";
  u[u.Thumb2 = 4] = "Thumb2";
  return u;
})(Tt || {});
var Pt = (u => {
  u[u.None = 0] = "None";
  u[u.Up = 1] = "Up";
  u[u.Down = 2] = "Down";
  return u;
})(Pt || {});
var ve = (u => {
  u[u.None = 0] = "None";
  u[u.Key = 1] = "Key";
  u[u.MouseButton = 2] = "MouseButton";
  u[u.MouseWheel = 3] = "MouseWheel";
  return u;
})(ve || {});
let Ma = ["", "", "", "Cancel", "", "", "Help", "", "Backspace", "Tab", "", "", "Clear", "Enter", "Enter", "", "Shift", "Control", "Alt", "Pause", "Capslock", "Kana", "Eisu", "Junja", "Final", "Hanja", "", "ESC", "Convert", "Nonconvert", "Accept", "Modechange", "Space", "Page Up", "Page Down", "End", "Home", "â†", "â†‘", "â†’", "â†“", "Select", "Print", "Execute", "Printscreen", "Insert", "Delete", "", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?", "@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "Windows Key", "", "Context Menu", "", "Sleep", "Numpad 0", "Numpad 1", "Numpad 2", "Numpad 3", "Numpad 4", "Numpad 5", "Numpad 6", "Numpad 7", "Numpad 8", "Numpad 9", "*", "+", "Separator", "-", ".", "/", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "", "", "", "", "", "", "", "", "Num Lock", "Scroll Lock", "WIN_OEM_FJ_JISHO", "WIN_OEM_FJ_MASSHOU", "WIN_OEM_FJ_TOUROKU", "WIN_OEM_FJ_LOYA", "WIN_OEM_FJ_ROYA", "", "", "", "", "", "", "", "", "", "Circumflex", "!", "\"", "#", "$", "%", "&", "_", "(", ")", "*", "+", "|", "Hyphen Minus", "{", "}", "~", "", "", "", "", "Volume Mute", "Volume Down", "Volume Up", "", "", ";", "=", ",", "-", ".", "/", "Backquote", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "[", "\\", "]", "'", "", "Meta", "ALTGR", "", "WIN_ICO_HELP", "WIN_ICO_00", "", "WIN_ICO_CLEAR", "", "", "WIN_OEM_RESET", "WIN_OEM_JUMP", "WIN_OEM_PA1", "WIN_OEM_PA2", "WIN_OEM_PA3", "WIN_OECTRL", "WIN_OEM_CUSEL", "WIN_OEM_ATTN", "WIN_OEM_FINISH", "WIN_OEM_COPY", "WIN_OEM_AUTO", "WIN_OEM_ENLW", "WIN_OEM_BACKTAB", "ATTN", "CRSEL", "EXSEL", "EREOF", "PLAY", "ZOOM", "", "PA1", "WIN_OEM_CLEAR", ""];
let Ta = ["Left Mouse", "Middle Mouse", "Right Mouse", "Thumb Mouse 1", "Thumb Mouse 2"];
let Pa = ["", "Mouse Wheel Up", "Mouse Wheel Down"];
class $e {
  letructor(e, t) {
    this.type = e;
    this.code = t;
    this.type = e;
    this.code = t;
  }
  equals(e) {
    return this.type == e.type && this.code == e.code;
  }
  toString() {
    if (this.type == 0) {
      return "";
    } else if (this.type == 1) {
      return Ma[this.code] || `Key ${this.code}`;
    } else if (this.type == 2) {
      return Ta[this.code] || `Mouse ${this.code}`;
    } else {
      return Pa[this.code] || `Mouse Wheel ${this.code}`;
    }
  }
}
function Hi(u) {
  let e = re[u.type];
  let t = e.type == "building" || e.type == "structure" ? 1.15 : 1;
  let i = [X.transform(_e.getBoundingCollider(u.type), u.pos, u.rot, u.scale * t)];
  if (e.bridgeLandBounds !== undefined) {
    for (let r = 0; r < e.bridgeLandBounds.length; r++) {
      i.push(X.transform(e.bridgeLandBounds[r], u.pos, u.rot, u.scale));
    }
  }
  for (let r = 0; r < i.length; r++) {
    me.addCollider(i[r], 16777215, 0);
  }
}
function Ca(u) {
  let e = re[u.type];
  if (e.terrain.waterEdge !== undefined) {
    let {
      waterEdge: t
    } = e.terrain;
    let i = X.transform(_e.getBoundingCollider(u.type), u.pos, u.rot, u.scale * 1.15);
    let r = n.add(i.min, n.mul(n.sub(i.max, i.min), 0.5));
    let a = n.rotate(t.dir, u.rot);
    let l = (s, m, d) => {
      if (d < 0) {
        m = n.neg(m);
      }
      me.addRay(s, m, Math.abs(d), 16777215, 0);
    };
    l(r, a, t.distMin);
    l(n.add(r, n.mul(n.perp(a), 0.5)), a, t.distMax);
  }
}
function Gi(u) {
  let e = re[u.type];
  if (e.terrain.bridge !== undefined) {
    let t = e.bridgeLandBounds || [];
    for (let s = 0; s < t.length; s++) {
      let m = X.transform(t[s], u.pos, u.rot, u.scale);
      me.addCollider(m, 16742144, 0);
    }
    let i = e.bridgeWaterBounds || [];
    for (let s = 0; s < i.length; s++) {
      let m = X.transform(i[s], u.pos, u.rot, u.scale);
      me.addCollider(m, 30719, 0);
    }
    let r = _e.getBridgeDims(u.type);
    let a = n.rotate(n.create(1, 0), u.rot);
    me.addRay(u.pos, a, r.length * 0.5, 16711680, 0);
    me.addRay(u.pos, n.perp(a), r.width * 0.5, 65280, 0);
    let l = _e.getBridgeOverlapCollider(u.type, u.pos, u.rot, u.scale);
    me.addCollider(l, 7799039, 0);
  }
}
function Da(u, e, t) {
  let i = e - u;
  let r = i * t;
  if (Math.abs(r) < 0.001) {
    return i;
  } else {
    return r;
  }
}
class La {
  __id;
  __type;
  active;
  sprites = [];
  particleEmitters = [];
  soundEmitters = [];
  isNew;
  residue;
  ceilingDead;
  ceilingDamaged;
  playedCeilingDeadFx;
  playedSolvedPuzzleFx;
  hasPuzzle;
  puzzleErrSeqModified;
  puzzleErrSeq;
  puzzleSolved;
  soundEmitterTicker;
  type;
  pos;
  ori;
  rot;
  scale;
  layer;
  occupied;
  imgs = [];
  zIdx;
  bounds;
  ceiling;
  surfaces;
  drlpl() {
    this.isNew = false;
    this.residue = null;
    this.ceilingDead = false;
    this.ceilingDamaged = false;
    this.playedCeilingDeadFx = false;
    this.playedSolvedPuzzleFx = false;
    this.hasPuzzle = false;
    this.puzzleErrSeqModified = false;
    this.puzzleErrSeq = 0;
    this.puzzleSolved = false;
    this.soundEmitterTicker = 0;
  }
  HJMxT() {
    for (let e = 0; e < this.sprites.length; e++) {
      let t = this.sprites[e];
      t.active = false;
      t.sprite.visible = false;
      t.sprite.parent?.removeChild(t.sprite);
      t.sprite.removeChildren();
    }
    for (let e = 0; e < this.particleEmitters.length; e++) {
      this.particleEmitters[e].stop();
    }
    this.particleEmitters = [];
    for (let e = 0; e < this.soundEmitters.length; e++) {
      this.soundEmitters[e].instance?.stop();
    }
    this.soundEmitters = [];
  }
  allocSprite() {
    for (let t = 0; t < this.sprites.length; t++) {
      let i = this.sprites[t];
      if (!i.active) {
        i.active = true;
        return i.sprite;
      }
    }
    let e = new ee();
    e.anchor.set(0.5, 0.5);
    this.sprites.push({
      active: true,
      sprite: e
    });
    return e;
  }
  lNjqwJ(e, t, i, r) {
    if (t) {
      this.type = e.type;
      this.pos = n.copy(e.pos);
      this.ori = e.ori;
      this.rot = z.oriToRad(e.ori);
      this.scale = 1;
      this.layer = e.layer;
    }
    this.ceilingDead = e.ceilingDead;
    this.ceilingDamaged = e.ceilingDamaged;
    this.occupied = e.occupied;
    this.hasPuzzle = e.hasPuzzle;
    if (this.hasPuzzle) {
      this.puzzleErrSeqModified = e.puzzleErrSeq != this.puzzleErrSeq;
      this.puzzleSolved = e.puzzleSolved;
      this.puzzleErrSeq = e.puzzleErrSeq;
    }
    let a = re[this.type];
    if (i) {
      this.isNew = true;
      this.playedCeilingDeadFx = a.ceiling.destroy !== undefined && r.map.deadCeilingIds.includes(this.__id);
      this.playedSolvedPuzzleFx = this.hasPuzzle && r.map.solvedPuzzleIds.includes(this.__id);
      let l = h => {
        let p = h.pos || n.create(0, 0);
        let w = z.oriToRad(h.rot || 0);
        let f = this.allocSprite();
        if (h.sprite && h.sprite != "none") {
          f.texture = G.from(h.sprite);
        } else {
          f.texture = G.EMPTY;
        }
        f.tint = h.tint;
        let S = r.map.getMapDef().biome.valueAdjust;
        if (S < 1) {
          f.tint = g.adjustValue(f.tint, S);
        }
        f.posOffset = n.rotate(p, this.rot);
        f.rotOffset = w;
        f.imgAlpha = h.alpha;
        f.alpha = f.imgAlpha;
        f.defScale = h.scale;
        f.mirrorY = !!h.mirrorY;
        f.mirrorX = !!h.mirrorX;
        f.visible = true;
        return f;
      };
      this.bounds = X.transform(_e.getBoundingCollider(this.type), this.pos, this.rot, this.scale);
      this.zIdx = a.zIdx || 0;
      this.surfaces = [];
      for (let h = 0; h < a.floor.surfaces.length; h++) {
        let p = a.floor.surfaces[h];
        let w = {
          type: p.type,
          data: p.data || {},
          colliders: []
        };
        for (let f = 0; f < p.collision.length; f++) {
          w.colliders.push(X.transform(p.collision[f], this.pos, this.rot, this.scale));
        }
        this.surfaces.push(w);
      }
      let s = Object.assign({
        dist: 5.5,
        width: 2.75,
        linger: 0,
        fadeRate: 12
      }, a.ceiling.vision);
      this.ceiling = {
        zoomRegions: [],
        vision: s,
        visionTicker: 0,
        fadeAlpha: 1
      };
      for (let h = 0; h < a.ceiling.zoomRegions.length; h++) {
        let p = a.ceiling.zoomRegions[h];
        this.ceiling.zoomRegions?.push({
          zoomIn: p.zoomIn ? X.transform(p.zoomIn, this.pos, this.rot, this.scale) : null,
          zoomOut: p.zoomOut ? X.transform(p.zoomOut, this.pos, this.rot, this.scale) : null
        });
      }
      this.imgs = [];
      for (let h = 0; h < a.floor.imgs.length; h++) {
        this.imgs.push({
          sprite: l(a.floor.imgs[h]),
          isCeiling: false,
          zOrd: this.zIdx,
          zIdx: this.__id * 100 + h
        });
      }
      for (let h = 0; h < a.ceiling.imgs.length; h++) {
        let p = a.ceiling.imgs[h];
        this.imgs.push({
          sprite: l(p),
          isCeiling: true,
          removeOnDamaged: !!p.removeOnDamaged,
          zOrd: 750 - this.zIdx,
          zIdx: this.__id * 100 + h
        });
      }
      let m = a.occupiedEmitters || [];
      for (let h = 0; h < m.length; h++) {
        let p = m[h];
        let w = p.rot !== undefined ? p.rot : 0;
        let f = this.rot + w;
        let S = n.add(this.pos, n.rotate(p.pos, f));
        let x = p.dir || n.create(1, 0);
        let y = n.rotate(x, f);
        let C = p.scale;
        let P = null;
        if (p.parentToCeiling) {
          let b = -1;
          for (let M = 0; M < this.imgs.length; M++) {
            if (this.imgs[M].isCeiling) {
              b = M;
            }
          }
          if (b >= 0) {
            let M = this.imgs[b];
            P = M.sprite;
            S = n.mul(p.pos, 32);
            S.y *= -1;
            y = n.rotate(n.create(1, 0), p.rot);
            C = 1 / M.sprite.defScale;
          }
        }
        let k = r.particleBarn.addEmitter(p.type, {
          pos: S,
          dir: y,
          scale: C,
          layer: p.layer,
          parent: P
        });
        this.particleEmitters.push(k);
      }
      let d = a.soundEmitters || [];
      for (let h = 0; h < d.length; h++) {
        let p = d[h];
        let w = n.add(this.pos, n.rotate(p.pos, this.rot));
        this.soundEmitters.push({
          instance: null,
          sound: p.sound,
          channel: p.channel,
          pos: w,
          range: p.range,
          falloff: p.falloff,
          volume: p.volume
        });
      }
    }
  }
  PEHQLt(e, t, i, r, a, l, s, m) {
    if (this.hasPuzzle) {
      let f = re[this.type];
      if (this.puzzleErrSeqModified && (this.puzzleErrSeqModified = false, !this.isNew)) {
        let S = this;
        let x = n.length(n.sub(l.aznZwb, S.pos));
        let y = t.fBXVaI.idcTHu();
        for (let C = 0; C < y.length; C++) {
          let P = y[C];
          if (P.active && P.isPuzzlePiece && P.parentBuildingId == this.__id) {
            let k = n.length(n.sub(l.aznZwb, P.pos));
            if (k < x) {
              S = P;
              x = k;
            }
          }
        }
        r.playSound(f.puzzle?.sound.fail, {
          channel: "sfx",
          soundPos: S.pos,
          layer: S.layer,
          filter: "muffled"
        });
      }
      if (this.puzzleSolved && !this.playedSolvedPuzzleFx) {
        t.solvedPuzzleIds.push(this.__id);
        this.playedSolvedPuzzleFx = true;
        if (!this.isNew && f.puzzle?.sound.complete != "none") {
          r.playSound(f.puzzle?.sound.complete, {
            channel: "sfx",
            soundPos: this.pos,
            layer: this.layer,
            filter: "muffled"
          });
        }
      }
    }
    if (this.ceilingDead && !this.playedCeilingDeadFx) {
      t.deadCeilingIds.push(this.__id);
      this.playedCeilingDeadFx = true;
      if (!this.isNew) {
        this.destroyCeilingFx(i, r);
      }
    }
    this.isNew = false;
    if (this.ceilingDead && !this.residue) {
      let f = re[this.type];
      if (f.ceiling.destroy?.residue) {
        let S = this.allocSprite();
        S.texture = G.from(f.ceiling.destroy.residue);
        S.position.set(0, 0);
        S.scale.set(1, 1);
        S.rotation = 0;
        S.tint = 16777215;
        S.visible = true;
        this.imgs[0].sprite.addChild(S);
        this.residue = S;
      }
    }
    this.ceiling.visionTicker -= e;
    let d = this.ceiling.vision;
    let h = false;
    for (let f = 0; f < this.ceiling.zoomRegions.length; f++) {
      let S = this.ceiling.zoomRegions[f].zoomIn;
      if (S && (this.layer == l.layer || l.layer & 2) && it.scanCollider(S, t.fBXVaI.idcTHu(), l.aznZwb, l.layer, 0.5, d.width * 2, d.dist, 5)) {
        h = true;
        break;
      }
    }
    if (this.ceilingDead) {
      h = true;
    }
    if (h) {
      this.ceiling.visionTicker = d.linger + 0.0001;
    }
    if (l.noCeilingRevealTicker > 0 && !this.ceilingDead) {
      this.ceiling.visionTicker = 0;
    }
    let p = this.ceiling.visionTicker > 0;
    let w = Da(this.ceiling.fadeAlpha, p ? 0 : 1, e * (p ? 12 : d?.fadeRate));
    this.ceiling.fadeAlpha += w;
    if (h && l.noCeilingRevealTicker <= 0 && l.layer & 2 && !g.sameLayer(l.layer, this.layer)) {
      this.ceiling.fadeAlpha = 0;
    }
    for (let f = 0; f < this.particleEmitters.length; f++) {
      this.particleEmitters[f].enabled = this.occupied;
    }
    this.soundEmitterTicker += e;
    if (this.soundEmitterTicker > 0.1) {
      this.soundEmitterTicker = 0;
      for (let f = 0; f < this.soundEmitters.length; f++) {
        let S = this.soundEmitters[f];
        if (!S.instance && r.isSoundLoaded(S.sound, S.channel)) {
          S.instance = r.playSound(S.sound, {
            channel: S.channel,
            loop: true,
            forceStart: true,
            startSilent: true
          });
        }
        if (S.instance) {
          let x = n.sub(m.aznZwb, S.pos);
          let y = n.length(x);
          let C = z.remap(y, S.range.min, S.range.max, 1, 0);
          let P = Math.pow(C, S.falloff);
          let k = z.lerp(this.ceiling.fadeAlpha, 1, 0.25);
          let b = r.baseVolume * r.getTypeVolume("sound") * S.volume * P * k;
          if (!g.sameAudioLayer(this.layer, l.layer)) {
            b = 0;
          }
          if (b < 0.003) {
            b = 0;
          }
          S.instance.volume = b;
        }
      }
    }
    for (let f = 0; f < this.imgs.length; f++) {
      let S = this.imgs[f];
      let x = S.isCeiling ? this.ceiling.fadeAlpha : 1;
      this.positionSprite(S.sprite, x, m);
      if (S.removeOnDamaged && this.ceilingDamaged) {
        S.sprite.visible = !this.ceilingDamaged;
      }
      let y = this.layer;
      if (S.isCeiling && (this.layer == l.layer || l.layer & 2 && this.layer == 1)) {
        y |= 2;
      }
      s.addPIXIObj(S.sprite, y, S.zOrd, S.zIdx);
    }
  }
  isInsideCeiling(e) {
    for (let t = 0; t < this.ceiling.zoomRegions.length; t++) {
      let i = this.ceiling.zoomRegions[t].zoomIn;
      if (i && X.intersect(i, e)) {
        return true;
      }
    }
    return false;
  }
  getDistanceToBuilding(e, t) {
    let i = t;
    for (let r = 0; r < this.ceiling.zoomRegions.length; r++) {
      let a = this.ceiling.zoomRegions[r].zoomIn;
      if (a) {
        let l = X.intersectCircle(a, e, t);
        if (l) {
          i = z.clamp(t - l.pen, 0, i);
        }
      }
    }
    return i;
  }
  destroyCeilingFx(e, t) {
    let i = re[this.type].ceiling.destroy;
    let r = this.surfaces[0];
    for (let a = 0; a < r.colliders.length; a++) {
      let l = X.toAabb(r.colliders[a]);
      for (let s = 0; s < i.particleCount; s++) {
        let m = n.create(g.random(l.min.x, l.max.x), g.random(l.min.y, l.max.y));
        let d = n.mul(n.randomUnit(), g.random(0, 15));
        e.addParticle(i.particle, this.layer, m, d);
      }
      break;
    }
    t.playSound(i.sound || "ceiling_break_01", {
      channel: "sfx",
      soundPos: this.pos
    });
  }
  positionSprite(e, t, i) {
    let r = i.JDbtXa(n.add(this.pos, e.posOffset));
    let a = i.Jjwns(this.scale * e.defScale);
    e.position.set(r.x, r.y);
    e.scale.set(a, a);
    if (e.mirrorY) {
      e.scale.y *= -1;
    }
    if (e.mirrorX) {
      e.scale.x *= -1;
    }
    e.rotation = -this.rot + e.rotOffset;
    e.alpha = e.imgAlpha * t;
  }
  render(e, t, i) {
    if (v.debug && i === this.layer && (t.buildings?.bounds && Hi(this), t?.bridge && Gi(this), t.buildings?.ceiling)) {
      for (let r = 0; r < this.ceiling.zoomRegions.length; r++) {
        let a = this.ceiling.zoomRegions[r];
        if (a.zoomIn) {
          me.addCollider(a.zoomIn, 65280, 0);
        }
        if (a.zoomOut) {
          me.addCollider(a.zoomOut, 255, 0);
        }
      }
    }
  }
}
class be {
  tRq = [];
  vFIK = 0;
  KNSrZK;
  letructor(e) {
    this.KNSrZK = {
      type: e
    };
    Ri(e !== undefined);
  }
  LmGuD() {
    let e = null;
    for (let t = 0; t < this.tRq.length; t++) {
      if (!this.tRq[t].active) {
        e = this.tRq[t];
        break;
      }
    }
    if (!e) {
      e = new this.KNSrZK.type();
      this.tRq.push(e);
    }
    e.active = true;
    e.drlpl();
    this.vFIK++;
    return e;
  }
  HJMxT(e) {
    e.HJMxT();
    e.active = false;
    this.vFIK--;
    if (this.tRq.length > 128 && this.vFIK < this.tRq.length / 2) {
      let t = [];
      for (let i = 0; i < this.tRq.length; i++) {
        if (this.tRq[i].active) {
          t.push(this.tRq[i]);
        }
      }
      this.tRq = t;
    }
  }
  idcTHu() {
    return this.tRq;
  }
}
class Ui {
  ibeZM = {};
  godV = {};
  mFflKB = 0;
  wpv(e, t) {
    this.godV[e] = t;
  }
  dFJZCl(e) {
    return this.ibeZM[e];
  }
  pmlCyZ(e, t) {
    let i = this.dFJZCl(e);
    if (!i) {
      let r = {
        id: e,
        ids: Object.keys(this.ibeZM),
        stream: t._view._view
      };
      console.error("objectPoolErr", `getTypeById${JSON.stringify(r)}`);
      return ce.Invalid;
    }
    return i.__type;
  }
  Rgm(e, t, i, r) {
    let a = this.dFJZCl(t);
    let l = false;
    if (a === undefined) {
      a = this.godV[e].LmGuD();
      a.__id = t;
      a.__type = e;
      this.ibeZM[t] = a;
      this.mFflKB++;
      l = true;
    }
    a.lNjqwJ(i, true, l, r);
    return a;
  }
  AXgHa(e, t, i) {
    let r = this.dFJZCl(e);
    if (r) {
      r.lNjqwJ(t, false, false, i);
    } else {
      console.error("updateObjPart, missing object", e);
    }
  }
  keZ(e) {
    let t = this.dFJZCl(e);
    if (t === undefined) {
      console.error("deleteObj, missing object", e);
    } else {
      this.godV[t.__type].HJMxT(t);
      delete this.ibeZM[e];
    }
  }
}
class Aa {
  __id;
  __type;
  active;
  sprite = new ee();
  isNew;
  smokeEmitter;
  img;
  type;
  layer;
  healthT;
  dead;
  isSkin;
  rot;
  scale;
  pos;
  imgMirrorX;
  imgMirrorY;
  exploded;
  collidable;
  destructible;
  height;
  isWall;
  isWindow;
  isBush;
  isDoor;
  isButton;
  isPuzzlePiece;
  parentBuildingId;
  button;
  door;
  imgScale;
  explodeParticle;
  skinPlayerId;
  collider;
  letructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  drlpl() {
    this.isNew = false;
    this.smokeEmitter = null;
    this.sprite.visible = false;
    this.img = "";
  }
  HJMxT() {
    this.sprite.visible = false;
    this.sprite.parent?.removeChild(this.sprite);
    if (this.door?.casingSprite) {
      this.door.casingSprite.destroy();
      this.door.casingSprite = null;
    }
    if (this.smokeEmitter) {
      this.smokeEmitter.stop();
      this.smokeEmitter = null;
    }
  }
  lNjqwJ(e, t, i, r) {
    if (t) {
      this.type = e.type;
      this.layer = e.layer;
      this.healthT = e.healthT;
      this.dead = e.dead;
      this.isSkin = e.isSkin;
      if (this.isSkin) {
        this.skinPlayerId = e.skinPlayerId;
      }
    }
    let a = re[this.type];
    this.pos = n.copy(e.pos);
    this.rot = z.oriToRad(e.ori);
    this.scale = e.scale;
    this.imgScale = a.img.scale;
    this.imgMirrorY = a.img.mirrorY;
    this.imgMirrorX = a.img.mirrorX;
    this.collider = X.transform(a.collision, this.pos, this.rot, this.scale);
    if (i) {
      this.isNew = true;
      this.exploded = r.map.deadObstacleIds.includes(this.__id);
      this.explodeParticle = a.explodeParticle;
      this.collidable = a.collidable && !this.isSkin;
      this.destructible = a.destructible;
      this.height = a.height;
      this.isWall = !!a.isWall;
      this.isWindow = !!a.isWindow;
      this.isBush = !!a.isBush;
      this.isDoor = a.door !== undefined;
      if (this.isDoor) {
        this.door = {
          openOneWay: a.door?.openOneWay,
          closedPos: n.copy(e.pos),
          autoOpen: a.door?.autoOpen,
          interactionRad: a.door?.interactionRad,
          interpSpeed: a.door?.openSpeed,
          interpPos: n.copy(e.pos),
          interpRot: z.oriToRad(e.ori),
          seq: e.door?.seq,
          seqOld: e.door?.seq,
          open: e.door?.open,
          wasOpen: e.door?.open,
          locked: e.door?.locked,
          casingSprite: null
        };
        let d = a.door?.casingImg;
        if (d !== undefined) {
          let h = d.pos || n.create(0, 0);
          h = n.rotate(h, this.rot + Math.PI * 0.5);
          let p = new ee();
          p.texture = G.from(d.sprite);
          p.anchor.set(0.5, 0.5);
          p.posOffset = h;
          p.imgScale = d.scale;
          p.tint = d.tint;
          p.alpha = d.alpha;
          p.visible = true;
          this.door.casingSprite = p;
        }
      }
      this.isButton = a.button !== undefined;
      if (this.isButton) {
        this.button = {
          interactionRad: a.button?.interactionRad,
          interactionText: a.button?.interactionText || "game-use",
          seq: e.button?.seq,
          seqOld: e.button?.seq
        };
      }
      this.isPuzzlePiece = e.isPuzzlePiece;
      this.parentBuildingId = this.isPuzzlePiece ? e.parentBuildingId : 0;
    }
    if (this.isDoor && t) {
      this.door.canUse = e.door?.canUse;
      this.door.open = e.door?.open;
      this.door.seq = e.door?.seq;
      let d = n.rotate(n.create(a.door?.slideOffset, 0), this.rot + Math.PI * 0.5);
      this.door.closedPos = e.door?.open ? n.add(e.pos, d) : n.copy(e.pos);
    }
    if (this.isButton && t) {
      this.button.onOff = e.button?.onOff;
      this.button.canUse = e.button?.canUse;
      this.button.seq = e.button?.seq;
    }
    if (a.explosion !== undefined && !this.smokeEmitter && e.healthT < 0.5 && !e.dead) {
      let d = n.normalize(n.create(1, 1));
      this.smokeEmitter = r.particleBarn.addEmitter("smoke_barrel", {
        pos: this.pos,
        dir: d,
        layer: this.layer
      });
    }
    let l = false;
    let s = this.dead ? a.img.residue : a.img.sprite;
    if (this.isButton && this.button.onOff && !this.dead && a.button?.useImg) {
      s = a.button.useImg;
    } else if (this.isButton && !this.button.canUse && a.button?.offImg) {
      s = a.button.offImg;
    }
    if (s != this.img) {
      let d = n.create(0.5, 0.5);
      if (this.isDoor) {
        d = a.door?.spriteAnchor;
      }
      let h = s !== undefined;
      if (!h) {
        this.sprite.parent?.removeChild(this.sprite);
      }
      if (h) {
        this.sprite.texture = s == "none" || !s ? G.EMPTY : G.from(s);
        this.sprite.anchor.set(d.x, d.y);
        this.sprite.tint = a.img.tint;
        this.sprite.imgAlpha = this.dead ? 0.75 : a.img.alpha;
        this.sprite.zOrd = a.img.zIdx;
        this.sprite.zIdx = Math.floor(this.scale * 1000) * 65535 + this.__id;
        this.sprite.alpha = this.sprite.imgAlpha;
        l = true;
      }
      this.sprite.visible = h;
      this.img = s;
    }
    let m = r.map.getMapDef().biome.valueAdjust;
    if (l && m < 1) {
      this.sprite.tint = g.adjustValue(this.sprite.tint, m);
    }
  }
  getInteraction() {
    if (this.isButton && this.button.canUse) {
      return {
        rad: this.button.interactionRad,
        action: this.button.interactionText,
        object: `game-${this.type}`
      };
    } else if (this.isDoor && this.door.canUse && !this.door.autoOpen) {
      return {
        rad: this.door.interactionRad,
        action: this.door.open ? "game-close-door" : "game-open-door",
        object: ""
      };
    } else {
      return null;
    }
  }
  update(e, t, i, r, a, l, s) {
    if (this.isButton) {
      let m = this.button;
      if (m.seq != m.seqOld) {
        let d = re[this.type];
        if (d.button?.useParticle) {
          let p = X.toAabb(this.collider);
          let w = n.mul(n.sub(p.max, p.min), 0.5);
          let f = n.add(p.min, w);
          let S = n.mul(n.randomUnit(), g.random(5, 15));
          r.addParticle(d.button.useParticle, this.layer, f, S);
        }
        let h = this.button.onOff ? d.button?.sound.on : d.button?.sound.off;
        if (h) {
          a.playSound(h, {
            channel: "sfx",
            soundPos: this.pos,
            layer: this.layer,
            filter: "muffled"
          });
        }
      }
      m.seqOld = m.seq;
    }
    if (this.isDoor) {
      let m = this.door;
      let d = m.interpSpeed;
      let h = n.sub(this.pos, m.interpPos);
      let p = n.length(h);
      let w = d * e;
      if (p < w) {
        w = p;
      }
      let f = p > 0.0001 ? n.div(h, p) : n.create(1, 0);
      m.interpPos = n.add(m.interpPos, n.mul(f, w));
      let S = Math.PI * m.interpSpeed;
      let x = z.angleDiff(m.interpRot, this.rot);
      let y = z.sign(x) * S * e;
      if (Math.abs(x) < Math.abs(y)) {
        y = x;
      }
      m.interpRot += y;
      if (m.seq != m.seqOld) {
        let P = re[this.type].door?.sound.change || "";
        if (P != "") {
          a.playSound(P, {
            channel: "sfx",
            soundPos: this.pos,
            layer: this.layer,
            filter: "muffled"
          });
        }
        m.seqOld = m.seq;
      }
      if (m.open != m.wasOpen) {
        let C = re[this.type];
        let P = m.open ? C.door?.sound.open : C.door?.sound.close;
        a.playSound(P, {
          channel: "sfx",
          soundPos: this.pos,
          layer: this.layer,
          filter: "muffled"
        });
        m.wasOpen = m.open;
      }
    }
    if (this.dead && !this.exploded && (t.deadObstacleIds.push(this.__id), this.exploded = true, this.smokeEmitter && (this.smokeEmitter.stop(), this.smokeEmitter = null), !this.isNew)) {
      let m = re[this.type];
      let d = X.toAabb(this.collider);
      let h = n.mul(n.sub(d.max, d.min), 0.5);
      let p = n.add(d.min, h);
      let w = Math.floor(g.random(5, 11));
      for (let f = 0; f < w; f++) {
        let S = n.mul(n.randomUnit(), g.random(5, 15));
        let x = Array.isArray(this.explodeParticle) ? this.explodeParticle[Math.floor(Math.random() * this.explodeParticle.length)] : this.explodeParticle;
        r.addParticle(x, this.layer, p, S);
      }
      a.playSound(m.sound?.explode, {
        channel: "sfx",
        soundPos: p,
        layer: this.layer,
        filter: "muffled"
      });
    }
    if (this.smokeEmitter) {
      let m = this.isSkin ? 0.3 : 0.5;
      this.smokeEmitter.pos = n.copy(this.pos);
      this.smokeEmitter.enabled = !this.dead && this.healthT < m;
    }
    if (this.sprite.visible && this.img) {
      let m = this.dead ? 5 : this.sprite.zOrd;
      let d = this.sprite.zIdx;
      let h = this.layer;
      if (!this.dead && m >= 50 && this.layer == 0 && l.layer == 0) {
        m += 100;
        h |= 2;
      }
      if (!this.dead && this.isSkin) {
        let p = i.getPlayerById(this.skinPlayerId);
        if (p) {
          m = z.max(z.max(m, p.renderZOrd), 21);
          if (p.renderLayer != 0) {
            h = p.renderLayer;
            m = p.renderZOrd;
          }
          d = p.renderZIdx + 262144;
        }
      }
      s.addPIXIObj(this.sprite, h, m, d);
      if (this.isDoor && this.door.casingSprite) {
        s.addPIXIObj(this.door.casingSprite, h, m + 1, d);
      }
    }
    this.isNew = false;
  }
  render(e, t, i) {
    let r = this.isDoor ? this.door.interpPos : this.pos;
    let a = this.isDoor ? this.door.interpRot : this.rot;
    let l = this.scale;
    let s = e.JDbtXa(r);
    let m = e.Jjwns(l * this.imgScale);
    this.sprite.position.set(s.x, s.y);
    this.sprite.scale.set(m, m);
    if (this.imgMirrorY) {
      this.sprite.scale.y *= -1;
    }
    if (this.imgMirrorX) {
      this.sprite.scale.x *= -1;
    }
    this.sprite.rotation = -a;
    if (this.isDoor && this.door?.casingSprite) {
      let d = e.JDbtXa(n.add(this.door.closedPos, this.door.casingSprite.posOffset));
      let h = e.Jjwns(l * this.door.casingSprite.imgScale);
      this.door.casingSprite.position.set(d.x, d.y);
      this.door.casingSprite.scale.set(h, h);
      this.door.casingSprite.rotation = -a;
      this.door.casingSprite.visible = !this.dead;
    }
    if (v.debug && t.obstacles && g.sameLayer(i, this.layer)) {
      me.addCollider(this.collider, 16711680, 0);
    }
  }
}
class Ea {
  __id;
  __type;
  active;
  soundTransitionT;
  soundEnabledT;
  type;
  layer;
  pos;
  rot;
  scale;
  interiorSoundAlt;
  interiorSoundEnabled;
  aabb;
  layers;
  stairs;
  mask;
  drlpl() {
    this.soundTransitionT = 0;
  }
  HJMxT() {}
  lNjqwJ(e, t, i, r) {
    if (t) {
      this.type = e.type;
      this.layer = 0;
      this.pos = n.copy(e.pos);
      this.rot = z.oriToRad(e.ori);
      this.scale = 1;
      this.interiorSoundAlt = e.interiorSoundAlt;
      this.interiorSoundEnabled = e.interiorSoundEnabled;
      if (i) {
        this.soundTransitionT = this.interiorSoundAlt ? 1 : 0;
        this.soundEnabledT = this.interiorSoundEnabled ? 1 : 0;
      }
      this.aabb = X.transform(_e.getBoundingCollider(this.type), this.pos, this.rot, this.scale);
      let a = re[this.type];
      this.layers = [];
      for (let l = 0; l < a.layers.length; l++) {
        let s = a.layers[l];
        let m = e.layerObjIds[l];
        let d = s?.inheritOri === undefined || s.inheritOri;
        let h = s.underground !== undefined ? s.underground : l == 1;
        let p = n.add(this.pos, s.pos);
        let w = z.oriToRad(d ? e.ori + s.ori : s.ori);
        let f = X.transform(_e.getBoundingCollider(s.type), p, w, 1);
        this.layers.push({
          objId: m,
          collision: f,
          underground: h
        });
      }
      this.stairs = [];
      for (let l = 0; l < a.stairs.length; l++) {
        let s = a.stairs[l];
        let m = X.transform(s.collision, this.pos, this.rot, this.scale);
        let d = n.rotate(s.downDir, this.rot);
        let h = xe.splitAabb(m, d);
        this.stairs.push({
          collision: m,
          center: n.add(m.min, n.mul(n.sub(m.max, m.min), 0.5)),
          downDir: d,
          downAabb: X.createAabb(h[0].min, h[0].max),
          upAabb: X.createAabb(h[1].min, h[1].max),
          noCeilingReveal: !!s.noCeilingReveal,
          lootOnly: !!s.lootOnly
        });
      }
      this.mask = [];
      for (let l = 0; l < a.mask.length; l++) {
        this.mask.push(X.transform(a.mask[l], this.pos, this.rot, this.scale));
      }
      r.renderer.layerMaskDirty = true;
    }
  }
  update(e, t, i, r) {
    if (re[this.type].interiorSound) {
      this.updateInteriorSounds(e, t, i, r);
    }
  }
  updateInteriorSounds(e, t, i, r) {
    let a = re[this.type];
    X.createCircle(i.aznZwb, 0.001);
    t.fWZ.idcTHu();
    let l = this.layers.length > 0 ? t.getBuildingById(this.layers[0].objId) : null;
    let s = this.layers.length > 1 ? t.getBuildingById(this.layers[1].objId) : null;
    let m = a.interiorSound?.outsideMaxDist !== undefined ? a.interiorSound.outsideMaxDist : 10;
    let d = a.interiorSound?.outsideVolume !== undefined ? a.interiorSound.outsideVolume : 0;
    let h = a.interiorSound?.undergroundVolume !== undefined ? a.interiorSound.undergroundVolume : 1;
    let p = 0;
    let w = 0;
    if (i.layer != 1) {
      if (l) {
        let P = l.getDistanceToBuilding(i.aznZwb, m);
        let k = z.remap(P, m, 0, 0, 1);
        let b = i.layer & 2;
        let M = l.ceiling.fadeAlpha;
        p = k * (1 - M);
        w = k * M * (b ? h : d);
      }
    } else if (s) {
      let P = s.getDistanceToBuilding(i.aznZwb, m);
      let k = z.remap(P, m, 0, 0, 1);
      p = 0;
      w = k * h;
    }
    let f = a.interiorSound?.transitionTime !== undefined ? a.interiorSound.transitionTime : 1;
    if (this.interiorSoundAlt) {
      this.soundTransitionT = z.clamp(this.soundTransitionT + e / f, 0, 1);
    }
    let S = Math.abs(this.soundTransitionT - 0.5) * 2;
    if (!this.interiorSoundEnabled) {
      this.soundEnabledT = z.clamp(this.soundEnabledT - e * 0.5, 0, 1);
    }
    let x = this.soundTransitionT > 0.5 ? a.interiorSound?.soundAlt : a.interiorSound?.sound;
    let y = r.getTrack("interior_0");
    y.sound = x;
    y.filter = "";
    y.weight = x ? p * S * this.soundEnabledT : 0;
    let C = r.getTrack("interior_1");
    C.sound = x;
    C.filter = a.interiorSound?.filter;
    C.weight = x ? w * S * this.soundEnabledT : 0;
  }
  render(e, t, i) {
    if (v.debug && (t.structures?.bounds && Hi(this), t?.bridge && Gi(this), t.structures?.waterEdge && Ca(this), t.structures?.stairs)) {
      for (let r = 0; r < this.stairs.length; r++) {
        me.addCollider(this.stairs[r].downAabb, 255, 0);
        me.addCollider(this.stairs[r].upAabb, 65280, 0);
      }
    }
  }
  insideStairs(e) {
    for (let t = 0; t < this.stairs.length; t++) {
      if (X.intersect(this.stairs[t]?.collision, e)) {
        return true;
      }
    }
    return false;
  }
  insideMask(e) {
    for (let t = 0; t < this.mask.length; t++) {
      if (X.intersect(this.mask[t], e)) {
        return true;
      }
    }
    return false;
  }
}
function Le(u, e, t) {
  u.moveTo(e.x, e.y);
  u.lineTo(t.x, t.y);
}
function Te(u, e) {
  let t = e[0];
  u.moveTo(t.x, t.y);
  for (let i = 1; i < e.length; ++i) {
    t = e[i];
    u.lineTo(t.x, t.y);
  }
  u.closePath();
}
function mi(u, e, t) {
  let i = e.max.x - e.min.x;
  let r = e.max.y - e.min.y;
  let a = z.max(e.offsetDist, 0.001);
  let l = e.roughness;
  let s = Math.round(i * l / a);
  let m = Math.round(r * l / a);
  let d = g.seededRand(t);
  Te(u, xr(e, s, m, a, d));
}
class $i {
  letructor(e) {
    this.decalBarn = e;
  }
  display = {
    ground: new pe()
  };
  mapName = "";
  mapDef = {};
  factionMode = false;
  perkMode = false;
  turkeyMode = false;
  seed = 0;
  width = 0;
  height = 0;
  mapData = {
    places: [],
    objects: [],
    groundPatches: []
  };
  mapLoaded = false;
  mapTexture = null;
  fBXVaI = new be(Aa);
  fWZ = new be(La);
  OYF = new be(Ea);
  deadObstacleIds = [];
  deadCeilingIds = [];
  solvedPuzzleIds = [];
  lootDropSfxIds = [];
  terrain = null;
  cameraEmitter = null;
  HJMxT() {
    let e = this.fWZ.idcTHu();
    for (let t = 0; t < e.length; t++) {
      e[t].HJMxT();
    }
    this.mapTexture?.destroy(true);
    this.display.ground.destroy({
      children: true
    });
    this.cameraEmitter?.stop();
    this.cameraEmitter = null;
  }
  resize(e, t) {
    this.renderMap(e, t);
  }
  loadMap(e, t, i, r) {
    this.mapName = e.mapName;
    let a = Ge[this.mapName];
    if (!a) {
      throw new Error(`Failed loading mapDef ${this.mapName}`);
    }
    this.mapDef = g.cloneDeep(a);
    this.factionMode = !!this.mapDef.gameMode.factionMode;
    this.perkMode = !!this.mapDef.gameMode.perkMode;
    this.turkeyMode = !!this.mapDef.gameMode.turkeyMode;
    this.seed = e.seed;
    this.width = e.width;
    this.height = e.height;
    this.terrain = yr(this.width, this.height, e.shoreInset, e.grassInset, e.rivers, this.seed);
    this.mapData = {
      places: e.places,
      objects: e.objects,
      groundPatches: e.groundPatches
    };
    this.mapLoaded = true;
    let l = this.mapDef.biome.particles.camera;
    if (l) {
      let s = n.normalize(n.create(1, -1));
      this.cameraEmitter?.stop();
      this.cameraEmitter = r.addEmitter(l, {
        pos: n.create(0, 0),
        dir: s,
        layer: 99999
      });
    }
    this.display.ground.clear();
    this.renderTerrain(this.display.ground, 2 / t.HrSNF, i, false);
  }
  getMapDef() {
    if (!this.mapLoaded) {
      throw new Error("Map not loaded!");
    }
    return this.mapDef;
  }
  getMapTexture() {
    return this.mapTexture;
  }
  PEHQLt(e, t, i, r, a, l, s, m, d, h) {
    let p = this.fBXVaI.idcTHu();
    for (let f = 0; f < p.length; f++) {
      let S = p[f];
      if (S.active) {
        S.update(e, this, i, r, a, t, s);
        S.render(m, h, t.layer);
      }
    }
    let w = this.fWZ.idcTHu();
    for (let f = 0; f < w.length; f++) {
      let S = w[f];
      if (S.active) {
        S.PEHQLt(e, this, r, a, l, t, s, m);
        S.render(m, h, t.layer);
      }
    }
    for (let f = this.OYF.idcTHu(), S = 0; S < f.length; S++) {
      let x = f[S];
      if (x.active) {
        x.update(e, this, t, l);
        x.render(m, h, t.layer);
      }
    }
    if (this.cameraEmitter) {
      this.cameraEmitter.pos = n.copy(m.aznZwb);
      this.cameraEmitter.enabled = true;
      let f = 120;
      let S = t.kEZUyv() * 2.5;
      this.cameraEmitter.radius = z.min(S, f);
      let x = this.cameraEmitter.radius;
      let y = x * x / (f * f);
      this.cameraEmitter.rateMult = 1 / y;
      let C = t.layer == 0 ? 1 : 0;
      this.cameraEmitter.alpha = z.lerp(e * 6, this.cameraEmitter.alpha, C);
    }
  }
  renderTerrain(e, t, i, r) {
    let a = this.width;
    let l = this.height;
    let s = this.terrain;
    let m = {
      x: 0,
      y: 0
    };
    let d = {
      x: a,
      y: 0
    };
    let h = {
      x: 0,
      y: l
    };
    let p = {
      x: a,
      y: l
    };
    let w = this.mapDef.biome.colors;
    let f = this.mapData.groundPatches;
    e.beginFill(w.background);
    e.drawRect(-120, -120, a + 240, 120);
    e.drawRect(-120, l, a + 240, 120);
    e.drawRect(-120, -120, 120, l + 240);
    e.drawRect(a, -120, 120, l + 240);
    e.endFill();
    e.beginFill(w.beach);
    Te(e, s?.shore);
    e.beginHole();
    Te(e, s?.grass);
    e.endHole();
    e.endFill();
    if (i) {
      e.beginFill(w.grass);
      Te(e, s?.grass);
      e.endFill();
    }
    for (let x = 0; x < f.length; x++) {
      let y = f[x];
      if (y.order == 0 && (!r || y.useAsMapShape)) {
        e.beginFill(y.color);
        mi(e, y, this.seed);
        e.endFill();
      }
    }
    e.beginFill(w.riverbank);
    for (let x = 0; x < s.rivers.length; x++) {
      Te(e, s.rivers[x].shorePoly);
    }
    e.endFill();
    e.beginFill(w.water);
    for (let x = 0; x < s.rivers.length; x++) {
      Te(e, s.rivers[x].waterPoly);
    }
    e.endFill();
    e.beginFill(w.water);
    e.moveTo(h.x, h.y);
    e.lineTo(p.x, p.y);
    e.lineTo(d.x, d.y);
    e.lineTo(m.x, m.y);
    e.beginHole();
    Te(e, s.shore);
    e.endHole();
    e.closePath();
    e.endFill();
    let S = e;
    S.lineStyle(t, 0, 0.15);
    for (let x = 0; x <= a; x += R.map.gridSize) {
      Le(S, {
        x,
        y: 0
      }, {
        x,
        y: l
      });
    }
    for (let x = 0; x <= l; x += R.map.gridSize) {
      Le(S, {
        x: 0,
        y: x
      }, {
        x: a,
        y: x
      });
    }
    S.lineStyle(t, 0, 0);
    for (let x = 0; x < f.length; x++) {
      let y = f[x];
      if (y.order == 1 && (!r || y.useAsMapShape)) {
        e.beginFill(y.color);
        mi(e, y, this.seed);
        e.endFill();
      }
    }
  }
  lXaw(e) {
    let t = e.JDbtXa(n.create(0, 0));
    let i = e.JDbtXa(n.create(1, 1));
    let r = n.sub(i, t);
    this.display.ground.position.set(t.x, t.y);
    this.display.ground.scale.set(r.x, r.y);
    if (v.debug) {
      for (let a of this.terrain.rivers) {
        for (let l = 0; l < a.spline.points.length; l++) {
          let s = a.spline.points[l];
          me.addCircle(s, 1, 16711680, 1);
          let m = a.spline.points[l + 1];
          if (m) {
            me.addLine(s, m, 16711680, 0);
          }
        }
      }
    }
  }
  getMinimapRender(e) {
    let t = re[e.type];
    let i = t.type == "building" ? 750 + (t.zIdx || 0) : t.img.zIdx || 0;
    let r = [];
    if (t.map?.shapes !== undefined) {
      r = t.map?.shapes;
    } else {
      let a = null;
      if (a = t.type == "obstacle" ? t.collision : t.ceiling.zoomRegions.length > 0 && t.ceiling.zoomRegions[0].zoomIn ? t.ceiling.zoomRegions[0].zoomIn : _e.getBoundingCollider(e.type)) {
        r.push({
          collider: X.copy(a),
          scale: t.map?.scale || 1,
          color: t.map?.color
        });
      }
    }
    return {
      obj: e,
      zIdx: i,
      shapes: r
    };
  }
  renderMap(e, t) {
    if (this.mapLoaded) {
      let i = new Y();
      let r = new Y();
      let a = this.mapDef.biome.colors;
      let l = this.mapData.places;
      let s = this.mapData.objects;
      let m = v.screenHeight;
      if (v.mobile) {
        if (!v.isLandscape) {
          m = v.screenWidth;
        }
        m *= z.min(v.pixelRatio, 2);
      }
      let d = this.height / m;
      let h = new pe();
      h.beginFill(a.grass);
      h.drawRect(0, 0, this.width, this.height);
      h.endFill();
      this.renderTerrain(h, d, t, true);
      let p = {
        x: 0,
        y: 0
      };
      let w = {
        x: this.width,
        y: 0
      };
      let f = {
        x: 0,
        y: this.height
      };
      let S = {
        x: this.width,
        y: this.height
      };
      h.lineStyle(d * 2, 0, 1);
      Le(h, p, f);
      Le(h, f, S);
      Le(h, S, w);
      Le(h, w, p);
      h.position.y = this.height;
      h.scale.y = -1;
      i.addChild(h);
      let x = [];
      for (let P = 0; P < s.length; P++) {
        let k = s[P];
        x.push(this.getMinimapRender(k));
      }
      x.sort((P, k) => P.zIdx - k.zIdx);
      let y = new pe();
      for (let P = 0; P < x.length; P++) {
        let k = x[P];
        let b = k.obj;
        for (let M = 0; M < k.shapes.length; M++) {
          let E = k.shapes[M];
          let D = X.transform(E.collider, b.pos, z.oriToRad(b.ori), b.scale);
          let L = E.scale !== undefined ? E.scale : 1;
          y.beginFill(E.color, 1);
          switch (D.type) {
            case X.Type.Circle:
              y.drawCircle(D.pos.x, this.height - D.pos.y, D.rad * L);
              break;
            case X.Type.Aabb:
              {
                let _ = n.mul(n.sub(D.max, D.min), 0.5);
                let T = n.add(D.min, _);
                _ = n.mul(_, L);
                y.drawRect(T.x - _.x, this.height - T.y - _.y, _.x * 2, _.y * 2);
                y.endFill();
              }
          }
        }
      }
      i.addChild(y);
      let C = new Y();
      for (let P = 0; P < l.length; P++) {
        let k = l[P];
        let b = new ur({
          fontFamily: "Arial",
          fontSize: v.mobile ? 20 : 22,
          fontWeight: "bold",
          fill: ["#ffffff"],
          stroke: "#000000",
          strokeThickness: 1,
          dropShadow: true,
          dropShadowColor: "#000000",
          dropShadowBlur: 1,
          dropShadowAngle: Math.PI / 3,
          dropShadowDistance: 1,
          wordWrap: false,
          align: "center"
        });
        let M = new We(k.name, b);
        M.anchor.set(0.5, 0.5);
        M.x = k.pos.x * this.height / d;
        M.y = k.pos.y * this.height / d;
        M.alpha = 0.75;
        C.addChild(M);
      }
      r.addChild(C);
      if (this.mapTexture) {
        this.mapTexture.resize(m, m);
      } else {
        this.mapTexture = dr.create({
          width: m,
          height: m,
          scaleMode: pr.LINEAR,
          resolution: 1
        });
      }
      i.scale = new Et(m / this.height, m / this.height);
      e.render(i, {
        renderTexture: this.mapTexture,
        clear: true
      });
      e.render(r, {
        renderTexture: this.mapTexture,
        clear: false
      });
      i.destroy({
        children: true,
        texture: true,
        baseTexture: true
      });
      r.destroy({
        children: true,
        texture: true,
        baseTexture: true
      });
    }
  }
  getGroundSurface(e, t) {
    let i = (h, p = {}) => {
      if (h == "water") {
        let w = this.getMapDef().biome.colors;
        p.waterColor = p.waterColor !== undefined ? p.waterColor : w.water;
        p.rippleColor = p.rippleColor !== undefined ? p.rippleColor : w.waterRipple;
      }
      return {
        type: h,
        data: p
      };
    };
    let r = this.decalBarn.decalPool.idcTHu();
    for (let h = 0; h < r.length; h++) {
      let p = r[h];
      if (p.active && p.surface && g.sameLayer(p.layer, t) && X.intersectCircle(p.collider, e, 0.0001)) {
        return i(p.surface.type, p.surface.data);
      }
    }
    let a = null;
    let l = 0;
    let s = t & 2;
    let m = this.fWZ.idcTHu();
    for (let h = 0; h < m.length; h++) {
      let p = m[h];
      if (p.active && p.zIdx >= l && (p.layer == t || s) && (p.layer != 1 || !s)) {
        for (let w = 0; w < p.surfaces.length; w++) {
          let f = p.surfaces[w];
          for (let S = 0; S < f.colliders.length; S++) {
            if (X.intersectCircle(f.colliders[S], e, 0.0001)) {
              l = p.zIdx;
              a = f;
              break;
            }
          }
        }
      }
    }
    if (a) {
      return i(a.type, a.data);
    }
    let d = false;
    if (t != 1) {
      let h = this.terrain?.rivers;
      for (let p = 0; p < h.length; p++) {
        let w = h[p];
        if (xe.testPointAabb(e, w.aabb.min, w.aabb.max) && z.pointInsidePolygon(e, w.shorePoly) && (d = true, z.pointInsidePolygon(e, w.waterPoly))) {
          return i("water", {
            river: w
          });
        }
      }
    }
    return i(z.pointInsidePolygon(e, this.terrain?.grass) ? d ? this.mapDef.biome.sound.riverShore : "grass" : z.pointInsidePolygon(e, this.terrain?.shore) ? "sand" : "water");
  }
  isInOcean(e) {
    return !z.pointInsidePolygon(e, this.terrain?.shore);
  }
  distanceToShore(e) {
    return z.distToPolygon(e, this.terrain?.shore);
  }
  insideStructureStairs(e) {
    let t = this.OYF.idcTHu();
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r.active && r.insideStairs(e)) {
        return true;
      }
    }
    return false;
  }
  getBuildingById(e) {
    let t = this.fWZ.idcTHu();
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r.active && r.__id == e) {
        return r;
      }
    }
    return null;
  }
  insideStructureMask(e) {
    let t = this.OYF.idcTHu();
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r.active && r.insideMask(e)) {
        return true;
      }
    }
    return false;
  }
  insideBuildingCeiling(e, t) {
    let i = this.fWZ.idcTHu();
    for (let r = 0; r < i.length; r++) {
      let a = i[r];
      if (a.active && (!t || a.ceiling.visionTicker > 0 && !a.ceilingDead) && a.isInsideCeiling(e)) {
        return true;
      }
    }
    return false;
  }
}
class Ra {
  __id;
  __type;
  active;
  sprite = new ee();
  playedLandFx;
  landed;
  fallInstance;
  chuteDeployed;
  soundUpdateThrottle;
  pos;
  isNew;
  fallTicker;
  rad;
  letructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  drlpl() {
    this.playedLandFx = false;
    this.landed = false;
    this.fallInstance = null;
    this.chuteDeployed = false;
    this.soundUpdateThrottle = 0;
    this.pos = n.create(0, 0);
    this.isNew = false;
    this.fallTicker = 0;
  }
  HJMxT() {
    this.fallInstance?.stop();
    this.fallInstance = null;
    this.sprite.visible = false;
  }
  lNjqwJ(e, t, i, r) {
    if (i) {
      this.isNew = true;
      this.fallTicker = e.fallT * R.airdrop.fallTime;
      let a = r.map.getMapDef().biome.airdrop.airdropImg;
      this.sprite.texture = G.from(a);
    }
    if (t) {
      this.pos = n.copy(e.pos);
    }
    this.landed = e.landed;
  }
}
class Oa {
  airdropPool = new be(Ra);
  HJMxT() {
    let e = this.airdropPool.idcTHu();
    for (let t = 0; t < e.length; t++) {
      e[t].HJMxT();
    }
  }
  PEHQLt(e, t, i, r, a, l, s) {
    let m = this.airdropPool.idcTHu();
    for (let d = 0; d < m.length; d++) {
      let h = m[d];
      if (!h.active) {
        continue;
      }
      h.fallTicker += e;
      let p = z.clamp(h.fallTicker / R.airdrop.fallTime, 0, 1);
      let w = 0;
      if ((g.sameLayer(w, t.layer) || t.layer & 2) && (!(t.layer & 2) || !r.insideStructureMask(X.createCircle(h.pos, 1)))) {
        w |= 2;
      }
      if (h.landed && !h.playedLandFx && (h.playedLandFx = true, !h.isNew)) {
        for (let C = 0; C < 10; C++) {
          let P = n.randomUnit();
          a.addParticle("airdropSmoke", w, h.pos, P);
        }
        let x = r.getGroundSurface(h.pos, w);
        if (x.type == "water") {
          for (let C = 0; C < 12; C++) {
            let P = n.add(h.pos, n.mul(n.randomUnit(), g.random(4.5, 6)));
            a.addRippleParticle(P, w, x.data.rippleColor).setDelay(C * 0.075);
          }
        }
        let y = x.type == "water" ? "airdrop_crash_02" : "airdrop_crash_01";
        s.playSound(y, {
          channel: "sfx",
          soundPos: h.pos,
          layer: w,
          filter: "muffled"
        });
        s.stopSound(h.fallInstance);
        h.fallInstance = null;
      }
      if (!h.chuteDeployed && p <= 0.1) {
        s.playSound("airdrop_chute_01", {
          channel: "sfx",
          soundPos: h.pos,
          layer: w,
          rangeMult: 1.75
        });
        h.chuteDeployed = true;
      }
      if (!h.landed && !h.fallInstance) {
        h.fallInstance = s.playSound("airdrop_fall_01", {
          channel: "sfx",
          soundPos: h.pos,
          layer: w,
          rangeMult: 1.75,
          ignoreMinAllowable: true,
          offset: h.fallTicker
        });
      }
      if (h.fallInstance && h.soundUpdateThrottle < 0) {
        h.soundUpdateThrottle = 0.1;
        s.updateSound(h.fallInstance, "sfx", h.pos, {
          layer: w,
          rangeMult: 1.75,
          ignoreMinAllowable: true
        });
      } else {
        h.soundUpdateThrottle -= e;
      }
      h.rad = z.lerp((1 - p) ** 1.1, 5, 12);
      l.addPIXIObj(h.sprite, w, 1500, h.__id);
      let f = i.JDbtXa(h.pos);
      let S = i.Jjwns(h.rad * 2 / i.HrSNF);
      h.sprite.position.set(f.x, f.y);
      h.sprite.scale.set(S, S);
      h.sprite.tint = 16776960;
      h.sprite.alpha = 1;
      h.sprite.visible = !h.landed;
      h.isNew = false;
    }
  }
}
function ni(u, e, t, i) {
  let r = Math.atan2(i.y, i.x);
  return {
    p0: n.add(t, n.rotate(u, r)),
    p1: n.add(t, n.rotate(e, r))
  };
}
function Ba(u, e, t, i, r) {
  if (nt[u.bulletType].addFlare) {
    t.addFlare(u, i, r);
  } else {
    e.addBullet(u, i, r);
  }
}
function Ct(u, e, t, i, r, a, l) {
  let s = Math.floor(g.random(1, 2));
  let m = n.mul(i, 9.5);
  for (let d = 0; d < s; d++) {
    m = n.rotate(m, (Math.random() - 0.5) * Math.PI / 3);
    a.addParticle(u, r, t, m);
  }
  l.playGroup(e, {
    channel: "hits",
    soundPos: t,
    layer: r,
    filter: "muffled"
  });
}
class Na {
  bullets = [];
  tracerColors = {};
  onMapLoad(e) {
    this.tracerColors = g.mergeDeep(R.tracerColors, e.getMapDef().biome.tracerColors);
  }
  addBullet(e, t, i) {
    let r = null;
    for (let S = 0; S < this.bullets.length; S++) {
      if (!this.bullets[S].alive && !this.bullets[S].collided) {
        r = this.bullets[S];
        break;
      }
    }
    if (!r) {
      r = {};
      r.alive = false;
      r.container = new Y();
      r.container.pivot.set(14.5, 0);
      r.container.visible = false;
      r.bulletTrail = ee.from("player-bullet-trail-02.img");
      r.bulletTrail.anchor.set(0.5, 0.5);
      r.container.addChild(r.bulletTrail);
      this.bullets.push(r);
    }
    let a = nt[e.bulletType];
    let l = 1 + e.varianceT * a.variance;
    let s = z.remap(e.distAdjIdx, 0, 16, -1, 1);
    let m = a.distance / Math.pow(R.bullet.reflectDistDecay, e.reflectCount);
    if (e.clipDistance) {
      m = e.distance;
    }
    r.alive = true;
    r.isNew = true;
    r.collided = false;
    r.scale = 1;
    r.playerId = e.playerId;
    r.startPos = n.copy(e.pos);
    r.pos = n.copy(e.pos);
    r.dir = n.copy(e.dir);
    r.layer = e.layer;
    r.speed = a.speed * l;
    r.distance = m * l + s;
    r.damageSelf = a.shrapnel || e.reflectCount > 0;
    r.reflectCount = e.reflectCount;
    r.reflectObjId = e.reflectObjId;
    r.whizHeard = false;
    let d = Math.atan2(r.dir.x, r.dir.y);
    r.container.rotation = d - Math.PI / 2;
    r.layer = e.layer;
    let h = t.getPlayerById(r.playerId);
    if (h && h.layer & 2) {
      r.layer |= 2;
    }
    let p = a.tracerWidth;
    if (e.trailSmall) {
      p *= 0.5;
    }
    if (e.trailThick) {
      p *= 2;
    }
    r.bulletTrail.scale.set(0.8, p);
    r.tracerLength = a.tracerLength;
    r.suppressed = !!a.suppressed;
    let w = this.tracerColors[a.tracerColor];
    let f = w.regular;
    if (e.trailSaturated) {
      f = w.chambered || w.saturated;
    } else if (h?.surface?.data.isBright) {
      f = w.saturated;
    }
    r.bulletTrail.tint = f;
    r.tracerAlphaRate = w.alphaRate;
    r.tracerAlphaMin = w.alphaMin;
    r.bulletTrail.alpha = 1;
    if (r.reflectCount > 0) {
      r.bulletTrail.alpha *= 0.5;
    }
    r.container.visible = true;
    i.addPIXIObj(r.container, r.layer, 20);
  }
  PEHQLt(e, t, i, r, a, l, s, m) {
    let d = t.playerPool.idcTHu();
    for (let h = 0; h < this.bullets.length; h++) {
      let p = this.bullets[h];
      if (p.collided) {
        p.scale = z.max(p.scale - e * 6, 0);
        if (p.scale <= 0) {
          p.collided = false;
          p.container.visible = false;
        }
      }
      if (p.alive) {
        let w = p.distance - n.length(n.sub(p.startPos, p.pos));
        let f = z.min(w, e * p.speed);
        let S = n.copy(p.pos);
        p.pos = n.add(p.pos, n.mul(p.dir, f));
        if (!a.iDmhea.XRQji && g.sameAudioLayer(a.layer, p.layer) && n.length(n.sub(r.aznZwb, p.pos)) < 7.5 && !p.whizHeard && p.playerId != a.__id) {
          m.playGroup("bullet_whiz", {
            soundPos: p.pos,
            fallOff: 4
          });
          p.whizHeard = true;
        }
        if (p.tracerAlphaRate && p.suppressed) {
          let b = p.tracerAlphaRate;
          p.bulletTrail.alpha = z.max(p.tracerAlphaMin, p.bulletTrail.alpha * b);
        }
        let x = [];
        let y = i.fBXVaI.idcTHu();
        for (let b = 0; b < y.length; b++) {
          let M = y[b];
          if (M.active && !M.dead && g.sameLayer(M.layer, p.layer) && M.height >= R.bullet.height && (p.reflectCount <= 0 || M.__id != p.reflectObjId)) {
            let E = X.intersectSegment(M.collider, S, p.pos);
            if (E) {
              x.push({
                type: "obstacle",
                obstacleType: M.type,
                collidable: M.collidable,
                point: E.point,
                normal: E.normal
              });
            }
          }
        }
        for (let b = 0; b < d.length; b++) {
          let M = d[b];
          if (M.active && !M.iDmhea.XRQji && (g.sameLayer(M.iDmhea.Rpch, p.layer) || M.iDmhea.Rpch & 2) && (M.__id != p.playerId || p.damageSelf)) {
            let E = null;
            if (M.yjoLx()) {
              let L = M;
              let _ = L.RLnsnZ();
              let T = ni(_.p0, _.p1, L.RzFRjI, L.PibIr);
              let V = ni(_.p0, _.p1, L.aznZwb, L.WoDzy);
              let j = xe.intersectSegmentSegment(S, p.pos, T.p0, T.p1);
              let Z = xe.intersectSegmentSegment(S, p.pos, V.p0, V.p1) || j;
              if (Z) {
                let O = n.normalize(n.perp(n.sub(V.p1, V.p0)));
                E = {
                  point: Z.point,
                  normal: O
                };
              }
            }
            let D = xe.intersectSegmentCircle(S, p.pos, M.aznZwb, M.LnvK);
            if (D && (!E || n.length(n.sub(D.point, p.startPos)) < n.length(n.sub(E.point, p.startPos)))) {
              x.push({
                type: "player",
                player: M,
                point: D.point,
                normal: D.normal,
                layer: M.layer,
                collidable: true
              });
              if (M.EAO("steelskin")) {
                x.push({
                  type: "pan",
                  point: n.add(D.point, n.mul(D.normal, 0.1)),
                  normal: D.normal,
                  layer: M.layer,
                  collidable: false
                });
              }
            } else if (E) {
              x.push({
                type: "pan",
                point: E.point,
                normal: E.normal,
                layer: M.layer,
                collidable: true
              });
            }
            if (D || E) {
              break;
            }
          }
        }
        for (let b = 0; b < x.length; b++) {
          let M = x[b];
          M.dist = n.length(n.sub(M.point, S));
        }
        x.sort((b, M) => b.dist - M.dist);
        let C = false;
        let P = t.getPlayerById(p.playerId);
        if (P && (P.iDmhea.XRQji || P.iDmhea.ZFRZY)) {
          C = true;
        }
        let k = false;
        for (let b = 0; b < x.length; b++) {
          let M = x[b];
          if (M.type == "obstacle") {
            let E = re[M?.obstacleType];
            Ct(E.hitParticle, E.sound.bullet, M.point, M.normal, p.layer, s, m);
            k = M.collidable;
          } else if (M.type == "player") {
            if (!C) {
              let E = M.player;
              if (i.turkeyMode && P?.EAO("turkey_shoot")) {
                let L = n.mul(n.randomUnit(), g.random(3, 6));
                s.addParticle("turkeyFeathersHit", E.layer, E.aznZwb, L);
              }
              let D = n.sub(M.point, E?.aznZwb);
              D.y *= -1;
              if (!window.CrazyGames) {
                s.addParticle("bloodSplat", E.layer, n.mul(D, r.HrSNF), n.create(0, 0), 1, 1, E.container);
              }
              m.playGroup("player_bullet_hit", {
                soundPos: E.aznZwb,
                fallOff: 1,
                layer: E.layer,
                filter: "muffled"
              });
            }
            k = M.collidable;
          } else if (M.type == "pan") {
            Ct("barrelChip", B.pan.sound.bullet, M.point, M.normal, M.layer, s, m);
            k = M.collidable;
          }
          if (k) {
            p.pos = M.point;
            break;
          }
        }
        if (!(p.layer & 2)) {
          let b = i.OYF.idcTHu();
          let M = p.layer;
          for (let E = 0; E < b.length; E++) {
            let D = b[E];
            if (D.active) {
              let L = false;
              let _ = false;
              for (let T = 0; T < D.stairs.length; T++) {
                let V = D.stairs[T];
                if (!V?.lootOnly && X.intersectSegment(V?.collision, p.pos, S)) {
                  L = true;
                  break;
                }
              }
              for (let T = 0; T < D.mask.length; T++) {
                if (X.intersectSegment(D.mask[T], p.pos, S)) {
                  _ = true;
                  break;
                }
              }
              if (L && !_) {
                M |= 2;
              }
            }
          }
          if (M != p.layer) {
            p.layer = M;
            l.addPIXIObj(p.container, p.layer, 20);
          }
        }
        if (k || z.eqAbs(w, f)) {
          p.collided = true;
          p.alive = false;
        }
        p.isNew = false;
      }
    }
  }
  createBulletHit(e, t, i) {
    let r = e.getPlayerById(t);
    if (r) {
      i.playGroup("player_bullet_hit", {
        soundPos: r.aznZwb,
        fallOff: 1,
        layer: r.layer,
        filter: "muffled"
      });
    }
  }
  lXaw(e, t) {
    e.Jjwns(1);
    for (let i = 0; i < this.bullets.length; i++) {
      let r = this.bullets[i];
      if (r.alive || r.collided) {
        let a = n.length(n.sub(r.pos, r.startPos));
        let l = e.JDbtXa(r.pos);
        r.container.position.set(l.x, l.y);
        let s = e.Jjwns(1);
        let m = z.min(r.tracerLength * 15, a / 2);
        r.container.scale.set(s * m * r.scale, s);
      }
    }
  }
}
function ja() {
  let u = {
    fontFamily: "Arial",
    fontWeight: "bold",
    fontSize: v.pixelRatio > 1 ? 30 : 24,
    align: "center",
    fill: 16777215,
    stroke: 0,
    strokeThickness: 0,
    dropShadow: true,
    dropShadowColor: "#000000",
    dropShadowBlur: 1,
    dropShadowAngle: Math.PI / 3,
    dropShadowDistance: 1
  };
  let e = new We("", u);
  e.anchor.set(0.5, 0.5);
  e.scale.set(0.5, 0.5);
  return e;
}
class qa {
  __id;
  __type;
  active = false;
  pos = n.create(0, 0);
  container = new Y();
  sprite = ee.from("skull.img");
  nameText = ja();
  nameTextSet;
  layer;
  playerId;
  letructor() {
    this.container.addChild(this.sprite);
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(0.4, 0.4);
    this.sprite.tint = 5921370;
    this.nameText.anchor.set(0.5, -1);
    this.nameText.tint = g.rgbToInt(g.hsvToRgb(0, 0, 0.5));
    this.container.addChild(this.nameText);
    this.container.visible = this.sprite;
  }
  drlpl() {}
  HJMxT() {
    this.container.visible = false;
  }
  lNjqwJ(e, t, i, r) {
    this.pos = n.copy(e.pos);
    if (t) {
      this.layer = e.layer;
      this.playerId = e.playerId;
    }
    if (i) {
      this.nameTextSet = false;
      this.container.visible = true;
    }
  }
}
class Fa {
  deadBodyPool = new be(qa);
  PEHQLt(e, t, i, r, a, l) {
    let s = this.deadBodyPool.idcTHu();
    for (let m = 0; m < s.length; m++) {
      let d = s[m];
      if (d.active) {
        if (!d.nameTextSet) {
          d.nameText.text = t.getPlayerName(d.playerId, i.__id, false);
          d.nameTextSet = true;
        }
        let h = X.createCircle(d.pos, 1);
        let p = r.insideStructureStairs(h);
        let w = d.layer;
        let f = 12;
        if (d.layer == 0 && i.layer == 0 && p) {
          w |= 2;
          f += 100;
        }
        l.addPIXIObj(d.container, w, f, d.__id);
        let S = a.JDbtXa(d.pos);
        let x = a.Jjwns(1);
        d.container.position.set(S.x, S.y);
        d.container.scale.set(x, x);
      }
    }
  }
  getDeadBodyById(e) {
    let t = this.deadBodyPool.idcTHu();
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r.active && r.playerId == e) {
        return r;
      }
    }
    return null;
  }
}
function wt(u, e, t) {
  if (u == 0) {
    return e;
  } else if (u == 1) {
    return t;
  } else {
    return g.lerpColor(u, e, t);
  }
}
class Va {
  __id;
  __type;
  active;
  decalRender = null;
  isNew;
  goreT;
  hasGore;
  type;
  pos;
  rot;
  scale;
  layer;
  goreKills;
  collider;
  surface;
  drlpl() {
    this.isNew = false;
    this.goreT = 0;
  }
  HJMxT() {
    if (this.decalRender) {
      this.decalRender.free();
      this.decalRender = null;
    }
  }
  lNjqwJ(e, t, i, r) {
    if (t) {
      let a = re[e.type];
      this.type = e.type;
      this.pos = n.copy(e.pos);
      this.rot = z.oriToRad(e.ori);
      this.scale = e.scale;
      this.layer = e.layer;
      this.goreKills = e.goreKills;
      this.collider = X.transform(a.collision, this.pos, this.rot, this.scale);
      this.surface = a.surface ? g.cloneDeep(a.surface) : null;
      this.hasGore = a.gore !== undefined;
      this.isNew = i;
      if (this.isNew) {
        this.decalRender = r.decalBarn.allocDecalRender();
        this.decalRender.init(this, r.map, r.renderer);
      }
    }
  }
  update(e, t) {
    if (this.hasGore) {
      let i = re[this.type];
      let r = z.delerp(this.goreKills, i.gore?.fade.start, i.gore?.fade.end);
      r = Math.pow(r, i.gore?.fade.pow);
      this.goreT = this.isNew ? r : z.lerp(e * i.gore?.fade.speed, this.goreT, r);
      if (i.gore?.tint !== undefined) {
        let a = wt(this.goreT, i.img.tint, i.gore.tint);
        this.decalRender.setTint(a);
      }
      if (i.gore?.alpha !== undefined) {
        this.decalRender.spriteAlpha = z.lerp(this.goreT, i.img.alpha, i.gore.alpha);
      }
      if (i.gore?.waterColor !== undefined && this.surface) {
        this.surface.data.waterColor = wt(this.goreT, i.surface?.data.waterColor, i.gore.waterColor);
      }
      if (i.gore?.rippleColor !== undefined && this.surface) {
        this.surface.data.rippleColor = wt(this.goreT, i.surface?.data.rippleColor, i.gore.rippleColor);
      }
    }
    this.isNew = false;
  }
}
class Za {
  sprite = new ee();
  pos;
  rot;
  scale;
  layer;
  zIdx;
  zOrd;
  imgScale;
  spriteAlpha;
  valueAdjust;
  inWater;
  flicker;
  flickerMin;
  flickerMax;
  flickerTarget;
  flickerRate;
  flickerCooldown;
  active;
  deactivated;
  fadeout;
  fadeAlpha;
  letructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  init(e, t, i) {
    let r = re[e.type];
    this.pos = n.copy(e.pos);
    this.rot = e.rot;
    this.scale = e.scale;
    this.layer = e.layer;
    this.zIdx = r.img.zIdx;
    this.zOrd = e.__id;
    let a = r.img;
    this.sprite.texture = G.from(a.sprite);
    this.sprite.alpha = 1;
    this.sprite.visible = true;
    this.imgScale = r.img.scale;
    this.spriteAlpha = a.alpha;
    this.valueAdjust = a.ignoreAdjust ? 1 : t.getMapDef().biome.valueAdjust;
    this.setTint(a.tint);
    this.inWater = false;
    if (r.height < 0.25) {
      let l = t.getGroundSurface(e.pos, e.layer);
      this.inWater = l.type == "water";
    }
    this.flicker = r.img.flicker;
    if (this.flicker) {
      this.flickerMin = r.img.flickerMin;
      this.flickerMax = r.img.flickerMax;
      this.flickerTarget = this.imgScale;
      this.flickerRate = r.img.flickerRate;
      this.flickerCooldown = 0;
    }
    this.active = true;
    this.deactivated = false;
    this.fadeout = r.lifetime !== undefined;
    this.fadeAlpha = 1;
  }
  free() {
    this.deactivated = true;
  }
  setTint(e) {
    if (this.valueAdjust < 1) {
      e = g.adjustValue(e, this.valueAdjust);
    }
    this.sprite.tint = e;
  }
  update(e, t, i) {
    if (this.deactivated && this.fadeout) {
      this.fadeAlpha = z.lerp(e * 3, this.fadeAlpha, 0);
      if (this.fadeAlpha < 0.01) {
        this.fadeAlpha = 0;
      }
    }
    if (this.deactivated && (!this.fadeout || z.eqAbs(this.fadeAlpha, 0))) {
      this.sprite.visible = false;
      this.active = false;
    }
    if (this.flicker) {
      if (this.flickerCooldown < 0) {
        this.flickerTarget = g.random(this.flickerMin, this.flickerMax);
        this.flickerCooldown = g.random(0.05, this.flickerRate);
      } else {
        this.imgScale = z.lerp(this.flickerRate - this.flickerCooldown, this.imgScale, this.flickerTarget);
        this.flickerCooldown -= e;
      }
    }
    let r = t.JDbtXa(this.pos);
    let a = t.Jjwns(this.scale * this.imgScale);
    this.sprite.position.set(r.x, r.y);
    this.sprite.scale.set(a, a);
    this.sprite.rotation = -this.rot;
    this.sprite.alpha = this.spriteAlpha * (this.inWater ? 0.3 : 1) * this.fadeAlpha;
    i.addPIXIObj(this.sprite, this.layer, this.zIdx, this.zOrd);
  }
}
class Ji {
  decalPool = new be(Va);
  decalRenders = [];
  allocDecalRender() {
    let e = null;
    for (let t = 0; t < this.decalRenders.length; t++) {
      let i = this.decalRenders[t];
      if (!i.active) {
        e = i;
        break;
      }
    }
    if (!e) {
      e = new Za();
      this.decalRenders.push(e);
    }
    return e;
  }
  PEHQLt(e, t, i, r) {
    let a = this.decalPool.idcTHu();
    for (let l = 0; l < a.length; l++) {
      let s = a[l];
      if (s.active) {
        s.update(e);
      }
    }
    for (let l = 0; l < this.decalRenders.length; l++) {
      let s = this.decalRenders[l];
      if (s.active) {
        s.update(e, t, i);
      }
    }
  }
  lXaw(e, t, i) {}
}
class Xa {
  active;
  pos;
  vel;
  layer;
  particle;
  ticker;
  colCount;
  letructor() {
    this.active = false;
  }
  init(e, t, i, r) {
    this.pos = n.copy(e);
    this.vel = n.copy(t);
    this.layer = i;
    this.particle = r;
    this.ticker = 0;
    this.colCount = 0;
    this.active = true;
  }
  update(e, t, i) {
    let r = n.copy(this.pos);
    this.pos = n.add(this.pos, n.mul(this.vel, e));
    this.vel = n.mul(this.vel, 1 / (1 + e * 5));
    let a = [];
    let l = t.fBXVaI.idcTHu();
    for (let d = 0; d < l.length; d++) {
      let h = l[d];
      if (h.active && !h.dead && g.sameLayer(this.layer, h.layer)) {
        a.push(h.collider);
      }
    }
    let s = i.playerPool.idcTHu();
    for (let d = 0; d < s.length; d++) {
      let h = s[d];
      if (h.active && !h.dead && g.sameLayer(this.layer, h.layer)) {
        a.push(X.createCircle(h.aznZwb, h.LnvK, 0));
      }
    }
    let m = [];
    for (let d = 0; d < a.length; d++) {
      let h = X.intersectSegment(a[d], r, this.pos);
      if (h) {
        let p = n.length(n.sub(h.point, r));
        m.push({
          point: h.point,
          normal: h.normal,
          dist: p
        });
      }
    }
    m.sort((d, h) => d.dist - h.dist);
    if (m.length > 0) {
      let d = m[0];
      let h = n.normalizeSafe(this.vel, n.create(1, 0));
      let p = n.length(this.vel);
      let w = n.sub(h, n.mul(d.normal, n.dot(d.normal, h) * 2));
      let f = this.colCount++ > 0 ? 0.35 : 1;
      this.pos = n.add(d.point, n.mul(d.normal, 0.01));
      this.vel = n.mul(w, p * f);
    }
    this.particle.pos = n.copy(this.pos);
    this.ticker += e;
    if (this.ticker >= this.particle.life) {
      this.particle.free();
      this.active = false;
    }
  }
}
class Wa {
  active;
  type;
  done;
  pos;
  layer;
  ticker;
  lifetime;
  soundInstance;
  soundUpdateThrottle;
  letructor(e) {
    this.active = false;
  }
  init(e, t, i) {
    let r = Wt[e].explosionEffectType;
    let a = hi[r];
    this.active = true;
    this.done = false;
    this.type = e;
    this.pos = n.copy(t);
    this.layer = i;
    this.ticker = 0;
    this.lifetime = a.lifetime;
    this.soundInstance = null;
    this.soundUpdateThrottle = 0;
  }
  free() {
    this.active = false;
  }
  update(e, t, i, r, a, l) {
    let s = Wt[this.type].explosionEffectType;
    let m = hi[s];
    if (this.ticker == 0) {
      let p = true;
      if (this.type == "explosion_bomb_iron") {
        let y = X.createCircle(this.pos, 0.5);
        if (a.insideBuildingCeiling(y, true)) {
          p = false;
        }
      }
      if (p && (m.burst.particle && i.addParticle(m.burst.particle, this.layer, this.pos, n.create(0, 0), m.burst.scale, 0, null), m.scatter)) {
        for (let y = 0; y < m.scatter.count; y++) {
          let C = i.addParticle(m.scatter.particle, this.layer, this.pos, n.create(0, 0), 1, 0, null);
          let P = t.addPhysicsParticle();
          let k = n.mul(n.randomUnit(), g.random(m.scatter.speed.min, m.scatter.speed.max));
          P.init(this.pos, k, this.layer, C);
        }
      }
      let w = a.getGroundSurface(this.pos, this.layer);
      let f = w.type == "water" ? m.burst.sound.water : m.burst.sound.grass;
      let S = 0;
      if (m.burst.sound.detune != null) {
        S = m.burst.sound.detune;
      }
      let x = 1;
      if (m.burst.sound.volume != null) {
        x = m.burst.sound.volume;
      }
      this.soundInstance = r.playSound(f, {
        channel: "sfx",
        soundPos: this.pos,
        layer: this.layer,
        filter: "muffled",
        rangeMult: 2,
        ignoreMinAllowable: true,
        detune: S,
        volumeScale: x
      });
      if (w.type == "water") {
        for (let y = 0; y < m.rippleCount; y++) {
          let C = m.rippleCount * 0.5;
          let P = n.add(this.pos, n.mul(n.randomUnit(), g.random(0, C)));
          i.addRippleParticle(P, this.layer, w.data.rippleColor).setDelay(y * 0.06);
        }
      }
    }
    if (this.soundInstance && this.soundUpdateThrottle < 0) {
      this.soundUpdateThrottle = 0.1;
      let p = 1;
      if (m.burst.sound.volume != null) {
        p = m.burst.sound.volume;
      }
      r.updateSound(this.soundInstance, "sfx", this.pos, {
        layer: this.layer,
        filter: "muffled",
        volumeScale: p
      });
    } else {
      this.soundUpdateThrottle -= e;
    }
    this.ticker += e;
    let d = z.min(this.ticker / m.shakeDur, 1);
    let h = z.lerp(d, m.shakeStr, 0);
    l.NTm(this.pos, h);
    if (this.ticker >= this.lifetime) {
      this.active = false;
    }
  }
}
class Ha {
  explosions;
  physicsParticles;
  letructor() {
    this.explosions = [];
    this.physicsParticles = [];
  }
  addExplosion(e, t, i) {
    let r = null;
    for (let a = 0; a < this.explosions.length; a++) {
      if (!this.explosions[a].active) {
        r = this.explosions[a];
        break;
      }
    }
    if (!r) {
      r = new Wa(this);
      this.explosions.push(r);
    }
    r.init(e, t, i);
  }
  addPhysicsParticle() {
    let e = null;
    for (let t = 0; t < this.physicsParticles.length; t++) {
      let i = this.physicsParticles[t];
      if (!i.active) {
        e = i;
        break;
      }
    }
    if (!e) {
      e = new Xa();
      this.physicsParticles.push(e);
    }
    return e;
  }
  PEHQLt(e, t, i, r, a, l, s) {
    for (let m = 0; m < this.explosions.length; m++) {
      let d = this.explosions[m];
      if (d.active) {
        d.update(e, this, a, l, t, r);
        if (!d.active) {
          d.free();
        }
      }
    }
    for (let m = 0; m < this.physicsParticles.length; m++) {
      let d = this.physicsParticles[m];
      if (d.active) {
        d.update(e, t, i);
      }
    }
  }
}
let hi = {
  frag: {
    burst: {
      particle: "explosionBurst",
      scale: 1,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.2,
    shakeDur: 0.35,
    lifetime: 2
  },
  smoke: {
    burst: {
      particle: "explosionBurst",
      scale: 0,
      sound: {
        grass: "explosion_smoke_01",
        water: "explosion_smoke_01"
      }
    },
    rippleCount: 10,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 6
  },
  strobe: {
    burst: {
      particle: "explosionBurst",
      scale: 0.25,
      sound: {
        grass: "explosion_04",
        water: "explosion_02"
      }
    },
    rippleCount: 3,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 2
  },
  barrel: {
    burst: {
      particle: "explosionBurst",
      scale: 1,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.2,
    shakeDur: 0.35,
    lifetime: 2
  },
  usas: {
    burst: {
      particle: "explosionUSAS",
      scale: 0.75,
      sound: {
        grass: "explosion_03",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.12,
    shakeDur: 0.25,
    lifetime: 1.25
  },
  rounds: {
    burst: {
      particle: "explosionRounds",
      scale: 0.32,
      sound: {
        grass: "explosion_04",
        water: "explosion_04",
        detune: 500,
        volume: 0.5
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  rounds_sg: {
    burst: {
      particle: "explosionRounds",
      scale: 0.32,
      sound: {
        grass: "explosion_04",
        water: "explosion_04",
        detune: 500,
        volume: 0.2
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  mirv: {
    burst: {
      particle: "explosionMIRV",
      scale: 1,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.2,
    shakeDur: 0.35,
    lifetime: 2
  },
  mirv_mini: {
    burst: {
      particle: "explosionMIRV",
      scale: 0.75,
      sound: {
        grass: "explosion_03",
        water: "explosion_02"
      }
    },
    rippleCount: 3,
    shakeStr: 0.1,
    shakeDur: 0.2,
    lifetime: 1.25
  },
  martyr_nade: {
    burst: {
      particle: "explosionBurst",
      scale: 0.75,
      sound: {
        grass: "explosion_03",
        water: "explosion_02"
      }
    },
    rippleCount: 3,
    shakeStr: 0.1,
    shakeDur: 0.2,
    lifetime: 1.25
  },
  snowball: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "snowball_01",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "snowball_impact",
      count: 5,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  snowball_heavy: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "snowball_02",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "snowball_impact",
      count: 8,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  potato: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "potato_01",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "potato_impact",
      count: 5,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  potato_heavy: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "potato_02",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "potato_impact",
      count: 8,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  potato_cannonball: {
    burst: {
      particle: "explosionPotato",
      scale: 0.75,
      sound: {
        grass: "explosion_05",
        water: "explosion_02"
      }
    },
    scatter: {
      particle: "potato_impact",
      count: 8,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 10,
    shakeStr: 0.12,
    shakeDur: 0.25,
    lifetime: 1.25
  },
  potato_smgshot: {
    burst: {
      particle: "",
      scale: 0.2,
      sound: {
        grass: "potato_01",
        water: "potato_02",
        detune: 250,
        volume: 0.5
      }
    },
    scatter: {
      particle: "potato_smg_impact",
      count: 2,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 0.5
  },
  bomb_iron: {
    burst: {
      particle: "explosionBomb",
      scale: 2,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 12,
    shakeStr: 0.25,
    shakeDur: 0.4,
    lifetime: 2
  }
};
class Ga {
  bullets = [];
  addFlare(e, t, i) {
    let r = null;
    for (let f = 0; f < this.bullets.length; f++) {
      if (!this.bullets[f].alive && !this.bullets[f].collided) {
        r = this.bullets[f];
        break;
      }
    }
    if (!r) {
      r = {};
      r.alive = false;
      r.flareContainer = new Y();
      r.flareContainer.visible = false;
      r.flare = ee.from("part-flare-01.img");
      r.flare.anchor.set(0.5, 0.5);
      r.flareContainer.addChild(r.flare);
      r.trailContainer = new Y();
      r.trailContainer.visible = false;
      r.trailContainer.pivot.set(14.5, 0);
      r.bulletTrail = ee.from("player-bullet-trail-02.img");
      r.bulletTrail.anchor.set(0.5, 0.5);
      r.trailContainer.addChild(r.bulletTrail);
      this.bullets.push(r);
    }
    let a = nt[e.bulletType];
    let l = 1 + e.varianceT * a.variance;
    let s = z.remap(e.distAdjIdx, 0, 32, -1, 1);
    let m = a.distance / Math.pow(R.bullet.reflectDistDecay, e.reflectCount);
    r.alive = true;
    r.isNew = true;
    r.collided = false;
    r.flareScale = 0.01;
    r.trailScale = 1;
    r.timeAlive = 0;
    r.maxTimeAlive = 2.5;
    r.startPos = n.copy(e.pos);
    r.pos = n.copy(e.pos);
    r.dir = n.copy(e.dir);
    r.layer = e.layer;
    r.speed = a.speed * l;
    r.distance = m * l + s;
    let d = Math.atan2(r.dir.x, r.dir.y);
    r.flareContainer.rotation = d - Math.PI / 2;
    r.trailContainer.rotation = d - Math.PI / 2;
    r.layer = e.layer;
    let h = t.getPlayerById(r.playerId);
    if (h && h.layer & 2) {
      r.layer |= 2;
    }
    let p = R.tracerColors[a.tracerColor];
    let w = p.regular;
    if (h?.isOnBrightSurface) {
      w = p.saturated;
    }
    r.bulletTrail.scale.set(0.8, a.tracerWidth);
    r.tracerLength = a.tracerLength;
    r.bulletTrail.tint = w;
    r.tracerAlphaRate = p.alphaRate;
    r.tracerAlphaMin = p.alphaMin;
    r.bulletTrail.alpha = 1;
    r.flare.scale.set(1, 1);
    r.flare.tint = a.flareColor;
    r.flare.alpha = 0.8;
    r.maxFlareScale = a.maxFlareScale;
    r.smokeThrottle = 0;
    r.flareContainer.visible = true;
    r.trailContainer.visible = true;
  }
  PEHQLt(e, t, i, r, a, l, s, m) {
    for (let d = 0; d < this.bullets.length; d++) {
      let h = this.bullets[d];
      if (h.collided) {
        h.flareScale = z.max(h.flareScale - e * 0.5, 0);
        h.flare.alpha = z.max(h.flare.alpha - e, 0);
        h.trailScale = z.max(h.trailScale - e * 6, 0);
        h.bulletTrail.alpha = z.max(h.bulletTrail.alpha - e, 0);
        h.pos = n.add(h.pos, n.mul(h.dir, e * h.speed));
        if (h.flare.alpha <= 0) {
          h.collided = false;
          h.flareContainer.visible = false;
          h.trailContainer.visible = false;
        }
      }
      if (h.alive) {
        if (h.tracerAlphaRate) {
          let S = a.__id == h.playerId ? h.tracerAlphaRate : h.tracerAlphaRate * 0.9;
          h.bulletTrail.alpha = z.max(h.tracerAlphaMin, h.bulletTrail.alpha * S);
        }
        h.timeAlive += e;
        h.flareScale = z.easeOutExpo(h.timeAlive / h.maxTimeAlive) * h?.maxFlareScale;
        if (h.smokeThrottle <= 0) {
          h.smokeThrottle = 0.05;
        } else {
          h.smokeThrottle -= e;
        }
        let p = h.distance - n.length(n.sub(h.startPos, h.pos));
        let w = z.min(p, e * h.speed);
        h.pos = n.add(h.pos, n.mul(h.dir, w));
        if (z.eqAbs(p, w)) {
          h.collided = true;
          h.alive = false;
        }
        let f = 0;
        if ((g.sameLayer(f, a.layer) || a.layer & 2) && (!(a.layer & 2) || !i.insideStructureMask(X.createCircle(h.pos, 1)))) {
          f |= 2;
        }
        l.addPIXIObj(h.trailContainer, f, 1000, 0);
        l.addPIXIObj(h.flareContainer, f, 1000, 1);
        h.isNew = false;
      }
    }
  }
  lXaw(e) {
    for (let t = 0; t < this.bullets.length; t++) {
      let i = this.bullets[t];
      if (i.alive || i.collided) {
        let r = e.JDbtXa(i.pos);
        i.flareContainer.position.set(r.x, r.y);
        let a = e.Jjwns(1);
        i.flareContainer.scale.set(a * i.flareScale, a * i.flareScale);
        let l = n.length(n.sub(i.pos, i.startPos));
        i.trailContainer.position.set(r.x, r.y);
        let s = z.min(i.tracerLength * 15, l / 2);
        i.trailContainer.scale.set(a * s * i.trailScale, a);
      }
    }
  }
}
class Ua {
  __id;
  __type;
  active;
  ticker = 0;
  playDropSfx = false;
  container = new ee();
  sprite = new ee();
  emitter = null;
  updatedData;
  pos;
  visualPosOld;
  posInterpTicker;
  isOld;
  layer;
  type;
  count;
  isPreloadedGun;
  ownerId;
  rad;
  imgScale;
  letructor() {
    this.container.anchor.set(0.5, 0.5);
    this.container.scale.set(1, 1);
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(0.8, 0.8);
    this.container.addChild(this.sprite);
  }
  drlpl() {
    this.updatedData = false;
    this.visualPosOld = n.create(0, 0);
  }
  HJMxT() {
    this.container.visible = false;
    if (this.emitter) {
      this.emitter.stop();
      this.emitter = null;
    }
  }
  lNjqwJ(e, t, i, r) {
    this.updatedData = true;
    if (!n.eq(e.pos, this.visualPosOld)) {
      this.visualPosOld = n.copy(i ? e.pos : this.pos);
      this.posInterpTicker = 0;
    }
    this.pos = n.copy(e.pos);
    if (t) {
      this.layer = e.layer;
      this.type = e.type;
      this.count = e.count;
      this.isOld = e.isOld;
      this.isPreloadedGun = e.isPreloadedGun;
      this.ownerId = e.hasOwner ? e.ownerId : 0;
    }
    if (i) {
      let a = B[this.type];
      this.ticker = 0;
      if (this.isOld) {
        this.ticker = 10;
      }
      if (!this.isOld && a.sound.drop && !r.map.lootDropSfxIds.includes(this.__id)) {
        this.playDropSfx = true;
      }
      this.rad = R.lootRadius[a.type];
      this.imgScale = a.lootImg?.scale * 1.25;
      let l = a.lootImg.innerScale || 0.8;
      this.sprite.scale.set(l, l);
      this.sprite.texture = G.from(a.lootImg?.sprite);
      this.sprite.tint = a.lootImg?.tint;
      this.container.texture = a.lootImg.border ? G.from(a.lootImg.border) : G.EMPTY;
      if (this.isPreloadedGun) {
        this.container.texture = G.from("loot-circle-outer-06.img");
      }
      let s = B[a.ammo];
      if (s) {
        this.container.tint = s.lootImg.tintDark;
      } else if (a.lootImg.borderTint) {
        this.container.tint = a.lootImg.borderTint;
      } else {
        this.container.tint = 0;
      }
      if (a.type == "xp" && a.emitter) {
        this.emitter = r.particleBarn.addEmitter(a.emitter, {
          pos: this.pos,
          layer: this.layer
        });
      }
      this.sprite.rotation = a?.lootImg?.rot ? a.lootImg.rot : 0;
      this.sprite.scale.x = a.lootImg.mirror ? -l : l;
      this.container.visible = true;
    }
    if (i || t) {
      r.renderer.addPIXIObj(this.container, this.layer, 13, this.__id);
    }
  }
}
class $a {
  lootPool = new be(Ua);
  closestLoot = null;
  PEHQLt(e, t, i, r, a, l) {
    this.closestLoot = null;
    let s = Number.MAX_VALUE;
    let m = this.lootPool.idcTHu();
    for (let d = 0; d < m.length; d++) {
      let h = m[d];
      if (h.active) {
        if (g.sameLayer(h.layer, t.layer) && !t.iDmhea.XRQji && (h.ownerId == 0 || h.ownerId == t.__id)) {
          let y = h.pos;
          let C = v.touch ? t.LnvK + h.rad * R.player.touchLootRadMult : h.rad;
          let P = n.sub(t.aznZwb, y);
          let k = n.lengthSqr(P);
          if (k < C * C && k < s) {
            s = k;
            this.closestLoot = h;
          }
        }
        h.ticker += e;
        if (h.playDropSfx) {
          i.lootDropSfxIds.push(h.__id);
          h.playDropSfx = false;
          let y = B[h.type];
          r.playSound(y.sound?.drop, {
            channel: "sfx",
            soundPos: h.pos,
            layer: h.layer,
            filter: "muffled"
          });
        }
        if (h.emitter) {
          h.emitter.pos = n.add(h.pos, n.create(0, 0.1));
          h.emitter.layer = h.layer;
        }
        let p = z.delerp(h.ticker, 0, 1);
        let w = z.easeOutElastic(p, 0.75);
        let f = h.pos;
        if (a.rTq) {
          h.posInterpTicker += e;
          let y = z.clamp(h.posInterpTicker / a.UUHe, 0, 1);
          f = n.lerp(y, h.visualPosOld, h.pos);
        }
        let S = a.JDbtXa(f);
        let x = a.Jjwns(h.imgScale * w);
        if (v.debug && l.loot && t.layer === h.layer) {
          me.addCircle(h.pos, h.rad, 16711680, 0);
        }
        h.container.position.set(S.x, S.y);
        h.container.scale.set(x, x);
      }
    }
  }
  getClosestLoot() {
    return this.closestLoot;
  }
}
class o {
  letructor(e, t) {
    this.min = e;
    this.max = t;
  }
  getRandom() {
    return g.random(this.min, this.max);
  }
}
function we(u) {
  if (u instanceof o) {
    return u.getRandom();
  } else {
    return u;
  }
}
function Ja(u) {
  if (u instanceof Function) {
    return u();
  } else {
    return u;
  }
}
class ci {
  active = false;
  ticker = 0;
  def = {};
  sprite = new ee();
  hasParent = false;
  pos;
  vel;
  rot;
  delay;
  life;
  drag;
  rotVel;
  rotDrag;
  scaleUseExp;
  scale;
  scaleEnd;
  scaleExp;
  alphaUseExp;
  alpha;
  alphaEnd;
  alphaExp;
  alphaIn;
  alphaInStart;
  alphaInEnd;
  emitterIdx;
  valueAdjust;
  letructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(1, 1);
    this.sprite.visible = false;
  }
  init(e, t, i, r, a, l, s, m, d, h) {
    let p = Ot[t];
    this.active = true;
    this.ticker = 0;
    if (m) {
      this.hasParent = true;
      m.addChild(this.sprite);
    } else {
      this.hasParent = false;
      e.addPIXIObj(this.sprite, i, d);
    }
    this.pos = n.copy(r);
    this.vel = n.copy(a);
    this.rot = s;
    this.def = p;
    this.delay = 0;
    this.life = we(p.life);
    this.drag = we(p.drag);
    this.rotVel = we(p.rotVel) * (Math.random() < 0.5 ? -1 : 1);
    this.rotDrag = we(p.drag) / 2;
    this.scaleUseExp = p.scale.exp !== undefined;
    this.scale = we(p.scale.start) * l;
    this.scaleEnd = this.scaleUseExp ? 0 : we(p.scale?.end) * l;
    this.scaleExp = this.scaleUseExp ? p.scale.exp : 0;
    this.alphaUseExp = p.alpha.exp !== undefined;
    this.alpha = we(p.alpha.start);
    this.alphaEnd = this.alphaUseExp ? 0 : we(p.alpha?.end);
    this.alphaExp = this.alphaUseExp ? p.alpha.exp : 0;
    this.alphaIn = p.alphaIn !== undefined;
    this.alphaInStart = this.alphaIn ? we(p.alphaIn?.start) : 0;
    this.alphaInEnd = this.alphaIn ? we(p.alphaIn?.end) : 0;
    this.emitterIdx = -1;
    let w = Array.isArray(p.image) ? p.image[Math.floor(Math.random() * p.image.length)] : p.image;
    this.sprite.texture = G.from(w);
    this.sprite.visible = false;
    this.valueAdjust = p.ignoreValueAdjust ? 1 : h;
    this.setColor(Ja(p.color));
  }
  free() {
    this.active = false;
    this.sprite.visible = false;
  }
  setDelay(e) {
    this.delay = e;
  }
  setColor(e) {
    if (this.valueAdjust < 1) {
      e = g.adjustValue(e, this.valueAdjust);
    }
    this.sprite.tint = e;
  }
}
class Ka {
  active = false;
  enabled;
  type;
  pos;
  dir;
  scale;
  layer;
  duration;
  radius;
  ticker;
  nextSpawn;
  spawnCount;
  parent;
  alpha;
  rateMult;
  zOrd;
  init(e, t = {}) {
    let i = Qi[e];
    this.active = true;
    this.enabled = true;
    this.type = e;
    this.pos = t.pos ? n.copy(t.pos) : n.create(0, 0);
    this.dir = t.dir ? n.copy(t.dir) : n.create(0, 1);
    this.scale = t.scale !== undefined ? t.scale : 1;
    this.layer = t.layer || 0;
    this.duration = t.duration !== undefined ? t.duration : Number.MAX_VALUE;
    this.radius = t.radius !== undefined ? t.radius : i.radius;
    this.ticker = 0;
    this.nextSpawn = 0;
    this.spawnCount = 0;
    this.parent = t.parent || null;
    this.alpha = 1;
    this.rateMult = t.rateMult !== undefined ? t.rateMult : 1;
    let r = Ot[i.particle];
    this.zOrd = i.zOrd !== undefined ? i.zOrd : r.zOrd !== undefined ? r.zOrd : 20;
  }
  free() {
    this.active = false;
  }
  stop() {
    this.duration = this.ticker;
  }
}
class Ki {
  letructor(e) {
    this.renderer = e;
    for (let t = 0; t < 256; t++) {
      this.particles[t] = new ci();
    }
  }
  particles = [];
  emitters = [];
  valueAdjust = 1;
  onMapLoad(e) {
    this.valueAdjust = e.getMapDef().biome.valueAdjust;
  }
  HJMxT() {
    for (let e = 0; e < this.particles.length; e++) {
      let t = this.particles[e].sprite;
      t.parent?.removeChild(t);
      t.destroy({
        children: true
      });
    }
  }
  addParticle(e, t, i, r, a, l, s, m) {
    let d = null;
    for (let h = 0; h < this.particles.length; h++) {
      if (!this.particles[h].active) {
        d = this.particles[h];
        break;
      }
    }
    if (!d) {
      d = new ci();
      this.particles.push(d);
    }
    a = a !== undefined ? a : 1;
    l = l !== undefined ? l : Math.random() * Math.PI * 2;
    m = m !== undefined ? m : Ot[e].zOrd || 20;
    d.init(this.renderer, e, t, i, r, a, l, s, m, this.valueAdjust);
    return d;
  }
  addRippleParticle(e, t, i) {
    let r = this.addParticle("waterRipple", t, e, n.create(0, 0), 1, 0, null);
    r.setColor(i);
    return r;
  }
  addEmitter(e, t = {}) {
    let i = null;
    for (let r = 0; r < this.emitters.length; r++) {
      if (!this.emitters[r].active) {
        i = this.emitters[r];
        break;
      }
    }
    if (!i) {
      i = new Ka();
      this.emitters.push(i);
    }
    i.init(e, t);
    return i;
  }
  PEHQLt(e, t, i) {
    for (let r = 0; r < this.emitters.length; r++) {
      let a = this.emitters[r];
      if (a.active && a.enabled) {
        a.ticker += e;
        a.nextSpawn -= e;
        let l = Qi[a.type];
        while (a.nextSpawn <= 0 && a.spawnCount < l.maxCount) {
          let s = a.scale * a.radius;
          let m = n.add(a.pos, g.randomPointInCircle(s));
          let d = n.rotate(a.dir, (Math.random() - 0.5) * l.angle);
          let h = n.mul(d, we(l.speed));
          let p = we(l.rot);
          let w = this.addParticle(l.particle, a.layer, m, h, a.scale, p, a.parent, a.zOrd);
          w.emitterIdx = r;
          let f = we(l.rate);
          if (l.maxRate) {
            let S = z.easeInExpo(z.min(1, a.ticker / l.maxElapsed));
            let x = we(l.maxRate);
            f = z.lerp(S, f, x);
          }
          a.nextSpawn += f * a.rateMult;
          a.spawnCount++;
        }
        if (a.ticker >= a.duration) {
          a.free();
        }
      }
    }
    for (let r = 0; r < this.particles.length; r++) {
      let a = this.particles[r];
      if (a.active && (a.ticker += e, a.ticker >= a.delay)) {
        let l = z.min((a.ticker - a.delay) / a.life, 1);
        a.vel = n.mul(a.vel, 1 / (1 + e * a.drag));
        a.pos = n.add(a.pos, n.mul(a.vel, e));
        a.rotVel *= 1 / (1 + e * a.rotDrag);
        a.rot += a.rotVel * e;
        if (a.scaleUseExp) {
          a.scale += e * a.scaleExp;
        }
        if (a.alphaUseExp) {
          a.alpha = z.max(a.alpha + e * a.alphaExp, 0);
        }
        let s = a.hasParent ? a.pos : t.JDbtXa(a.pos);
        let m = a.scaleUseExp ? a.scale : z.remap(l, a.def.scale.lerp?.min, a.def.scale.lerp?.max, a.scale, a.scaleEnd);
        let d = a.alphaUseExp ? a.alpha : z.remap(l, a.def.alpha.lerp?.min, a.def.alpha.lerp?.max, a.alpha, a.alphaEnd);
        if (a.alphaIn && l < a.def.alphaIn?.lerp?.max) {
          d = z.remap(l, a.def.alphaIn?.lerp?.min, a.def.alphaIn?.lerp?.max, a.alphaInStart, a.alphaInEnd);
        }
        if (a.emitterIdx >= 0) {
          d *= this.emitters[a.emitterIdx].alpha;
        }
        if (!a.hasParent) {
          m = t.Jjwns(m);
        }
        a.sprite.position.set(s.x, s.y);
        a.sprite.scale.set(m, m);
        a.sprite.rotation = a.rot;
        a.sprite.alpha = d;
        a.sprite.visible = true;
        if (l >= 1) {
          a.free();
        }
      }
    }
  }
}
let Ot = {
  archwayBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.2, 0.35),
      end: new o(0.08, 0.12),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.06, 0.84, g.random(0.46, 0.48)));
    }
  },
  bloodSplat: {
    image: ["part-splat-01.img", "part-splat-02.img", "part-splat-03.img"],
    life: 0.5,
    drag: 1,
    rotVel: 0,
    scale: {
      start: 0.04,
      end: new o(0.15, 0.2),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(16711680, 1, g.random(0.45, 0.8)));
    }
  },
  barrelPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(3, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.08, 0.18),
      end: new o(0.07, 0.17),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.09, 0.8, g.random(0.66, 0.68)));
    }
  },
  barrelChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.01, 0.02, g.random(0.38, 0.41)));
    }
  },
  barrelBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.01, 0.02, g.random(0.38, 0.41)));
    }
  },
  blackChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0.08, g.random(0.16, 0.18)));
    }
  },
  blueChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.64, 1, g.random(0.83, 0.85)));
    }
  },
  book: {
    image: ["part-book-01.img"],
    life: new o(1, 1.5),
    drag: new o(3, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.09, 0.19),
      end: new o(0.07, 0.17),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.08, 0.42, g.random(0.72, 0.74)));
    }
  },
  bottleBrownChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.02, 0.04),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 7878664
  },
  bottleBrownBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 7878664
  },
  bottleBlueChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.02, 0.04),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 19544
  },
  bottleWhiteBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.75,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 16777215
  },
  bottleWhiteChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.02, 0.04),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.75,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 16777215
  },
  bottleBlueBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 19544
  },
  brickChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0.71, g.random(0.32, 0.34)));
    }
  },
  clothBreak: {
    image: ["part-cloth-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.95, 1)));
    }
  },
  clothHit: {
    image: ["part-cloth-01.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.95, 1)));
    }
  },
  depositBoxGreyBreak: {
    image: ["part-plate-01.img"],
    life: new o(0.5, 1),
    drag: new o(7, 8),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.15, 0.25),
      end: new o(0.12, 0.2),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.36, 0.38)));
    }
  },
  depositBoxGoldBreak: {
    image: ["part-plate-01.img"],
    life: new o(0.5, 1),
    drag: new o(6, 8),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.2, 0.35),
      end: new o(0.18, 0.25),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.11, 0.84, g.random(0.64, 0.66)));
    }
  },
  glassChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 8444415
  },
  glassPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 8444415
  },
  goldChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.11, 0.84, g.random(0.88, 0.9)));
    }
  },
  greenChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.4, 0.18, g.random(0.5, 0.62)));
    }
  },
  greenPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.08, 0.16),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 3884335
  },
  greenhouseBreak: {
    image: ["part-spark-02.img", "part-plate-01.img", "part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 8444415
  },
  hutBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.1, 0.81, g.random(0.78, 0.82)));
    }
  },
  leaf: {
    image: ["part-leaf-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.5, 0.75)));
    }
  },
  leafPrickly: {
    image: ["part-leaf-01sv.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.8, 0.85)));
    }
  },
  leafRiver: {
    image: ["part-leaf-02.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.5, 0.75)));
    }
  },
  lockerBreak: {
    image: ["part-plate-01.img"],
    life: new o(0.5, 1),
    drag: new o(7, 8),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.15, 0.2),
      end: new o(0.12, 0.15),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.1, 0.23, g.random(0.51, 0.53)));
    }
  },
  ltgreenChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.2, 0.42, g.random(0.38, 0.42)));
    }
  },
  outhouseChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.08, 0.57, g.random(0.4, 0.46)));
    }
  },
  outhouseBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.08, 0.79, g.random(0.52, 0.54)));
    }
  },
  outhousePlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.08, 0.57, g.random(0.4, 0.46)));
    }
  },
  potChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.06, 0.84, g.random(0.73, 0.77)));
    }
  },
  potBreak: {
    image: ["part-pot-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.06, 0.84, g.random(0.73, 0.77)));
    }
  },
  potatoChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.075, 0.43, g.random(0.48, 0.5)));
    }
  },
  potatoBreak: {
    image: ["part-pumpkin-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.075, 0.43, g.random(0.48, 0.5)));
    }
  },
  pumpkinChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.07, 1, g.random(0.98, 1)));
    }
  },
  pumpkinBreak: {
    image: ["part-pumpkin-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.08, 1, g.random(0.95, 0.97)));
    }
  },
  squashChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.31, 0.86, g.random(0.35, 0.36)));
    }
  },
  squashBreak: {
    image: ["part-pumpkin-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.31, 0.86, g.random(0.35, 0.36)));
    }
  },
  redChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.98, 1, g.random(0.52, 0.54)));
    }
  },
  redBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.98, 1, g.random(0.52, 0.54)));
    }
  },
  redPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.02, 1, g.random(0.26, 0.28)));
    }
  },
  rockChip: {
    image: ["map-stone-01.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.5, 0.75)));
    }
  },
  rockBreak: {
    image: ["map-stone-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.5, 0.75)));
    }
  },
  rockEyeChip: {
    image: ["map-stone-01.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 2696225
  },
  rockEyeBreak: {
    image: ["map-stone-01.img"],
    life: new o(0.8, 1),
    drag: new o(4, 12),
    rotVel: 0,
    scale: {
      start: new o(0.05, 0.1),
      end: new o(0.03, 0.06),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 2696225
  },
  shackBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.1, 0.24, g.random(0.38, 0.41)));
    }
  },
  shackGreenBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 5730406
  },
  tanChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.1, 0.35, g.random(0.48, 0.52)));
    }
  },
  teahouseBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.6, 0.31, g.random(0.42, 0.45)));
    }
  },
  teapavilionBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0.8, g.random(0.6, 0.62)));
    }
  },
  toiletBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.97, 0, g.random(0.95, 0.97)));
    }
  },
  toiletMetalBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(4, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.01, 0.02, g.random(0.38, 0.41)));
    }
  },
  turkeyFeathersHit: {
    image: ["part-feather-01.img", "part-feather-02.img"],
    life: new o(1, 1.5),
    drag: new o(1, 10),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.12),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return 16777215;
    }
  },
  turkeyFeathersDeath: {
    image: ["part-feather-01.img", "part-feather-02.img"],
    life: new o(1, 1.5),
    drag: new o(1, 10),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.15, 0.25),
      end: new o(0.12, 0.2),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return 16777215;
    }
  },
  whiteChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.97, 0, g.random(0.95, 0.97)));
    }
  },
  whitePlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.97, 0, g.random(0.95, 0.97)));
    }
  },
  windowBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 8444415
  },
  woodChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.05, 1, g.random(0.35, 0.45)));
    }
  },
  woodLog: {
    image: ["part-log-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.05, 1, g.random(0.35, 0.45)));
    }
  },
  woodPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.05, 1, g.random(0.25, 0.35)));
    }
  },
  woodShard: {
    image: ["part-spark-02.img"],
    life: new o(1, 1.5),
    drag: new o(3, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.06, 0.15),
      end: new o(0.02, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.05, 1, g.random(0.25, 0.35)));
    }
  },
  "9mm": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  "9mm_cursed": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  "762mm": {
    image: ["part-shell-02.img"],
    life: new o(0.75, 1),
    drag: new o(1.5, 2.5),
    rotVel: new o(Math.PI * 2.5, Math.PI * 2.5),
    scale: {
      start: 0.075,
      end: 0.045,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.925, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  "556mm": {
    image: ["part-shell-04.img"],
    life: new o(0.75, 1),
    drag: new o(1.5, 2.5),
    rotVel: new o(Math.PI * 2.5, Math.PI * 2.5),
    scale: {
      start: 0.075,
      end: 0.045,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.925, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  "12gauge": {
    image: ["part-shell-03.img"],
    life: new o(0.5, 0.75),
    drag: new o(1, 2),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.1,
      end: 0.05,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  "50AE": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  "308sub": {
    image: ["part-shell-05.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  flare: {
    image: ["part-shell-03.img"],
    life: new o(0.5, 0.75),
    drag: new o(1, 2),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.1,
      end: 0.05,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  "45acp": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.07,
      end: 0.04,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  potato_ammo: {
    image: ["part-wedge-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.07,
      end: 0.04,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 16777215
  },
  bugle_ammo: {
    image: ["part-note-02.img"],
    life: new o(1.25, 1.3),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 1),
    scale: {
      start: 0.1,
      end: 0.14,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.5, 1)
    },
    color: 16767488
  },
  fragPin: {
    image: ["part-frag-pin-01.img"],
    life: new o(0.5, 0.5),
    drag: new o(0.9, 1),
    rotVel: 0,
    scale: {
      start: 0.18,
      end: 0.14,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.5, 1)
    },
    color: 16777215
  },
  fragLever: {
    image: ["part-frag-lever-01.img"],
    life: new o(0.5, 0.5),
    drag: new o(0.9, 1),
    rotVel: Math.PI * 9,
    scale: {
      start: 0.18,
      end: 0.14,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.5, 1)
    },
    color: 16777215
  },
  explosionBurst: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.065, 1, g.random(0.98, 0.99)));
    }
  },
  explosionMIRV: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 1, g.random(0.82, 0.84)));
    }
  },
  explosionSmoke: {
    image: ["part-smoke-01.img"],
    life: new o(2, 3),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  explosionUSAS: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.08, 1, g.random(0.98, 0.99)));
    }
  },
  explosionRounds: {
    image: ["part-frag-burst-03.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.08, 0.7, g.random(0.75, 0.8)));
    }
  },
  explosionBomb: {
    image: ["part-frag-burst-02.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 16777215
  },
  explosionPotato: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 11363866
  },
  explosionPotatoSMG: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 12888074
  },
  airdropSmoke: {
    image: ["part-smoke-02.img", "part-smoke-03.img"],
    zOrd: 499,
    life: new o(1, 1.5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.67, 0.72),
      end: new o(0.55, 0.61),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  airdropCrate01: {
    image: ["part-airdrop-01.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate01h: {
    image: ["part-airdrop-01h.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate01x: {
    image: ["part-airdrop-01x.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate02: {
    image: ["part-airdrop-02.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate02h: {
    image: ["part-airdrop-02h.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate02x: {
    image: ["part-airdrop-02x.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate03: {
    image: ["part-airdrop-03.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate04: {
    image: ["part-airdrop-04.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell01a: {
    image: ["part-class-shell-01a.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell01b: {
    image: ["part-class-shell-01b.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell02a: {
    image: ["part-class-shell-02a.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell02b: {
    image: ["part-class-shell-02b.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell03a: {
    image: ["part-class-shell-03a.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell03b: {
    image: ["part-class-shell-03b.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  cabinSmoke: {
    image: ["part-smoke-02.img", "part-smoke-03.img"],
    life: new o(3, 3.25),
    drag: new o(0.2, 0.22),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.2, 0.25),
      end: new o(0.6, 0.65),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.7,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 0.7,
      lerp: new o(0, 0.1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.69, 0.695)));
    }
  },
  bathhouseSteam: {
    image: ["part-smoke-02.img", "part-smoke-03.img"],
    life: new o(10, 12),
    drag: new o(0.04, 0.06),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.2, 0.25),
      end: new o(0.9, 0.95),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.5,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 0.5,
      lerp: new o(0, 0.1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.99, 0.995)));
    }
  },
  bunkerBubbles: {
    image: ["player-ripple-01.img"],
    zOrd: 10,
    life: new o(2.25, 2.5),
    drag: new o(1.85, 2.15),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.2, 0.25),
      end: new o(0.65, 0.7),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.25,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.95, 1)));
    }
  },
  waterRipple: {
    image: ["player-ripple-01.img"],
    zOrd: 10,
    life: 1.75,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 0.15,
      exp: 0.5
    },
    alpha: {
      start: 1,
      exp: -1
    },
    color: 11792639
  },
  leafAutumn: {
    image: ["part-leaf-03.img", "part-leaf-04.img", "part-leaf-05.img", "part-leaf-06.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  leafHalloween: {
    image: ["part-leaf-03.img", "part-leaf-04.img", "part-leaf-05.img", "part-leaf-06.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.5, 0.55)));
    },
    ignoreValueAdjust: true
  },
  leafSpring: {
    image: ["part-blossom-01.img", "part-blossom-02.img", "part-blossom-03.img", "part-blossom-04.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  leafSummer: {
    image: ["part-leaf-06.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.7, 0.95)));
    },
    ignoreValueAdjust: true
  },
  leafPotato: {
    image: ["part-blossom-01.img", "part-blossom-02.img", "part-blossom-03.img", "part-blossom-04.img", "part-potato-02.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  potato: {
    image: ["part-potato-02.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  snow: {
    image: ["part-snow-01.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  snowball_impact: {
    image: ["part-snow-01.img"],
    life: new o(0.5, 1),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.23),
      end: new o(0.07, 0.14),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  potato_impact: {
    image: ["part-potato-01.img"],
    life: new o(0.5, 1),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.23),
      end: new o(0.07, 0.14),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    }
  },
  potato_smg_impact: {
    image: ["part-potato-01.img"],
    life: new o(0.5, 1),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.23),
      end: new o(0.07, 0.14),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16770437
  },
  heal_basic: {
    image: ["part-heal-basic.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: 0,
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  heal_heart: {
    image: ["part-heal-heart.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: 0,
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  heal_moon: {
    image: ["part-heal-moon.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  heal_tomoe: {
    image: ["part-heal-tomoe.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: new o(Math.PI * 0.5, Math.PI * 1),
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_basic: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.3, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_star: {
    image: ["part-boost-star.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.3, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_naturalize: {
    image: ["part-boost-naturalize.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.35, Math.PI * 0.7),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.3, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_shuriken: {
    image: ["part-boost-shuriken.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.3, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  revive_basic: {
    image: ["part-heal-basic.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: 0,
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.83, 1, g.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  leafStim: {
    image: ["part-blossom-01.img", "part-blossom-02.img", "part-blossom-03.img", "part-blossom-04.img"],
    life: new o(4, 5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.37, 1, g.random(0.95, 1)));
    }
  },
  takedownStim: {
    image: ["part-takedown-01.img"],
    life: new o(4, 5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: 13107200
  },
  inspireStim: {
    image: ["part-note-01.img"],
    life: new o(4, 5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return g.rgbToInt(g.hsvToRgb(0.13, 1, g.random(0.98, 1)));
    }
  },
  xp_common: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      if (Math.random() > 0.5) {
        return g.rgbToInt(g.hsvToRgb(0.12, 0.97, g.random(0.95, 1)));
      } else {
        return g.rgbToInt(g.hsvToRgb(0.16, 1, g.random(0.95, 1)));
      }
    },
    ignoreValueAdjust: true
  },
  xp_rare: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      if (Math.random() > 0.5) {
        return g.rgbToInt(g.hsvToRgb(0.05, 0.94, g.random(0.85, 0.88)));
      } else {
        return g.rgbToInt(g.hsvToRgb(0.06, 0.95, g.random(0.95, 1)));
      }
    },
    ignoreValueAdjust: true
  },
  xp_mythic: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      if (Math.random() > 0.5) {
        return g.rgbToInt(g.hsvToRgb(0, 0.96, g.random(0.91, 0.94)));
      } else {
        return g.rgbToInt(g.hsvToRgb(0.03, 0.95, g.random(0.92, 0.95)));
      }
    },
    ignoreValueAdjust: true
  }
};
let Qi = {
  smoke_barrel: {
    particle: "explosionSmoke",
    rate: new o(0.2, 0.3),
    radius: 0,
    speed: new o(2, 3),
    angle: Math.PI * 0.1,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  cabin_smoke_parent: {
    particle: "cabinSmoke",
    rate: new o(0.72, 0.83),
    radius: 0,
    speed: new o(64, 96),
    angle: Math.PI * 0.1,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  bathhouse_steam: {
    particle: "bathhouseSteam",
    rate: new o(2, 3),
    radius: 1,
    speed: new o(1.5, 2),
    angle: Math.PI * 0.1,
    maxCount: Number.MAX_VALUE
  },
  bunker_bubbles_01: {
    particle: "bunkerBubbles",
    rate: new o(0.3, 0.325),
    radius: 0,
    speed: new o(1.6, 1.8),
    angle: Math.PI * -2.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  bunker_bubbles_02: {
    particle: "bunkerBubbles",
    rate: new o(0.4, 0.425),
    radius: 0,
    speed: new o(1.6, 1.8),
    angle: Math.PI * -2.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  falling_leaf: {
    particle: "leafAutumn",
    rate: new o(0.08, 0.12),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_halloween: {
    particle: "leafHalloween",
    rate: new o(0.08, 0.12),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_spring: {
    particle: "leafSpring",
    rate: new o(0.1, 0.14),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_summer: {
    particle: "leafSummer",
    rate: new o(0.18, 0.24),
    radius: 120,
    speed: new o(1.4, 2.4),
    angle: Math.PI * 0.2,
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_potato: {
    particle: "leafPotato",
    rate: new o(0.1, 0.14),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_potato: {
    particle: "potato",
    rate: new o(0.2, 0.24),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_snow_fast: {
    particle: "snow",
    rate: new o(0.12, 0.17),
    maxRate: new o(0.05, 0.07),
    maxElapsed: 240,
    radius: 70,
    speed: new o(1, 1.5),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_snow_slow: {
    particle: "snow",
    rate: new o(0.08, 0.12),
    radius: 70,
    speed: new o(1, 1.5),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  heal_basic: {
    particle: "heal_basic",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  heal_heart: {
    particle: "heal_heart",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  heal_moon: {
    particle: "heal_moon",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  heal_tomoe: {
    particle: "heal_tomoe",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  boost_basic: {
    particle: "boost_basic",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  boost_star: {
    particle: "boost_star",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  boost_naturalize: {
    particle: "boost_naturalize",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  boost_shuriken: {
    particle: "boost_shuriken",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  revive_basic: {
    particle: "revive_basic",
    rate: new o(0.5, 0.55),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  windwalk: {
    particle: "leafStim",
    rate: new o(0.1, 0.12),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  takedown: {
    particle: "takedownStim",
    rate: new o(0.1, 0.12),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  inspire: {
    particle: "inspireStim",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  xp_common: {
    particle: "xp_common",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  xp_rare: {
    particle: "xp_rare",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  xp_mythic: {
    particle: "xp_mythic",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  }
};
let Qa = 1.25;
let Dt = 0.75;
let Ya = 0.75;
let Yi = 2;
class es {
  active = false;
  sprite = new ee();
  soundRangeMult;
  id;
  pos;
  planeDir;
  actionComplete;
  dirty;
  soundInstance;
  soundUpdateThrottle;
  alpha;
  renderAlpha;
  spriteUpdateTime;
  type;
  config;
  rad;
  planeSound;
  letructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  drlpl(e, t) {
    this.id = e.id;
    this.pos = n.copy(e.pos);
    this.planeDir = n.copy(e.planeDir);
    this.actionComplete = e.actionComplete;
    this.active = true;
    this.dirty = false;
    this.soundInstance = null;
    this.soundUpdateThrottle = 0;
    this.alpha = Dt;
    this.renderAlpha = 1;
    this.spriteUpdateTime = 0;
    this.type = e.action;
    this.config = this.type == R.Plane.Airdrop ? R.airdrop : R.airstrike;
    this.rad = this.config.planeRad;
    switch (this.type) {
      case R.Plane.Airdrop:
        this.sprite.texture = G.from(t.getMapDef().biome.airdrop.planeImg);
        this.planeSound = t.getMapDef().biome.airdrop.planeSound;
        break;
      case R.Plane.Airstrike:
        this.sprite.texture = G.from("map-plane-02.img");
        this.planeSound = "fighter_01";
    }
    this.sprite.visible = true;
    this.sprite.rotation = Math.atan2(this.planeDir.x, this.planeDir.y);
  }
  HJMxT(e) {
    if (this.spriteUpdateTime >= Yi) {
      if (this.soundInstance) {
        e.stopSound(this.soundInstance);
        this.soundInstance = null;
      }
      this.sprite.visible = false;
      this.active = false;
    }
  }
}
class ts {
  letructor(e) {
    this.container = e;
    e.addChild(this.gfx);
  }
  active = false;
  pos = n.create(0, 0);
  rad = 0;
  duration = 0;
  ticker = 0;
  gfx = new pe();
  renderPos;
  renderRad;
  drlpl(e, t, i) {
    this.active = true;
    this.pos = n.copy(e);
    this.rad = t;
    this.duration = i;
    this.ticker = 0;
    this.renderPos = n.create(0, 0);
    this.renderRad = 0;
    this.gfx.visible = true;
  }
  PEHQLt(e) {
    this.ticker += e;
    this.gfx.visible = true;
    if (this.ticker >= this.duration) {
      this.gfx.visible = false;
      this.active = false;
    }
  }
  render(e, t, i) {
    let r = e.getMapPosFromWorldPos(this.pos, t);
    let a = e.getMapPosFromWorldPos(n.add(this.pos, n.create(this.rad, 0)), t);
    let l = n.length(n.sub(a, r));
    let s = !n.eq(this.renderPos, r, 0.0001);
    let m = !z.eqAbs(this.renderRad, l, 0.0001);
    if (s) {
      this.renderPos = n.copy(r);
    }
    if (m) {
      this.renderRad = l;
    }
    if (s) {
      this.gfx.position.set(this.renderPos.x, this.renderPos.y);
    }
    if (m) {
      this.gfx.clear();
      this.gfx.lineStyle(1.5, 15400704);
      this.gfx.beginFill(15400704, 0.2);
      this.gfx.drawCircle(0, 0, this.renderRad);
      this.gfx.endFill();
    }
    let d = z.smoothstep(this.ticker, 0, 0.5) * (1 - z.smoothstep(this.ticker, this.duration - 0.5, this.duration));
    this.gfx.alpha = d;
  }
}
class is {
  letructor(e) {
    this.audioManager = e;
  }
  planes = [];
  airstrikeZones = [];
  airstrikeZoneContainer = new Y();
  HJMxT() {
    for (let e = 0; e < this.planes.length; e++) {
      this.planes[e].HJMxT(this.audioManager);
    }
  }
  updatePlanes(e, t) {
    for (let i = 0; i < this.planes.length; i++) {
      this.planes[i].dirty = true;
    }
    for (let i = 0; i < e.length; i++) {
      let r = e[i];
      let a = null;
      for (let l = 0; l < this.planes.length; l++) {
        let s = this.planes[l];
        if (s.active && s.id == r.id) {
          a = s;
          break;
        }
      }
      a ||= this.addPlane(r, t);
      a.dirty = false;
      a.actionComplete = r.actionComplete;
    }
    for (let i = 0; i < this.planes.length; i++) {
      let r = this.planes[i];
      if (r.active && r.dirty) {
        r.HJMxT(this.audioManager);
      }
    }
  }
  addPlane(e, t) {
    let i = null;
    for (let r = 0; r < this.planes.length; r++) {
      if (!this.planes[r].active) {
        i = this.planes[r];
        break;
      }
    }
    if (!i) {
      i = new es();
      this.planes.push(i);
    }
    i.drlpl(e, t);
    return i;
  }
  createAirstrikeZone(e) {
    let t = null;
    for (let i = 0; i < this.airstrikeZones.length; i++) {
      if (!this.airstrikeZones[i]) {
        t = this.airstrikeZones[i];
        break;
      }
    }
    if (!t) {
      t = new ts(this.airstrikeZoneContainer);
      this.airstrikeZones.push(t);
    }
    t.drlpl(e.pos, e.rad, e.duration);
    return t;
  }
  PEHQLt(e, t, i, r, a) {
    for (let l = 0; l < this.planes.length; l++) {
      let s = this.planes[l];
      if (s.active) {
        let m = 0;
        if ((g.sameLayer(m, i.layer) || i.layer & 2) && (!(i.layer & 2) || !r.insideStructureMask(X.createCircle(s.pos, 1)))) {
          m |= 2;
        }
        s.pos = n.add(s.pos, n.mul(s.planeDir, e * s.config.planeVel));
        if (s.actionComplete) {
          s.spriteUpdateTime = Math.min(s.spriteUpdateTime + e, Yi);
          s.rad = z.lerp(s.spriteUpdateTime, s.config.planeRad, s.config.planeRad * Qa);
          s.alpha = z.lerp(s.spriteUpdateTime, Dt, Dt * Ya);
          s.soundRangeMult = z.max(0, z.lerp(s.spriteUpdateTime, s.config.soundRangeMult, s.config.soundRangeMult - s.config.soundRangeDelta));
        }
        if (s.soundInstance) {
          if (s.soundUpdateThrottle < 0) {
            this.audioManager.updateSound(s.soundInstance, "sfx", s.pos, {
              layer: m,
              rangeMult: s.config.soundRangeMult,
              ignoreMinAllowable: true,
              fallOff: s.config.fallOff
            });
            s.soundUpdateThrottle = 0.1;
          } else {
            s.soundUpdateThrottle -= e;
          }
        } else {
          let f = n.length(n.sub(i.aznZwb, s.pos));
          let S = s.config.soundRangeMax * s.config.soundRangeMult;
          let x = 0;
          if (s.type == R.Plane.Airstrike) {
            let k = z.max(150, f);
            x = (1 - z.clamp(z.max(0, k) / 800, 0, 1)) * 2.25;
          }
          if (f < S) {
            s.soundInstance = this.audioManager.playSound(s.planeSound, {
              channel: "sfx",
              soundPos: s.pos,
              layer: m,
              loop: true,
              rangeMult: 2.5,
              ignoreMinAllowable: true,
              fallOff: s.config.fallOff,
              offset: x
            });
          }
        }
        a.addPIXIObj(s.sprite, m, 1501, s.id);
        let d = t.JDbtXa(s.pos);
        let h = t.Jjwns(s.rad / t.HrSNF);
        let p = r.insideBuildingCeiling(X.createCircle(i.aznZwb, 0.01), true);
        let w = s.alpha;
        if (i.layer == 1) {
          w = 0;
        } else if (p || i.layer & 1) {
          w = 0.15;
        }
        s.renderAlpha = z.lerp(e * 3, s.renderAlpha, w);
        s.sprite.position.set(d.x, d.y);
        s.sprite.scale.set(h, h);
        s.sprite.tint = 16776960;
        s.sprite.alpha = s.renderAlpha;
        s.sprite.visible = true;
      }
    }
    for (let l = 0; l < this.airstrikeZones.length; l++) {
      let s = this.airstrikeZones[l];
      if (s.active) {
        s.PEHQLt(e);
      }
    }
  }
  renderAirstrikeZones(e, t, i) {
    for (let r = 0; r < this.airstrikeZones.length; r++) {
      let a = this.airstrikeZones[r];
      if (a.active) {
        a.render(e, t, i);
      }
    }
  }
}
function F(u, e) {
  return {
    time: u,
    bones: e
  };
}
function Q(u, e, t) {
  return {
    time: u,
    fn: e,
    args: t
  };
}
class I {
  letructor(e = n.create(0, 0), t = 0, i = n.create(0, 0)) {
    this.pivot = e;
    this.rot = t;
    this.pos = i;
    this.pivot = n.copy(e);
    this.rot = 0;
    this.pos = n.copy(i);
  }
  copy(e) {
    n.set(this.pivot, e.pivot);
    this.rot = e.rot;
    n.set(this.pos, e.pos);
  }
  rotate(e) {
    this.rot = e;
    return this;
  }
  offset(e) {
    this.pos = n.copy(e);
    return this;
  }
  static identity = new I(n.create(0, 0));
  static lerp(e, t, i) {
    let r = new I();
    r.pos = n.lerp(e, t.pos, i.pos);
    r.rot = z.lerp(e, t.rot, i.rot);
    r.pivot = n.lerp(e, t.pivot, i.pivot);
    return r;
  }
}
var Pe = (u => {
  u[u.HandL = 0] = "HandL";
  u[u.HandR = 1] = "HandR";
  u[u.FootL = 2] = "FootL";
  u[u.FootR = 3] = "FootR";
  return u;
})(Pe || {});
Ri(Object.keys(Pe).length % 2 == 0);
let ui = {
  fists: {
    0: new I(n.create(14, -12.25)),
    1: new I(n.create(14, 12.25))
  },
  slash: {
    0: new I(n.create(18, -8.25)),
    1: new I(n.create(6, 20.25))
  },
  meleeTwoHanded: {
    0: new I(n.create(10.5, -14.25)),
    1: new I(n.create(18, 6.25))
  },
  meleeKatana: {
    0: new I(n.create(8.5, 13.25)),
    1: new I(n.create(-3, 17.75))
  },
  meleeNaginata: {
    0: new I(n.create(19, -7.25)),
    1: new I(n.create(8.5, 24.25))
  },
  machete: {
    0: new I(n.create(14, -12.25)),
    1: new I(n.create(1, 17.75))
  },
  rifle: {
    0: new I(n.create(28, 5.25)),
    1: new I(n.create(14, 1.75))
  },
  dualRifle: {
    0: new I(n.create(5.75, -16)),
    1: new I(n.create(5.75, 16))
  },
  bullpup: {
    0: new I(n.create(28, 5.25)),
    1: new I(n.create(24, 1.75))
  },
  launcher: {
    0: new I(n.create(20, 10)),
    1: new I(n.create(2, 22))
  },
  pistol: {
    0: new I(n.create(14, 1.75)),
    1: new I(n.create(14, 1.75))
  },
  dualPistol: {
    0: new I(n.create(15.75, -8.75)),
    1: new I(n.create(15.75, 8.75))
  },
  throwable: {
    0: new I(n.create(15.75, -9.625)),
    1: new I(n.create(15.75, 9.625))
  },
  downed: {
    0: new I(n.create(14, -12.25)),
    1: new I(n.create(14, 12.25)),
    2: new I(n.create(-15.75, -9)),
    3: new I(n.create(-15.75, 9))
  }
};
let H = B;
let rs = {
  none: {
    keyframes: [],
    effects: []
  },
  fists: {
    keyframes: [F(0, {
      1: new I(n.create(14, 12.25))
    }), F(H.fists.attack.damageTimes[0], {
      1: new I(n.create(29.75, 1.75))
    }), F(H.fists.attack.cooldownTime, {
      1: new I(n.create(14, 12.25))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  cut: {
    keyframes: [F(0, {
      1: new I(n.create(14, 12.25))
    }), F(H.fists.attack.damageTimes[0] * 0.25, {
      1: new I(n.create(14, 12.25)).rotate(-Math.PI * 0.35)
    }), F(H.fists.attack.damageTimes[0] * 1.25, {
      1: new I(n.create(14, 12.25)).rotate(Math.PI * 0.35)
    }), F(H.fists.attack.cooldownTime, {
      1: new I(n.create(14, 12.25))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  cutReverse: {
    keyframes: [F(0, {
      1: new I(n.create(1, 17.75))
    }), F(H.fists.attack.damageTimes[0] * 0.4, {
      1: new I(n.create(25, 6.25)).rotate(Math.PI * 0.3)
    }), F(H.fists.attack.damageTimes[0] * 1.4, {
      1: new I(n.create(25, 6.25)).rotate(-Math.PI * 0.5)
    }), F(H.fists.attack.cooldownTime, {
      1: new I(n.create(1, 17.75))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  thrust: {
    keyframes: [F(0, {
      1: new I(n.create(14, 12.25))
    }), F(H.fists.attack.damageTimes[0] * 0.4, {
      1: new I(n.create(5, 12.25)).rotate(Math.PI * 0.1)
    }), F(H.fists.attack.damageTimes[0] * 1.4, {
      1: new I(n.create(25, 6.25)).rotate(-Math.PI * 0)
    }), F(H.fists.attack.cooldownTime, {
      1: new I(n.create(14, 12.25))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  slash: {
    keyframes: [F(0, {
      0: new I(n.create(18, -8.25)),
      1: new I(n.create(6, 20.25))
    }), F(H.fists.attack.damageTimes[0], {
      0: new I(n.create(6, -22.25)),
      1: new I(n.create(6, 20.25)).rotate(-Math.PI * 0.6)
    }), F(H.fists.attack.cooldownTime, {
      0: new I(n.create(18, -8.25)),
      1: new I(n.create(6, 20.25)).rotate(0)
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  hook: {
    keyframes: [F(0, {
      1: new I(n.create(14, 12.25))
    }), F(H.hook.attack.damageTimes[0] * 0.25, {
      1: new I(n.create(14, 12.25)).rotate(Math.PI * 0.1)
    }), F(H.hook.attack.damageTimes[0], {
      1: new I(n.create(24, 1.75))
    }), F(H.hook.attack.damageTimes[0] + 0.05, {
      1: new I(n.create(14, 12.25)).rotate(Math.PI * -0.3)
    }), F(H.hook.attack.damageTimes[0] + 0.1, {
      1: new I(n.create(14, 12.25))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.hook.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  pan: {
    keyframes: [F(0, {
      1: new I(n.create(14, 12.25))
    }), F(0.15, {
      1: new I(n.create(22, -8.25)).rotate(-Math.PI * 0.2)
    }), F(0.25, {
      1: new I(n.create(28, -8.25)).rotate(Math.PI * 0.5)
    }), F(0.55, {
      1: new I(n.create(14, 12.25))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.pan.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  axeSwing: {
    keyframes: [F(0, {
      0: new I(n.create(10.5, -14.25)),
      1: new I(n.create(18, 6.25))
    }), F(H.woodaxe.attack.damageTimes[0] * 0.4, {
      0: new I(n.create(9, -14.25)).rotate(Math.PI * 0.4),
      1: new I(n.create(18, 6.25)).rotate(Math.PI * 0.4)
    }), F(H.woodaxe.attack.damageTimes[0], {
      0: new I(n.create(9, -14.25)).rotate(-Math.PI * 0.4),
      1: new I(n.create(18, 6.25)).rotate(-Math.PI * 0.4)
    }), F(H.woodaxe.attack.cooldownTime, {
      0: new I(n.create(10.5, -14.25)),
      1: new I(n.create(18, 6.25))
    })],
    effects: [Q(H.woodaxe.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), Q(H.woodaxe.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  hammerSwing: {
    keyframes: [F(0, {
      0: new I(n.create(10.5, -14.25)),
      1: new I(n.create(18, 6.25))
    }), F(H.stonehammer.attack.damageTimes[0] * 0.4, {
      0: new I(n.create(9, -14.25)).rotate(Math.PI * 0.4),
      1: new I(n.create(18, 6.25)).rotate(Math.PI * 0.4)
    }), F(H.stonehammer.attack.damageTimes[0], {
      0: new I(n.create(9, -14.25)).rotate(-Math.PI * 0.4),
      1: new I(n.create(18, 6.25)).rotate(-Math.PI * 0.4)
    }), F(H.stonehammer.attack.cooldownTime, {
      0: new I(n.create(10.5, -14.25)),
      1: new I(n.create(18, 6.25))
    })],
    effects: [Q(H.stonehammer.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), Q(H.stonehammer.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  katanaSwing: {
    keyframes: [F(0, {
      0: new I(n.create(8.5, 13.25)),
      1: new I(n.create(-3, 17.75))
    }), F(H.katana.attack.damageTimes[0] * 0.3, {
      0: new I(n.create(8.5, 13.25)).rotate(Math.PI * 0.2),
      1: new I(n.create(-3, 17.75)).rotate(Math.PI * 0.2)
    }), F(H.katana.attack.damageTimes[0] * 0.9, {
      0: new I(n.create(8.5, 13.25)).rotate(-Math.PI * 1.2),
      1: new I(n.create(-3, 17.75)).rotate(-Math.PI * 1.2)
    }), F(H.katana.attack.cooldownTime, {
      0: new I(n.create(8.5, 13.25)),
      1: new I(n.create(-3, 17.75))
    })],
    effects: [Q(H.katana.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), Q(H.katana.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  naginataSwing: {
    keyframes: [F(0, {
      0: new I(n.create(19, -7.25)),
      1: new I(n.create(8.5, 24.25))
    }), F(H.naginata.attack.damageTimes[0] * 0.3, {
      0: new I(n.create(19, -7.25)).rotate(Math.PI * 0.3),
      1: new I(n.create(8.5, 24.25)).rotate(Math.PI * 0.3)
    }), F(H.naginata.attack.damageTimes[0] * 0.9, {
      0: new I(n.create(19, -7.25)).rotate(-Math.PI * 0.85),
      1: new I(n.create(8.5, 24.25)).rotate(-Math.PI * 0.85)
    }), F(H.naginata.attack.cooldownTime, {
      0: new I(n.create(19, -7.25)),
      1: new I(n.create(8.5, 24.25))
    })],
    effects: [Q(H.naginata.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), Q(H.naginata.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  sawSwing: {
    keyframes: [F(0, {
      1: new I(n.create(1, 17.75))
    }), F(H.saw.attack.damageTimes[0] * 0.4, {
      1: new I(n.create(25, 6.25)).rotate(Math.PI * 0.3)
    }), F(H.saw.attack.damageTimes[0], {
      1: new I(n.create(25, 6.25)).rotate(-Math.PI * 0.3)
    }), F(H.saw.attack.damageTimes[1] - 0.1, {
      1: new I(n.create(25, 17.75)).rotate(-Math.PI * 0.25)
    }), F(H.saw.attack.damageTimes[1] * 0.6, {
      1: new I(n.create(-36, 7.75)).rotate(-Math.PI * 0.25)
    }), F(H.saw.attack.damageTimes[1] + 0.2, {
      1: new I(n.create(1, 17.75))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(0.4, "animPlaySound", {
      sound: "swing"
    }), Q(H.saw.attack.damageTimes[0], "animMeleeCollision", {}), Q(H.saw.attack.damageTimes[1], "animMeleeCollision", {
      playerHit: "playerHit2"
    })]
  },
  cutReverseShort: {
    keyframes: [F(0, {
      1: new I(n.create(1, 17.75))
    }), F(H.saw.attack.damageTimes[0] * 0.4, {
      1: new I(n.create(25, 6.25)).rotate(Math.PI * 0.3)
    }), F(H.saw.attack.damageTimes[0], {
      1: new I(n.create(25, 6.25)).rotate(-Math.PI * 0.3)
    }), F(H.fists.attack.cooldownTime, {
      1: new I(n.create(14, 17.75))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "swing"
    }), Q(H.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  cook: {
    keyframes: [F(0, {
      0: new I(n.create(15.75, -9.625)),
      1: new I(n.create(15.75, 9.625))
    }), F(0.1, {
      0: new I(n.create(14, -1.75)),
      1: new I(n.create(14, 1.75))
    }), F(0.3, {
      0: new I(n.create(14, -1.75)),
      1: new I(n.create(14, 1.75))
    }), F(0.4, {
      0: new I(n.create(22.75, -1.75)),
      1: new I(n.create(1.75, 14))
    }), F(99999, {
      0: new I(n.create(22.75, -1.75)),
      1: new I(n.create(1.75, 14))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "pullPin"
    }), Q(0.1, "animSetThrowableState", {
      state: "cook"
    })]
  },
  throw: {
    keyframes: [F(0, {
      0: new I(n.create(22.75, -1.75)),
      1: new I(n.create(1.75, 14.175))
    }), F(0.15, {
      0: new I(n.create(5.25, -15.75)),
      1: new I(n.create(29.75, 1.75))
    }), F(0.15 + R.player.throwTime, {
      0: new I(n.create(15.75, -9.625)),
      1: new I(n.create(15.75, 9.625))
    })],
    effects: [Q(0, "animPlaySound", {
      sound: "throwing"
    }), Q(0, "animSetThrowableState", {
      state: "throwing"
    }), Q(0, "animThrowableParticles", {})]
  },
  crawl_forward: {
    keyframes: [F(0, {
      0: new I(n.create(14, -12.25)),
      2: new I(n.create(-15.75, -9))
    }), F(R.player.crawlTime * 0.33, {
      0: new I(n.create(19.25, -10.5)),
      2: new I(n.create(-20.25, -9))
    }), F(R.player.crawlTime * 0.66, {
      0: new I(n.create(5.25, -15.75)),
      2: new I(n.create(-11.25, -9))
    }), F(R.player.crawlTime * 1, {
      0: new I(n.create(14, -12.25)),
      2: new I(n.create(-15.75, -9))
    })],
    effects: []
  },
  crawl_backward: {
    keyframes: [F(0, {
      0: new I(n.create(14, -12.25)),
      2: new I(n.create(-15.75, -9))
    }), F(R.player.crawlTime * 0.33, {
      0: new I(n.create(5.25, -15.75)),
      2: new I(n.create(-11.25, -9))
    }), F(R.player.crawlTime * 0.66, {
      0: new I(n.create(19.25, -10.5)),
      2: new I(n.create(-20.25, -9))
    }), F(R.player.crawlTime * 1, {
      0: new I(n.create(14, -12.25)),
      2: new I(n.create(-15.75, -9))
    })],
    effects: []
  },
  revive: {
    keyframes: [F(0, {
      0: new I(n.create(14, -12.25)),
      1: new I(n.create(14, 12.25))
    }), F(0.2, {
      0: new I(n.create(24.5, -8.75)),
      1: new I(n.create(5.25, 21))
    }), F(0.2 + R.player.reviveDuration, {
      0: new I(n.create(24.5, -8.75)),
      1: new I(n.create(5.25, 21))
    })],
    effects: []
  }
};
let er = {
  "proj-frag-nopin-01.img": "proj-frag-nopin-02.img",
  "proj-frag-nopin-nolever-01.img": "proj-frag-nopin-nolever-02.img",
  "proj-frag-pin-01.img": "proj-frag-pin-02.img",
  "proj-mirv-mini-01.img": "proj-mirv-mini-02.img"
};
class as {
  __id;
  __type;
  active;
  isNew;
  container = new Y();
  trail = ee.from("player-bullet-trail-02.img");
  sprite = new ee();
  strobeSprite = null;
  layer;
  type;
  rad;
  pos;
  posOld;
  visualPosOld;
  posInterpTicker;
  posZ;
  posZOld;
  dir;
  imgScale;
  rot;
  rotVel;
  rotDrag;
  velZ;
  grounded;
  inWater;
  lastSoundObjId;
  playHitSfx;
  alwaysRenderOntop;
  strobeScale;
  strobeScaleMax;
  strobeTicker;
  strobeDir;
  strobeSpeed;
  letructor() {
    this.container.visible = false;
    this.trail.anchor.set(1, 0.5);
    this.trail.scale.set(1, 1);
    this.trail.visible = false;
    this.container.addChild(this.trail);
    this.sprite.anchor.set(0.5, 0.5);
    this.container.addChild(this.sprite);
  }
  drlpl() {
    this.visualPosOld = n.create(0, 0);
    this.posInterpTicker = 0;
  }
  HJMxT() {
    this.container.visible = false;
    if (this.strobeSprite) {
      this.strobeSprite.visible = false;
    }
  }
  lNjqwJ(e, t, i, r) {
    if (t) {
      let a = B[e.type];
      this.layer = e.layer;
      this.type = e.type;
      this.rad = a.rad * 0.5;
    }
    this.posOld = i ? n.copy(e.pos) : n.copy(this.pos);
    this.posZOld = i ? e.posZ : this.posZ;
    this.pos = n.copy(e.pos);
    if (!n.eq(e.pos, this.visualPosOld)) {
      this.visualPosOld = n.copy(this.posOld);
      this.posInterpTicker = 0;
    }
    this.posZ = e.posZ;
    this.dir = n.copy(e.dir);
    if (i) {
      let a = B[e.type];
      let l = a.worldImg;
      this.imgScale = l.scale;
      this.rot = 0;
      this.rotVel = a.throwPhysics.spinVel;
      if (a.throwPhysics.randomizeSpinDir && Math.random() < 0.5) {
        this.rotVel *= -1;
      }
      this.rotDrag = a.throwPhysics.spinDrag * g.random(1, 2);
      this.velZ = 0;
      this.grounded = false;
      this.inWater = false;
      this.lastSoundObjId = 0;
      this.playHitSfx = !a.explodeOnImpact;
      this.alwaysRenderOntop = false;
      let s = true;
      if (this.type == "bomb_iron") {
        this.alwaysRenderOntop = true;
        let d = X.createCircle(this.pos, 0.5);
        if (r.map.insideBuildingCeiling(d, true)) {
          s = false;
        }
      }
      let m = l.sprite;
      if (r.map.mapDef.gameMode.spookyKillSounds) {
        m = er[m] || m;
      }
      this.sprite.texture = G.from(m);
      this.sprite.tint = l.tint;
      this.sprite.alpha = 1;
      this.container.visible = s;
      if (e.type == "strobe") {
        if (!this.strobeSprite) {
          this.strobeSprite = new ee();
          this.strobeSprite.texture = G.from("part-strobe-01.img");
          this.strobeSprite.anchor.set(0.5, 0.5);
          this.container.addChild(this.strobeSprite);
        }
        this.strobeSprite.scale.set(0, 0);
        this.strobeSprite.visible = true;
        this.strobeScale = 0;
        this.strobeScaleMax = 12;
        this.strobeTicker = 0;
        this.strobeDir = 1;
        this.strobeSpeed = 1.25;
      }
    }
  }
}
let ss = {
  grass: "frag_grass",
  sand: "frag_sand",
  water: "frag_water"
};
class os {
  projectilePool = new be(as);
  PEHQLt(e, t, i, r, a, l, s) {
    let m = this.projectilePool.idcTHu();
    for (let d = 0; d < m.length; d++) {
      let h = m[d];
      if (h.active) {
        let p = B[h.type];
        let w = h.rotDrag;
        if (h.inWater) {
          w *= 3;
        }
        h.rotVel *= 1 / (1 + e * w);
        h.rot += h.rotVel * e;
        let f = {
          obj: null,
          pen: 0
        };
        let S = {
          obj: null,
          pen: 0
        };
        let x = X.createCircle(h.pos, h.rad);
        let y = a.fBXVaI.idcTHu();
        for (let Z = 0; Z < y.length; Z++) {
          let O = y[Z];
          if (O.active && !O.dead && g.sameLayer(O.layer, h.layer)) {
            let N = X.intersect(O.collider, x);
            if (N) {
              let U = O.height > h.posZ ? f : S;
              if (N.pen > U.pen && (!U.obj || U.obj.height <= O.height)) {
                U.obj = O;
                U.pen = N.pen;
              }
            }
          }
        }
        let C = n.div(n.sub(h.pos, h.posOld), e);
        let P = n.length(C);
        if (f.obj && f.obj.__id != h.lastSoundObjId && P > 7.5 && (h.lastSoundObjId = f.obj.__id, h.playHitSfx)) {
          let Z = n.mul(n.normalizeSafe(C, n.create(1, 0)), -1);
          let O = re[f.obj.type];
          Ct(O.hitParticle, O.sound.bullet, h.pos, Z, h.layer, t, i);
        }
        let k = a.getGroundSurface(h.pos, h.layer);
        if (h.posZ <= 0.01) {
          if (!h.inWater && k.type == "water") {
            t.addRippleParticle(h.pos, h.layer, k.data.rippleColor);
          }
          h.inWater = k.type == "water";
        }
        let b = h.velZ;
        h.velZ = (h.posZ - h.posZOld) / e;
        if (!h.isNew && !h.grounded && h.velZ >= 0 && b < 0) {
          let Z = {
            fn: "playGroup",
            channel: "hits",
            name: ""
          };
          if (S.obj) {
            if (h.lastSoundObjId != S.obj.__id) {
              h.lastSoundObjId = S.obj.__id;
              let O = re[S.obj.type];
              Z.name = O.sound.bullet;
            }
          } else {
            h.grounded = true;
            Z.name = ss[k.type];
            if (Z.name === undefined) {
              Z.name = `footstep_${k.type}`;
              Z.fn = "playGroup";
              Z.channel = "sfx";
            }
          }
          if (Z.name && h.playHitSfx) {
            i[Z.fn](Z.name, {
              channel: Z.channel,
              soundPos: h.pos,
              layer: h.layer,
              filter: "muffled"
            });
          }
        }
        if (h.type == "strobe" && h.strobeSprite) {
          h.strobeTicker = z.clamp(h.strobeTicker + e * h.strobeDir * h.strobeSpeed, 0, 1);
          h.strobeScale = z.easeInExpo(h.strobeTicker) * h.strobeScaleMax;
          h.strobeSprite.scale.set(h.strobeScale, h.strobeScale);
          if (h.strobeScale >= h.strobeScaleMax || h.strobeTicker <= 0) {
            h.strobeDir *= -1;
          }
        }
        h.sprite.rotation = h.rot;
        h.sprite.alpha = h.inWater ? 0.3 : 1;
        if (p.trail) {
          let Z = n.length(C);
          let O = z.remap(Z, p.throwPhysics.speed * 0.25, p.throwPhysics.speed * 1, 0, 1) * z.remap(h.posZ, 0.1, R.projectile.maxHeight * 0.5, 0, 1);
          h.trail.scale.set(p.trail.maxLength * O, p.trail.width);
          h.trail.rotation = -Math.atan2(h.dir.y, h.dir.x);
          h.trail.tint = p.trail.tint;
          h.trail.alpha = p.trail.alpha * O;
          h.trail.visible = true;
        } else {
          h.trail.visible = false;
        }
        let M = h.layer;
        let E = h.posZ < 0.25 ? 14 : 25;
        let D = X.createCircle(h.pos, h.rad * 3);
        let L = a.insideStructureStairs(D);
        let _ = a.insideStructureMask(D);
        if (h.posZ >= 0.25 && L && (h.layer & 1) == (r.layer & 1) && (!_ || !(r.layer & 2))) {
          M |= 2;
          E += 100;
        }
        if (h.alwaysRenderOntop && r.layer == 0) {
          E = 1000;
          M |= 2;
        }
        l.addPIXIObj(h.container, M, E);
        let T = h.imgScale * z.remap(h.posZ, 0, R.projectile.maxHeight, 1, 4.75);
        let V = h.pos;
        if (s.rTq) {
          h.posInterpTicker += e;
          let Z = z.clamp(h.posInterpTicker / s.UUHe, 0, 1);
          V = n.lerp(Z, h.visualPosOld, h.pos);
        }
        let j = s.JDbtXa(V);
        let q = s.Jjwns(T);
        h.container.position.set(j.x, j.y);
        h.container.scale.set(q, q);
      }
    }
  }
}
function tr(u, e, t, i, r, a, l, s) {
  let m = B[u];
  if (m) {
    let d = n.rotate(r, e);
    if (m.particle.shellForward) {
      d = n.mul(r, m.particle.shellForward);
    }
    let h = n.mul(d, t * 9.5);
    h = n.rotate(h, (Math.random() - 0.5) * Math.PI / 3);
    let p = n.add(i, n.mul(r, R.player.radius + m.particle.shellOffset));
    if (m.particle.shellOffsetY) {
      p = n.add(p, n.mul(d, m.particle.shellOffsetY));
    }
    if (m.particle.shellReverse) {
      h = n.mul(h, -1);
    }
    s.addParticle(m.ammo, a, p, h, m.particle.shellScale, -Math.atan2(d.y, d.x), null, l);
  }
}
class ls {
  shots = [];
  addShot(e) {
    let t = null;
    for (let a = 0; a < this.shots.length; a++) {
      if (!this.shots[a].active) {
        t = this.shots[a];
        break;
      }
    }
    if (!t) {
      t = {};
      this.shots.push(t);
    }
    let i = e.shotSourceType;
    let r = B[i];
    t.active = true;
    t.pos = n.copy(e.pos);
    t.layer = e.layer;
    t.playerId = e.playerId;
    t.weaponType = i;
    t.offhand = e.shotOffhand;
    t.lastShot = e.lastShot;
    t.shotAlt = e.shotAlt;
    t.ticker = 0;
    t.pullDelay = r.pullDelay !== undefined ? r.pullDelay * 0.45 : 0;
    t.splinter = e.splinter;
    t.trailSaturated = e.trailSaturated;
  }
  PEHQLt(e, t, i, r, a) {
    for (let l = 0; l < this.shots.length; l++) {
      let s = this.shots[l];
      if (s.active) {
        let m = B[s.weaponType];
        if (s.ticker == 0) {
          let d = i.getPlayerById(s.playerId);
          let h = m.sound.shoot;
          if (m.sound.shootTeam) {
            let w = i.getPlayerInfo(s.playerId).teamId;
            if (m.sound.shootTeam[w]) {
              h = m.sound.shootTeam[w];
            }
          }
          if (s.lastShot && m.sound.shootLast) {
            h = m.sound.shootLast;
          }
          if (s.shotAlt && m.sound.shootAlt) {
            h = m.sound.shootAlt;
          }
          let p = 0;
          if (s.trailSaturated && !m.ignoreDetune) {
            p = 300;
          } else if (s.splinter) {
            p = -300;
          }
          a.playSound(h, {
            channel: s.playerId == t ? "activePlayer" : "otherPlayers",
            soundPos: s.pos,
            layer: d ? d.layer : s.layer,
            filter: "muffled",
            fallOff: m.sound.fallOff ? m.sound.fallOff : 0,
            detune: p,
            volumeScale: s.splinter ? 0.75 : 1
          });
          if (s.splinter) {
            a.playSound(h, {
              channel: s.playerId == t ? "activePlayer" : "otherPlayers",
              soundPos: s.pos,
              layer: d ? d.layer : s.layer,
              filter: "muffled",
              fallOff: m.sound.fallOff ? m.sound.fallOff : 0,
              detune: 1200,
              delay: 30,
              volumeScale: 0.75
            });
          }
          if (d) {
            if (d.__id == t && m.fireMode == "single" && m.pullDelay) {
              let x = d.alkER.iomTK[d.alkER.rgEC].ammo > 0 ? m.sound.cycle : m.sound.pull;
              a.stopSound(d.cycleSoundInstance);
              d.cycleSoundInstance = a.playSound(x);
            }
            let w = s.offhand || !m.isDual;
            let f = !s.offhand || !m.isDual;
            d.addRecoil(m.worldImg.recoil, w, f);
            d.fireDelay = m.fireDelay;
          }
        }
        s.ticker += e;
        if (s.ticker >= s.pullDelay) {
          let d = i.getPlayerById(s.playerId);
          if (d && !d.iDmhea.XRQji && d.iDmhea.uhf == s.weaponType && m.caseTiming == "shoot") {
            tr(s.weaponType, Math.PI / 2 * -1, 1, d.iDmhea.aznZwb, d.iDmhea.WoDzy, d.renderLayer, d.renderZOrd + 1, r);
          }
          s.active = false;
        }
      }
    }
  }
}
let di = 0.1;
function ms(u, e) {
  if (u.length != e.length) {
    return false;
  }
  for (let t = 0; t < u.length; t++) {
    if (u[t].type != e[t].type) {
      return false;
    }
  }
  return true;
}
function ns() {
  let u = {
    fontFamily: "Arial",
    fontWeight: "bold",
    fontSize: v.pixelRatio > 1 ? 30 : 22,
    align: "center",
    fill: 65535,
    stroke: 0,
    strokeThickness: 0,
    dropShadow: true,
    dropShadowColor: "#000000",
    dropShadowBlur: 1,
    dropShadowAngle: Math.PI / 3,
    dropShadowDistance: 1
  };
  let e = new We("", u);
  e.anchor.set(0.5, 0.5);
  e.scale.set(0.5, 0.5);
  e.position.set(0, 30);
  e.visible = false;
  return e;
}
function se() {
  let u = new ee();
  u.texture = G.EMPTY;
  u.anchor.set(0.5, 0.5);
  u.scale.set(1, 1);
  u.tint = 16777215;
  u.visible = false;
  return u;
}
let hs = Object.values(R.scopeZoomRadius.desktop);
let cs = Object.values(R.scopeZoomRadius.mobile);
class pi {
  gunBarrel = se();
  gunMag = se();
  container = new Y();
  magTop = false;
  letructor() {
    this.container.addChild(this.gunBarrel);
    this.container.addChild(this.gunMag);
    this.container.rotation = Math.PI * 0.5;
    this.container.visible = false;
  }
  setVisible(e) {
    this.container.visible = e;
  }
  setType(e, t) {
    let i = B[e];
    let r = i.worldImg;
    this.gunBarrel.texture = G.from(r.sprite);
    this.gunBarrel.anchor.set(0.5, 1);
    this.gunBarrel.position.set(0, 0);
    this.gunBarrel.scale.set(r.scale.x * 0.5 / t, r.scale.y * 0.5 / t);
    this.gunBarrel.tint = r.tint;
    this.gunBarrel.visible = true;
    if (r.magImg) {
      let l = r.magImg;
      this.gunMag.texture = G.from(l.sprite);
      this.gunMag.anchor.set(0.5, 0.5);
      this.gunMag.position.set(l.pos.x / t, l.pos.y / t);
      this.gunMag.scale.set(0.25 / t, 0.25 / t);
      this.gunMag.tint = 16777215;
      this.gunMag.visible = true;
      if (l.top) {
        this.container.addChild(this.gunMag);
      } else {
        this.container.addChildAt(this.gunMag, 0);
      }
    } else {
      this.gunMag.visible = false;
    }
    this.magTop = r.magImg?.top;
    let a = i.isDual ? n.create(-5.95, 0) : n.create(-4.25, -1.75);
    if (r.gunOffset) {
      a.x += r.gunOffset.x;
      a.y += r.gunOffset.y;
    }
    this.container.position.set(a.x, a.y);
  }
}
class us {
  __id;
  __type;
  active;
  bodySprite = se();
  chestSprite = se();
  flakSprite = se();
  steelskinSprite = se();
  helmetSprite = se();
  visorSprite = se();
  backpackSprite = se();
  handLSprite = se();
  handRSprite = se();
  footLSprite = se();
  footRSprite = se();
  hipSprite = se();
  gunLSprites = new pi();
  gunRSprites = new pi();
  objectLSprite = se();
  objectRSprite = se();
  meleeSprite = se();
  bodySubmergeSprite = se();
  handLSubmergeSprite = se();
  handRSubmergeSprite = se();
  footLSubmergeSprite = se();
  footRSubmergeSprite = se();
  bodyEffectSprite = se();
  patchSprite = se();
  handLContainer = new Y();
  handRContainer = new Y();
  footLContainer = new Y();
  footRContainer = new Y();
  bodyContainer = new Y();
  container = new Y();
  nameText = ns();
  auraContainer = new Y();
  auraCircle = se();
  bones = [];
  anim = {
    type: ne.None,
    data: {},
    seq: -1,
    ticker: 0,
    bones: []
  };
  perks = [];
  perkTypes = [];
  perksDirty = false;
  surface = null;
  wasInWater = false;
  weapTypeOld = "";
  visualsDirty = false;
  stepDistance = 0;
  zoomFast = false;
  playedDryFire = false;
  lastSwapIdx = -1;
  hasteSeq = -1;
  cycleSoundInstance = null;
  actionSoundInstance = null;
  useItemEmitter = null;
  hasteEmitter = null;
  passiveHealEmitter = null;
  downed = false;
  wasDowned = false;
  bleedTicker = 0;
  submersion = 0;
  gunRecoilL = 0;
  gunRecoilR = 0;
  fireDelay = 0;
  throwableState = "equip";
  lastThrowablePickupSfxTicker = 0;
  isNearDoorError = false;
  doorErrorTicker = 0;
  noCeilingRevealTicker = 0;
  frozenTicker = 0;
  updateFrozenImage = true;
  viewAabb = {
    min: n.create(0, 0),
    max: n.create(0, 0)
  };
  auraViewFade = 0;
  auraPulseTicker = 0;
  auraPulseDir = 1;
  renderLayer = 0;
  renderZOrd = 18;
  renderZIdx = 0;
  KXvZTW;
  iDmhea;
  alkER;
  throwableStatePrev;
  LnvK = R.player.radius;
  lpy;
  aznZwb = n.create(0, 0);
  RzFRjI = n.create(0, 0);
  WoDzy = n.create(1, 0);
  PibIr = n.create(1, 0);
  Hxqi = n.create(0, 0);
  DBiHo = n.create(0, 0);
  VliTq = n.create(0, 0);
  ZYJh = n.create(0, 0);
  posInterpTicker = 0;
  dirInterpolationTicker = 0;
  layer = 0;
  isLoadoutAvatar = false;
  playActionStartSfx = true;
  isNew;
  wasInsideObstacle;
  insideObstacleType;
  lastInsideObstacleTime;
  dead;
  gunSwitchCooldown;
  letructor() {
    this.bodySprite.addChild(this.bodySubmergeSprite);
    this.handLSprite.addChild(this.handLSubmergeSprite);
    this.handRSprite.addChild(this.handRSubmergeSprite);
    this.footLSprite.addChild(this.footLSubmergeSprite);
    this.footRSprite.addChild(this.footRSubmergeSprite);
    this.handLContainer.addChild(this.gunLSprites.container);
    this.handLContainer.addChild(this.handLSprite);
    this.handLContainer.addChild(this.objectLSprite);
    this.handRContainer.addChild(this.gunRSprites.container);
    this.handRContainer.addChild(this.meleeSprite);
    this.handRContainer.addChild(this.handRSprite);
    this.handRContainer.addChild(this.objectRSprite);
    this.footLContainer.addChild(this.footLSprite);
    this.footRContainer.addChild(this.footRSprite);
    this.bodyContainer.addChild(this.footLContainer);
    this.bodyContainer.addChild(this.footRContainer);
    this.bodyContainer.addChild(this.backpackSprite);
    this.bodyContainer.addChild(this.bodySprite);
    this.bodyContainer.addChild(this.chestSprite);
    this.bodyContainer.addChild(this.flakSprite);
    this.bodyContainer.addChild(this.steelskinSprite);
    this.bodyContainer.addChild(this.hipSprite);
    this.bodyContainer.addChild(this.patchSprite);
    this.bodyContainer.addChild(this.bodyEffectSprite);
    this.bodyContainer.addChild(this.handLContainer);
    this.bodyContainer.addChild(this.handRContainer);
    this.bodyContainer.addChild(this.visorSprite);
    this.bodyContainer.addChild(this.helmetSprite);
    this.container.addChild(this.bodyContainer);
    this.container.addChild(this.nameText);
    this.auraContainer.addChild(this.auraCircle);
    this.initSubmergeSprites();
    let e = Object.keys(Pe).length;
    for (let t = 0; t < e; t++) {
      this.bones.push(new I());
      this.anim.bones.push({
        weight: 0,
        pose: new I()
      });
    }
    this.throwableStatePrev = this.throwableState;
    this.lpy = this.LnvK;
    this.Hxqi = n.create(0, 0);
    this.DBiHo = n.create(0, 0);
    this.VliTq = n.create(0, 0);
    this.ZYJh = n.create(0, 0);
    this.posInterpTicker = 0;
    this.dirInterpolationTicker = 0;
  }
  drlpl() {
    this.isNew = false;
    this.wasInsideObstacle = false;
    this.insideObstacleType = "";
    this.lastInsideObstacleTime = 0;
    this.lastSwapIdx = -1;
    this.hasteSeq = -1;
    this.actionSoundInstance = null;
    this.KXvZTW = {
      type: ie.None,
      seq: -1,
      seqOld: -1,
      item: "",
      skin: "",
      targetId: 0,
      time: 0,
      duration: 0,
      throttleCount: 0,
      throttleTicker: 0
    };
    this.iDmhea = {
      aznZwb: n.create(0, 0),
      WoDzy: n.create(1, 0),
      EqeAzY: "",
      QvFXYQ: "",
      ODVGwj: "",
      psCic: "",
      uhf: "fists",
      Rpch: 0,
      XRQji: false,
      ZFRZY: false,
      TGFxs: ne.None,
      gnExr: 0,
      PLet: ie.None,
      UZy: 0,
      nVe: false,
      PpCYT: false,
      joaNG: false,
      GJz: 0,
      jDoL: Oe.None,
      suDV: 0,
      YYKW: "",
      jwSSb: 1,
      paYnn: "",
      GVf: []
    };
    this.alkER = {
      vSiCK: R.player.health,
      HyIw: 0,
      iIN: 0,
      oupk: "",
      rgEC: 0,
      xSjUw: {},
      iomTK: [],
      roTo: 0
    };
    this.playAnim(ne.None, -1);
  }
  HJMxT() {
    this.container.visible = false;
    this.auraContainer.visible = false;
    if (this.useItemEmitter) {
      this.useItemEmitter.stop();
      this.useItemEmitter = null;
    }
    if (this.hasteEmitter) {
      this.hasteEmitter.stop();
      this.hasteEmitter = null;
    }
    if (this.passiveHealEmitter) {
      this.passiveHealEmitter.stop();
      this.passiveHealEmitter = null;
    }
  }
  lNjqwJ(e, t, i, r) {
    if (!n.eq(e.pos, this.DBiHo)) {
      this.DBiHo = n.copy(i ? e.pos : this.aznZwb);
      this.posInterpTicker = 0;
    }
    if (!n.eq(e.dir, this.ZYJh)) {
      this.ZYJh = n.copy(i ? e.dir : this.WoDzy);
      this.dirInterpolationTicker = 0;
    }
    this.iDmhea.aznZwb = n.copy(e.pos);
    this.iDmhea.WoDzy = n.copy(e.dir);
    if (t) {
      this.iDmhea.EqeAzY = e.outfit;
      this.iDmhea.QvFXYQ = e.backpack;
      this.iDmhea.ODVGwj = e.helmet;
      this.iDmhea.psCic = e.chest;
      this.iDmhea.uhf = e.activeWeapon;
      this.iDmhea.Rpch = e.layer;
      this.iDmhea.XRQji = e.dead;
      this.iDmhea.ZFRZY = e.downed;
      this.iDmhea.TGFxs = e.animType;
      this.iDmhea.gnExr = e.animSeq;
      this.iDmhea.PLet = e.actionType;
      this.iDmhea.UZy = e.actionSeq;
      this.iDmhea.nVe = e.wearingPan;
      this.iDmhea.PpCYT = e.healEffect;
      this.iDmhea.joaNG = e.frozen;
      this.iDmhea.GJz = e.frozenOri;
      this.iDmhea.jDoL = e.hasteType;
      this.iDmhea.suDV = e.hasteSeq;
      this.iDmhea.YYKW = e.actionItem;
      this.iDmhea.jwSSb = e.scale;
      this.iDmhea.paYnn = e.role;
      if (i || !ms(this.iDmhea.GVf, e.perks)) {
        this.perksDirty = true;
      }
      this.iDmhea.GVf = e.perks;
      if (e.animSeq != this.anim.seq) {
        this.playAnim(e.animType, e.animSeq);
      }
      this.KXvZTW.type = e.actionType;
      this.KXvZTW.seq = e.actionSeq;
      this.KXvZTW.item = e.actionItem;
      this.visualsDirty = true;
    }
    if (i) {
      this.isNew = true;
      this.renderLayer = this.iDmhea.Rpch;
      this.renderZOrd = 18;
      this.renderZIdx = this.__id;
    }
  }
  wWgxC(e, t) {
    let i = this.alkER.oupk;
    if (e.healthDirty) {
      this.alkER.vSiCK = e.health;
    }
    if (e.boostDirty) {
      this.alkER.iIN = e.boost;
    }
    if (e.zoomDirty) {
      this.alkER.HyIw = e.zoom;
      this.zoomFast = false;
    }
    if (e.actionDirty) {
      this.KXvZTW.time = e.action.time;
      this.KXvZTW.duration = e.action.duration;
      this.KXvZTW.targetId = e.action.targetId;
    }
    if (e.inventoryDirty) {
      this.alkER.oupk = e.scope;
      this.alkER.xSjUw = {};
      for (let r in R.bagSizes) {
        if (R.bagSizes.hasOwnProperty(r)) {
          this.alkER.xSjUw[r] = e.inventory[r];
        }
      }
    }
    if (e.weapsDirty) {
      this.alkER.rgEC = e.curWeapIdx;
      this.alkER.iomTK = [];
      for (let r = 0; r < R.WeaponSlot.Count; r++) {
        let a = {
          type: e.weapons[r].type,
          ammo: e.weapons[r].ammo
        };
        this.alkER.iomTK.push(a);
      }
    }
    if (e.spectatorCountDirty) {
      this.alkER.roTo = e.spectatorCount;
    }
    if (this.alkER.oupk != i) {
      this.zoomFast = true;
    }
  }
  kEZUyv() {
    let e = this.alkER.HyIw;
    if (v.mobile) {
      let t = hs.indexOf(e);
      if (t !== -1) {
        e = cs[t];
      }
    }
    return e;
  }
  imQkUx() {
    if (this.iDmhea.ODVGwj) {
      return B[this.iDmhea.ODVGwj].level;
    } else {
      return 0;
    }
  }
  Fte() {
    if (this.iDmhea.psCic) {
      return B[this.iDmhea.psCic].level;
    } else {
      return 0;
    }
  }
  zNli() {
    return B[this.iDmhea.QvFXYQ].level;
  }
  oenro() {
    return B[this.iDmhea.uhf].type;
  }
  eBb(e) {
    return this.alkER.iomTK[e].type !== "";
  }
  getMeleeCollider() {
    let e = B[this.iDmhea.uhf];
    let t = Math.atan2(this.WoDzy.y, this.WoDzy.x);
    let i = n.add(e.attack.offset, n.mul(n.create(1, 0), this.iDmhea.jwSSb - 1));
    let r = n.add(this.aznZwb, n.rotate(i, t));
    let a = e.attack.rad;
    return X.createCircle(r, a, 0);
  }
  yjoLx() {
    return this.iDmhea.nVe || this.iDmhea.uhf == "pan" && this.currentAnim() != ne.Melee;
  }
  RLnsnZ() {
    let e = this.iDmhea.nVe ? "unequipped" : "equipped";
    return B.pan.reflectSurface?.[e];
  }
  canInteract(e) {
    return !this.iDmhea.XRQji && (!e.perkMode || this.iDmhea.paYnn);
  }
  lCBJrJ(e, t, i) {
    for (let r = 0; r < this.perks.length; r++) {
      this.perks[r].isNew = false;
    }
    if (this.perksDirty) {
      if (e && !t) {
        for (let a = 0; a < this.iDmhea.GVf.length; a++) {
          let l = this.iDmhea.GVf[a];
          if (this.perks.findIndex(s => s.type == l.type) === -1) {
            i.addRareLootMessage(l.type);
          }
        }
        for (let a = 0; a < this.perks.length; a++) {
          let l = this.perks[a];
          if (this.iDmhea.GVf.findIndex(s => s.type == l.type) === -1) {
            i.removeRareLootMessage(l.type);
          }
        }
      }
      let r = [];
      for (let a = 0; a < this.iDmhea.GVf.length; a++) {
        let l = this.iDmhea.GVf[a];
        let s = this.perks.findIndex(m => m.type == l.type) === -1;
        r.push({
          type: l.type,
          droppable: l.droppable,
          isNew: s && !this.isNew
        });
      }
      this.perks = r;
      this.perkTypes = [];
      for (let a = 0; a < this.iDmhea.GVf.length; a++) {
        this.perkTypes.push(this.iDmhea.GVf[a].type);
      }
      this.perksDirty = false;
    }
  }
  EAO(e) {
    return this.perkTypes.includes(e);
  }
  PEHQLt(e, t, i, r, a, l, s, m, d, h, p, w, f) {
    let S = B[this.iDmhea.uhf];
    let x = this.__id == h;
    let y = t.getPlayerById(h);
    this.RzFRjI = n.copy(this.aznZwb);
    this.PibIr = n.copy(this.WoDzy);
    this.aznZwb = n.copy(this.iDmhea.aznZwb);
    this.WoDzy = n.copy(this.iDmhea.WoDzy);
    this.layer = this.iDmhea.Rpch;
    this.downed = this.iDmhea.ZFRZY;
    this.LnvK = this.iDmhea.jwSSb * R.player.radius;
    if (s.rTq) {
      this.posInterpTicker += e;
      let O = z.clamp(this.posInterpTicker / s.UUHe, 0, 1);
      this.Hxqi = n.lerp(O, this.DBiHo, this.aznZwb);
      this.dirInterpolationTicker += e;
      let N = z.clamp(this.dirInterpolationTicker / s.UUHe, 0, 1);
      this.VliTq = n.lerp(N, this.ZYJh, this.WoDzy);
    } else {
      this.Hxqi = n.copy(this.aznZwb);
      this.VliTq = n.copy(this.WoDzy);
    }
    if (!z.eqAbs(this.LnvK, this.lpy)) {
      let O = this.LnvK - this.lpy;
      let N = Math.abs(O) > 0.0001 ? O * e * 6 : O;
      if (this.isNew) {
        N = O;
      }
      this.lpy += N;
      this.visualsDirty = true;
    }
    if (x) {
      let O = s.iCWER(n.create(s.LCRnPO, 0));
      let N = n.sub(O, s.aznZwb);
      this.viewAabb.min = n.sub(s.aznZwb, N);
      this.viewAabb.max = n.add(s.aznZwb, N);
    }
    this.lCBJrJ(x, f, d);
    let C = this.weapTypeOld != this.iDmhea.uhf;
    this.weapTypeOld = this.iDmhea.uhf;
    this.lastThrowablePickupSfxTicker -= e;
    this.noCeilingRevealTicker -= e;
    let P = t.getPlayerInfo(h).groupId;
    let k = t.getPlayerInfo(this.__id);
    let b = k.groupId == P;
    this.nameText.text = k.name;
    this.nameText.visible = !x && b;
    let M = null;
    let E = null;
    let D = i.fBXVaI.idcTHu();
    for (let O = 0; O < D.length; O++) {
      let N = D[O];
      if (N.active && !N.dead && N.layer == this.iDmhea.Rpch) {
        if (N.isBush) {
          let U = this.LnvK * 0.25;
          if (X.intersectCircle(N.collider, this.aznZwb, U)) {
            M = N;
          }
        } else if (N.isDoor) {
          let U = this.LnvK + 0.25;
          let te = n.sub(N.pos, this.aznZwb);
          let ae = n.rotate(n.create(1, 0), N.rot);
          if (X.intersectCircle(N.collider, this.aznZwb, U) && (N.door.locked || N.door.openOneWay && n.dot(te, ae) < 0)) {
            E = N;
          }
        }
      }
    }
    let L = M != null;
    if (L) {
      this.insideObstacleType = M?.type;
    }
    this.lastInsideObstacleTime -= e;
    if (this.wasInsideObstacle != L && this.lastInsideObstacleTime < 0 && !this.isNew) {
      let O = re[this.insideObstacleType];
      this.lastInsideObstacleTime = 0.2;
      r.playSound(O?.sound.enter, {
        channel: "sfx",
        soundPos: this.aznZwb,
        fallOff: 1,
        layer: this.layer,
        filter: "muffled"
      });
      let N = n.normalizeSafe(n.sub(this.RzFRjI, this.aznZwb), n.create(1, 0));
      let U = L ? 1 : -1;
      let te = Math.floor(g.random(3, 5));
      for (let ae = 0; ae < te; ae++) {
        let ge = n.mul(n.rotate(n.mul(N, U), (Math.random() - 0.5) * Math.PI / 1.5), g.random(6, 8));
        a.addParticle(O.hitParticle, this.layer, this.aznZwb, ge);
      }
    }
    this.wasInsideObstacle = L;
    let _ = this.isNearDoorError;
    this.isNearDoorError = E != null;
    this.doorErrorTicker -= e;
    if (this.isNearDoorError && !_ && this.doorErrorTicker <= 0) {
      this.doorErrorTicker = 0.5;
      let N = re[E?.type].door?.sound.error;
      r.playSound(N, {
        channel: "sfx",
        soundPos: this.aznZwb,
        fallOff: 1,
        layer: this.layer,
        filter: "muffled"
      });
    }
    this.surface = i.getGroundSurface(this.aznZwb, this.layer);
    let T = this.surface.type == "water";
    this.updateSubmersion(e, i);
    this.updateFrozenState(e);
    if (!this.iDmhea.XRQji) {
      this.stepDistance += n.length(n.sub(this.RzFRjI, this.aznZwb));
      if (this.stepDistance > 5 && T || T && !this.wasInWater) {
        this.stepDistance = 0;
        a.addRippleParticle(this.aznZwb, this.layer, this.surface?.data.rippleColor);
        r.playGroup("footstep_water", {
          soundPos: this.aznZwb,
          fallOff: 3,
          layer: this.layer,
          filter: "muffled"
        });
      } else if (this.stepDistance > 4 && !T) {
        this.stepDistance = 0;
        r.playGroup(`footstep_${this.surface.type}`, {
          soundPos: this.aznZwb,
          fallOff: 3,
          layer: this.layer,
          filter: "muffled"
        });
      }
      this.wasInWater = T;
    }
    this.bleedTicker -= e;
    if (!this.iDmhea.XRQji && (this.iDmhea.ZFRZY && this.KXvZTW.type == ie.None || this.EAO("trick_drain")) && this.bleedTicker < 0) {
      this.bleedTicker = this.EAO("trick_drain") ? R.player.bleedTickRate * 3 : R.player.bleedTickRate;
      let O = n.rotate(n.mul(this.WoDzy, -1), (Math.random() - 0.5) * Math.PI / 3);
      O.y *= -1;
      if (!window.CrazyGames) {
        a.addParticle("bloodSplat", this.renderLayer, n.create(0, 0), n.mul(O, s.HrSNF), 1, Math.random() * Math.PI * 2, this.container, this.renderZOrd + 1);
      }
      if (!w) {
        r.playSound("player_bullet_hit_02", {
          channel: "hits",
          soundPos: this.aznZwb,
          fallOff: 3,
          layer: this.layer,
          filter: "muffled"
        });
      }
    }
    this.gunSwitchCooldown -= e;
    this.fireDelay -= e;
    if (x && (C || this.lastSwapIdx != this.alkER.rgEC)) {
      let O = this.lastSwapIdx;
      this.lastSwapIdx = this.alkER.rgEC;
      let N = B[this.iDmhea.uhf];
      if (N.type == "melee" || N.type == "throwable") {
        if (N.type != "throwable" || this.lastThrowablePickupSfxTicker <= 0) {
          let U = this.isLoadoutAvatar ? s.aznZwb : this.aznZwb;
          r.playSound(N.sound.deploy, {
            channel: "sfx",
            soundPos: U,
            fallOff: 3
          });
        }
      } else if (N.type == "gun") {
        let U = "gun_switch_01";
        let te = false;
        if ((O == 0 || O == 1) && (this.lastSwapIdx == 0 || this.lastSwapIdx == 1) && this.fireDelay > 0) {
          let ae = B[this.alkER.iomTK[O].type];
          if (N && ae && N.deployGroup !== undefined && ae.deployGroup !== undefined && N.deployGroup == ae.deployGroup) {
            te = true;
          }
        }
        if (this.gunSwitchCooldown > 0 || te) {
          U = N.sound.deploy;
        } else {
          this.gunSwitchCooldown = R.player.freeSwitchCooldown;
        }
        r.stopSound(this.cycleSoundInstance);
        this.cycleSoundInstance = r.playSound(U, {
          channel: "activePlayer"
        });
        this.fireDelay = 0;
      }
    }
    if (!r.isSoundPlaying(this.cycleSoundInstance)) {
      this.cycleSoundInstance = null;
    }
    if (this.KXvZTW.seq != this.KXvZTW.seqOld && !this.isNew) {
      let O = true;
      if (!x && this.KXvZTW.type != ie.None) {
        this.KXvZTW.throttleTicker = 0.5;
        if (this.KXvZTW.throttleCount < 5) {
          this.KXvZTW.throttleCount++;
        } else {
          O = false;
        }
      }
      if (O) {
        this.playActionStartEffect(x, a, r);
      }
    }
    this.KXvZTW.seqOld = this.KXvZTW.seq;
    this.updateActionEffect(x, k, a, r);
    this.KXvZTW.throttleTicker -= e;
    if (this.KXvZTW.throttleTicker < 0 && this.KXvZTW.throttleCount > 0) {
      this.KXvZTW.throttleCount--;
      this.KXvZTW.throttleTicker = 0.25;
    }
    if (this.iDmhea.jDoL && this.iDmhea.suDV != this.hasteSeq) {
      let N = {
        [Oe.None]: {
          particle: "",
          sound: ""
        },
        [Oe.Windwalk]: {
          particle: "windwalk",
          sound: "ability_stim_01"
        },
        [Oe.Takedown]: {
          particle: "takedown",
          sound: "ability_stim_01"
        },
        [Oe.Inspire]: {
          particle: "inspire",
          sound: "ability_stim_01"
        }
      }[this.iDmhea.jDoL];
      if (!this.isNew) {
        r.playSound(N.sound, {
          channel: "sfx",
          soundPos: this.aznZwb,
          fallOff: 1,
          layer: this.layer,
          filter: "muffled"
        });
      }
      this.hasteEmitter?.stop();
      this.hasteEmitter = a.addEmitter(N.particle, {
        pos: this.aznZwb,
        layer: this.layer
      });
      this.hasteSeq = this.iDmhea.suDV;
    } else if (!this.iDmhea.jDoL && this.hasteEmitter) {
      this.hasteEmitter.stop();
      this.hasteEmitter = null;
    }
    if (this.hasteEmitter) {
      this.hasteEmitter.pos = n.add(this.aznZwb, n.create(0, 0.1));
      this.hasteEmitter.layer = this.renderLayer;
      this.hasteEmitter.zOrd = this.renderZOrd + 1;
    }
    if (this.iDmhea.PpCYT && !this.passiveHealEmitter) {
      this.passiveHealEmitter = a.addEmitter("heal_basic", {
        pos: this.aznZwb,
        layer: this.layer
      });
    } else if (!this.iDmhea.PpCYT && this.passiveHealEmitter) {
      this.passiveHealEmitter.stop();
      this.passiveHealEmitter = null;
    }
    if (this.passiveHealEmitter) {
      this.passiveHealEmitter.pos = n.add(this.aznZwb, n.create(0, 0.1));
      this.passiveHealEmitter.layer = this.renderLayer;
      this.passiveHealEmitter.zOrd = this.renderZOrd + 1;
    }
    if (x && !f) {
      let O = this.alkER.rgEC;
      let N = this.alkER.iomTK[O];
      let U = B[N.type];
      if (!this.playedDryFire && this.oenro() == "gun" && (l.isBindPressed(A.Fire) || l.isBindDown(A.Fire) && U.fireMode == "auto") && this.KXvZTW.type == ie.None && !p && !U.ammoInfinite) {
        let te = this.alkER.xSjUw[U.ammo] || 0;
        let ae = N.ammo;
        if (te == 0 && ae == 0) {
          r.playSound(U.sound.empty);
          this.playedDryFire = true;
        }
      }
      if (!l.isBindDown(A.Fire)) {
        this.playedDryFire = false;
      }
    }
    this.gunRecoilL = z.max(0, this.gunRecoilL - this.gunRecoilL * e * 5 - e);
    this.gunRecoilR = z.max(0, this.gunRecoilR - this.gunRecoilR * e * 5 - e);
    let V = {
      playerBarn: t,
      map: i,
      audioManager: r,
      particleBarn: a
    };
    this.updateAnim(e, V);
    if (this.currentAnim() == ne.None) {
      this.throwableState = "equip";
    }
    if ((this.currentAnim() == ne.Cook || this.currentAnim() == ne.Throw) && S.type != "throwable") {
      this.playAnim(ne.None, this.anim.seq);
    }
    let j = this.selectIdlePose();
    let q = ui[j];
    for (let O = 0; O < this.bones.length; O++) {
      let N = q[O] || I.identity;
      let U = this.anim.bones[O];
      if (U.weight > 0) {
        this.bones[O].copy(I.lerp(U.weight, N, U.pose));
      } else {
        this.bones[O].copy(N);
      }
    }
    if (this.throwableStatePrev != this.throwableState) {
      this.visualsDirty = true;
    }
    this.throwableStatePrev = this.throwableState;
    if (this.visualsDirty) {
      this.updateVisuals(t, i);
    }
    this.visualsDirty = false;
    this.updateAura(e, x, y);
    this.Zr();
    this.updateRenderLayer(x, y, i);
    m.addPIXIObj(this.auraContainer, this.renderLayer, this.renderZOrd - 1, this.renderZIdx);
    let Z = y.layer & 2 || (y.layer & 1) == 1 || (this.layer & 1) == 0;
    this.auraContainer.visible = !this.iDmhea.XRQji && !!Z;
    m.addPIXIObj(this.container, this.renderLayer, this.renderZOrd, this.renderZIdx);
    this.isNew = false;
  }
  render(e, t) {
    let i = e.JDbtXa(this.Hxqi);
    let r = e.Jjwns(1);
    this.container.position.set(i.x, i.y);
    this.container.scale.set(r, r);
    this.container.visible = !this.iDmhea.XRQji;
    this.auraContainer.position.set(i.x, i.y);
    this.auraContainer.scale.set(r, r);
    if (v.debug && t.players) {
      me.addCircle(this.aznZwb, this.LnvK, 16711680, 0);
      let a = B[this.iDmhea.uhf];
      if (a.type === "gun") {
        me.addRay(this.aznZwb, this.WoDzy, a.barrelLength, 16711680, 0);
      }
    }
  }
  updateRenderLayer(e, t, i) {
    let r = X.createCircle(this.aznZwb, R.player.maxVisualRadius);
    let a = false;
    let l = false;
    let s = false;
    let m = i.OYF.idcTHu();
    for (let w = 0; w < m.length; w++) {
      let f = m[w];
      if (f.active) {
        for (let S = 0; S < f.stairs.length; S++) {
          let x = f.stairs[S];
          let y = X.intersect(x.collision, r);
          if (y) {
            l = true;
            let C = n.add(x.center, n.mul(x.downDir, -2.5));
            let P = n.sub(C, this.aznZwb);
            let k = n.length(P);
            P = k > 0.0001 ? n.div(P, k) : n.create(1, 0);
            s = it.intersectSegmentDist(i.fBXVaI.idcTHu(), this.aznZwb, P, k, 0.5, this.layer, false) < k;
          }
          if (e && x.noCeilingReveal && y && this.layer != 0) {
            this.noCeilingRevealTicker = 0.25;
          }
        }
        for (let S = 0; S < f.mask.length; S++) {
          if (X.intersect(f.mask[S], r)) {
            a = true;
            break;
          }
        }
      }
    }
    let d = this.layer;
    let h = 18;
    if (l && (d & 1 && (t.layer & 1 || !s) || t.layer & 2 && !a)) {
      d |= 2;
    }
    if (l && (d & 1) == (t.layer & 1) && (!a || t.layer == 0)) {
      d |= 2;
      h += 100;
    }
    let p = this.__id + (this.iDmhea.ZFRZY ? 0 : 262144) + (e ? 65536 : 0) + (this.LnvK > 1 ? 131072 : 0);
    this.renderLayer = d;
    this.renderZOrd = h;
    this.renderZIdx = p;
  }
  updateVisuals(e, t) {
    let i = B[this.iDmhea.EqeAzY];
    let r = i.skinImg;
    let a = this.lpy / R.player.radius;
    this.bodySprite.texture = G.from(r.baseSprite);
    this.bodySprite.tint = i.ghillie ? t.getMapDef().biome.colors.playerGhillie : r.baseTint;
    this.bodySprite.scale.set(0.25, 0.25);
    this.bodySprite.visible = true;
    if (this.iDmhea.joaNG && this.updateFrozenImage) {
      let p = t.getMapDef().biome.frozenSprites || [];
      if (p.length > 0) {
        let w = p[Math.floor(Math.random() * p.length)];
        let f = z.oriToRad(this.iDmhea.GJz) + Math.PI * 0.5 + (Math.random() - 0.5) * Math.PI * 0.25;
        this.bodyEffectSprite.texture = G.from(w);
        this.bodyEffectSprite.rotation = f;
        this.bodyEffectSprite.tint = 16777215;
        this.bodyEffectSprite.scale.set(0.25, 0.25);
      }
      this.updateFrozenImage = false;
    }
    if (t.factionMode && !i.ghillie) {
      let w = e.getPlayerInfo(this.__id).teamId;
      let f = ["player-patch-01.img", "player-patch-02.img"];
      let S = (w - 1) % f.length;
      let x = f[S];
      let y = R.teamColors[S];
      let C = z.oriToRad(3) + Math.PI * 0.5;
      this.patchSprite.texture = G.from(x);
      this.patchSprite.rotation = C;
      this.patchSprite.tint = y;
      this.patchSprite.scale.set(0.25, 0.25);
      this.patchSprite.visible = true;
    } else {
      this.patchSprite.visible = false;
    }
    let l = function (p, w, f) {
      p.texture = G.from(w);
      p.scale.set(0.175, 0.175);
      p.tint = f;
      p.visible = true;
    };
    let s = i.ghillie ? t.getMapDef().biome.colors.playerGhillie : r.handTint;
    l(this.handLSprite, r.handSprite, s);
    l(this.handRSprite, r.handSprite, s);
    let m = function (p, w, f) {
      p.texture = G.from("player-feet-01.img");
      p.scale.set(0.45, 0.45);
      p.rotation = Math.PI * 0.5;
      p.tint = w;
      p.visible = f;
    };
    let d = i.ghillie ? t.getMapDef().biome.colors.playerGhillie : r.footTint;
    m(this.footLSprite, d, this.downed);
    m(this.footRSprite, d, this.downed);
    if (this.EAO("flak_jacket") && !i.ghillie) {
      this.flakSprite.texture = G.from("player-armor-base-01.img");
      this.flakSprite.scale.set(0.215, 0.215);
      this.flakSprite.tint = 3671558;
      this.flakSprite.alpha = 0.7;
      this.flakSprite.visible = true;
    } else {
      this.flakSprite.visible = false;
    }
    if (this.iDmhea.psCic == "" || i.ghillie) {
      this.chestSprite.visible = false;
    } else {
      let w = B[this.iDmhea.psCic].skinImg;
      this.chestSprite.texture = G.from(w.baseSprite);
      this.chestSprite.scale.set(0.25, 0.25);
      this.chestSprite.tint = w.baseTint;
      this.chestSprite.visible = true;
    }
    if (this.EAO("steelskin") && !i.ghillie) {
      this.steelskinSprite.texture = G.from("loot-melee-pan-black.img");
      this.steelskinSprite.scale.set(0.4, 0.4);
      this.steelskinSprite.anchor.set(0.575, 0.5);
      this.steelskinSprite.tint = 16777215;
      this.steelskinSprite.visible = true;
    } else {
      this.steelskinSprite.visible = false;
    }
    if (this.iDmhea.ODVGwj == "" || i.ghillie) {
      this.helmetSprite.visible = false;
    } else {
      let w = B[this.iDmhea.ODVGwj].skinImg;
      let f = (this.downed ? 1 : -1) * 3.33;
      this.helmetSprite.texture = G.from(w.baseSprite);
      this.helmetSprite.position.set(f, 0);
      if (w.spriteScale) {
        this.helmetSprite.scale.set(w.spriteScale, w.spriteScale);
      } else {
        this.helmetSprite.scale.set(0.15, 0.15);
      }
      let S = w.baseTint;
      if (t.factionMode) {
        S = e.getPlayerInfo(this.__id).teamId == 1 ? w.baseTintRed : w.baseTintBlue;
      }
      this.helmetSprite.tint = S;
      this.helmetSprite.visible = true;
    }
    if (this.zNli() > 0 && !i.ghillie && !this.downed) {
      let p = [10.25, 11.5, 12.75];
      let w = this.zNli();
      let f = p[z.min(w - 1, p.length - 1)];
      let S = (0.4 + w * 0.03) * 0.5;
      this.backpackSprite.texture = G.from("player-circle-base-01.img");
      this.backpackSprite.position.set(-f, 0);
      this.backpackSprite.scale.set(S, S);
      this.backpackSprite.tint = r.backpackTint;
      this.backpackSprite.visible = true;
      (function (x, y, C) {
        x.texture = G.from(y);
        x.tint = C;
      })(this.backpackSprite, r.backpackSprite, r.backpackTint);
    } else {
      this.backpackSprite.visible = false;
    }
    if (this.iDmhea.nVe) {
      let p = B.pan.hipImg;
      this.hipSprite.texture = G.from(p.sprite);
      this.hipSprite.position.set(p.pos.x, p.pos.y);
      this.hipSprite.scale.set(p.scale.x, p.scale.y);
      this.hipSprite.rotation = p.rot;
      this.hipSprite.tint = p.tint;
      this.hipSprite.visible = true;
    } else {
      this.hipSprite.visible = false;
    }
    let h = B[this.iDmhea.uhf];
    if (h.type == "gun") {
      this.gunRSprites.setType(this.iDmhea.uhf, a);
      this.gunRSprites.setVisible(true);
      if (h.isDual) {
        this.gunLSprites.setType(this.iDmhea.uhf, a);
        this.gunLSprites.setVisible(true);
      } else {
        this.gunLSprites.setVisible(false);
      }
      let p = this.bodyContainer.getChildIndex(this.handRContainer);
      let w = this.bodyContainer.getChildIndex(this.handRContainer);
      let f = p + 1;
      if (this.gunRSprites.magTop || h.worldImg.handsBelow) {
        f = p - 1;
      }
      f = z.max(f, 0);
      if (w != f) {
        this.bodyContainer.addChildAt(this.handLContainer, f);
      }
      let S = this.handRContainer.getChildIndex(this.gunRSprites.container);
      let x = h.worldImg.handsBelow ? this.handRContainer.children.length : 0;
      if (S != x) {
        this.handRContainer.addChildAt(this.gunRSprites.container, x);
      }
    } else {
      this.gunLSprites.setVisible(false);
      this.gunRSprites.setVisible(false);
    }
    if (this.downed != this.wasDowned) {
      this.wasDowned = this.downed;
      if (this.downed) {
        let p = this.bodyContainer.getChildIndex(this.footLContainer);
        this.bodyContainer.addChildAt(this.handLContainer, p);
        this.bodyContainer.addChildAt(this.handRContainer, p);
      } else {
        this.bodyContainer.addChild(this.handLContainer);
        this.bodyContainer.addChild(this.handRContainer);
      }
    }
    if (h.type == "melee" && this.iDmhea.uhf != "fists") {
      let p = h.worldImg;
      this.meleeSprite.texture = G.from(p.sprite);
      this.meleeSprite.pivot.set(-p.pos.x, -p.pos.y);
      this.meleeSprite.scale.set(p.scale.x / a, p.scale.y / a);
      this.meleeSprite.rotation = p.rot;
      this.meleeSprite.tint = p.tint;
      this.meleeSprite.visible = true;
      let w = this.handRContainer.getChildIndex(this.handRSprite);
      let f = z.max(p.renderOnHand ? w + 1 : w - 1, 0);
      if (this.handRContainer.getChildIndex(this.meleeSprite) != f) {
        this.handRContainer.addChildAt(this.meleeSprite, f);
      }
      let S = this.bodyContainer.getChildIndex(this.handRContainer);
      let x = z.max(p.leftHandOntop ? S + 1 : S - 1, 0);
      if (this.bodyContainer.getChildIndex(this.handLContainer) != x) {
        this.bodyContainer.addChildAt(this.handLContainer, x);
      }
    } else {
      this.meleeSprite.visible = false;
    }
    if (h.type == "throwable") {
      let p = function (f, S) {
        if (S.sprite && S.sprite != "none") {
          let x = S.sprite;
          if (t.mapDef.gameMode.spookyKillSounds) {
            x = er[x] || x;
          }
          f.texture = G.from(x);
          f.position.set(S.pos?.x, S.pos?.y);
          f.scale.set(S.scale, S.scale);
          f.rotation = Math.PI * 0.5;
          f.visible = true;
        } else {
          f.visible = false;
        }
      };
      let w = h.handImg?.[this.throwableState];
      p(this.objectLSprite, w.left);
      p(this.objectRSprite, w.right);
    } else {
      this.objectLSprite.visible = false;
      this.objectRSprite.visible = false;
    }
    if (this.downed || this.currentAnim() == ne.Revive) {
      this.gunLSprites.setVisible(false);
      this.gunRSprites.setVisible(false);
      this.meleeSprite.visible = false;
      this.objectLSprite.visible = false;
      this.objectRSprite.visible = false;
    }
    if (this.downed) {
      this.backpackSprite.visible = false;
    }
    if (this.KXvZTW.type != ie.UseItem && this.KXvZTW.type != ie.Revive || this.iDmhea.XRQji || this.iDmhea.ZFRZY && !this.EAO("self_revive") || !this.EAO("aoe_heal")) {
      this.auraPulseTicker = 0;
      this.auraPulseDir = 1;
      this.auraCircle.visible = false;
    } else {
      let p = B[this.KXvZTW.item];
      let w = p?.aura ? p.aura.sprite : "part-aura-circle-01.img";
      let f = p?.aura ? p.aura.tint : 16711935;
      let S = 0.125;
      let x = p ? R.player.medicHealRange : R.player.medicReviveRange;
      x *= S;
      this.auraCircle.texture = G.from(w);
      this.auraCircle.scale.set(x, x);
      this.auraCircle.tint = f;
      this.auraCircle.visible = true;
    }
    if (t.perkMode && this.iDmhea.paYnn != "" && this.iDmhea.ODVGwj != "" && !i.ghillie) {
      let w = B[this.iDmhea.paYnn].visorImg;
      if (w) {
        let f = (this.downed ? 1 : -1) * 3.33;
        this.visorSprite.texture = G.from(w.baseSprite);
        this.visorSprite.position.set(f, 0);
      }
      if (w.spriteScale) {
        this.visorSprite.scale.set(w.spriteScale, w.spriteScale);
      } else {
        this.visorSprite.scale.set(0.15, 0.15);
      }
      this.visorSprite.visible = true;
    } else {
      this.visorSprite.visible = false;
    }
    this.bodyContainer.scale.set(a, a);
  }
  updateAura(e, t, i) {
    let r = true;
    if (!t) {
      r = xe.testCircleAabb(this.aznZwb, this.LnvK, i.viewAabb.min, i.viewAabb.max);
    }
    this.auraViewFade = z.lerp(e * 6, this.auraViewFade, r ? 1 : 0);
    if (this.auraCircle.visible) {
      this.auraPulseTicker = z.clamp(this.auraPulseTicker + e * this.auraPulseDir * 1.5, 0, 1);
      let a = z.easeOutExpo(this.auraPulseTicker) * 0.75 + 0.25;
      if (this.auraPulseTicker >= 1 || this.auraPulseTicker <= 0) {
        this.auraPulseDir *= -1;
      }
      this.auraCircle.alpha = a * this.auraViewFade;
    }
  }
  Zr() {
    let e = function (i, r) {
      i.position.set(r.pos.x, r.pos.y);
      i.pivot.set(-r.pivot.x, -r.pivot.y);
      i.rotation = r.rot;
    };
    e(this.handLContainer, this.bones[Pe.HandL]);
    e(this.handRContainer, this.bones[Pe.HandR]);
    e(this.footLContainer, this.bones[Pe.FootL]);
    e(this.footRContainer, this.bones[Pe.FootR]);
    let t = B[this.iDmhea.uhf];
    if (!this.downed && this.currentAnim() != ne.Revive && t.type == "gun" && t.worldImg.leftHandOffset) {
      this.handLContainer.position.x += t.worldImg.leftHandOffset.x;
      this.handLContainer.position.y += t.worldImg.leftHandOffset.y;
    }
    this.handLContainer.position.x -= this.gunRecoilL * 1.125;
    this.handRContainer.position.x -= this.gunRecoilR * 1.125;
    this.bodyContainer.rotation = -Math.atan2(this.VliTq.y, this.VliTq.x);
  }
  playActionStartEffect(e, t, i) {
    let r = null;
    switch (this.KXvZTW.type) {
      case ie.Reload:
      case ie.ReloadAlt:
        {
          let a = B[this.KXvZTW.item];
          if (a) {
            r = {
              sound: this.KXvZTW.type == ie.ReloadAlt ? a.sound.reloadAlt : a.sound.reload,
              channel: e ? "activePlayer" : "otherPlayers"
            };
          }
        }
        break;
      case ie.UseItem:
        {
          let a = B[this.KXvZTW.item];
          if (a) {
            r = {
              sound: a.sound.use,
              channel: e ? "activePlayer" : "otherPlayers"
            };
          }
        }
    }
    i.stopSound(this.actionSoundInstance);
    if (r && this.playActionStartSfx) {
      this.actionSoundInstance = i.playSound(r.sound, {
        channel: r.channel,
        soundPos: this.aznZwb,
        fallOff: 2,
        layer: this.layer,
        filter: "muffled"
      });
    }
    if (this.KXvZTW.type == ie.Reload || this.KXvZTW.type == ie.ReloadAlt) {
      let a = B[this.KXvZTW.item];
      if (a && a.caseTiming == "reload") {
        for (let l = 0; l < a.maxReload; l++) {
          let s = l % 2 == 0 ? -1 : 1;
          let m = Math.PI + Math.PI / 4 * s;
          let d = a.maxReload <= 2 ? 1 : z.lerp(Math.random(), 0.8, 1.2);
          tr(this.KXvZTW.item, m, d, this.aznZwb, this.WoDzy, this.renderLayer, this.renderZOrd + 1, t);
        }
      }
    }
  }
  updateActionEffect(e, t, i, r) {
    let a = "";
    let l = {};
    switch (this.KXvZTW.type) {
      case ie.UseItem:
        {
          let s = B[this.KXvZTW.item];
          let m = t.loadout;
          if (s.type == "heal") {
            a = B[m.heal].emitter;
          } else if (s.type == "boost") {
            a = B[m.boost].emitter;
          }
          if (this.EAO("aoe_heal")) {
            l.scale = 1.5;
            l.radius = R.player.medicHealRange / l.scale;
            l.rateMult = 0.25;
          }
          break;
        }
      case ie.Revive:
        {
          if (this.iDmhea.ZFRZY) {
            a = "revive_basic";
          }
          break;
        }
    }
    if (a && (!this.useItemEmitter || this.useItemEmitter.type != a)) {
      this.useItemEmitter?.stop();
      l.pos = this.aznZwb;
      l.layer = this.layer;
      this.useItemEmitter = i.addEmitter(a, l);
    }
    if (this.useItemEmitter) {
      this.useItemEmitter.pos = n.add(this.aznZwb, n.create(0, 0.1));
      this.useItemEmitter.layer = this.renderLayer;
      this.useItemEmitter.zOrd = this.renderZOrd + 1;
    }
    if (this.useItemEmitter && !a) {
      this.useItemEmitter.stop();
      this.useItemEmitter = null;
    }
    if (!r.isSoundPlaying(this.actionSoundInstance)) {
      this.actionSoundInstance = null;
    }
    if (this.actionSoundInstance && !e) {
      r.updateSound(this.actionSoundInstance, "otherPlayers", this.aznZwb, {
        layer: this.layer,
        fallOff: 2,
        filter: "muffled"
      });
    }
  }
  playItemPickupSound(e, t) {
    let i = B[e];
    if (i) {
      t.playSound(i.sound?.pickup, {
        channel: "ui"
      });
      if (i.type == "throwable") {
        this.lastThrowablePickupSfxTicker = 0.3;
      }
    }
  }
  selectIdlePose() {
    let e = B[this.iDmhea.uhf];
    let t = "fists";
    if (this.downed) {
      t = "downed";
    } else if ("anim" in e && e.anim.idlePose) {
      t = e.anim.idlePose;
    } else if (e.type == "gun") {
      if (e.pistol) {
        t = e.isDual ? "dualPistol" : "pistol";
      } else if (e.isBullpup) {
        t = "bullpup";
      } else if (e.isLauncher) {
        t = "launcher";
      } else {
        t = e.isDual ? "dualRifle" : "rifle";
      }
    } else if (e.type == "throwable") {
      t = "throwable";
    } else {
      t = "fists";
    }
    if (ui[t]) {
      return t;
    } else {
      return "fists";
    }
  }
  selectAnim(e) {
    let t = function (i, r) {
      return {
        type: i,
        mirror: !!r && Math.random() < 0.5
      };
    };
    switch (e) {
      case ne.None:
        return t("none", false);
      case ne.Cook:
        return t("cook", false);
      case ne.Throw:
        return t("throw", false);
      case ne.Revive:
        return t("revive", false);
      case ne.CrawlForward:
        return t("crawl_forward", true);
      case ne.CrawlBackward:
        return t("crawl_backward", true);
      case ne.Melee:
        {
          let i = B[this.iDmhea.uhf];
          if (!i.anim?.attackAnims) {
            return t("fists", true);
          }
          let r = i.anim.attackAnims;
          let a = Math.floor(Math.random() * r.length);
          let l = r[a];
          return t(l, l == "fists" && r.length == 1);
        }
      default:
        return t("none", false);
    }
  }
  currentAnim() {
    return this.anim.type;
  }
  playAnim(e, t) {
    this.anim.type = e;
    this.anim.data = this.selectAnim(e);
    this.anim.seq = t;
    this.anim.ticker = 0;
    for (let i = 0; i < this.bones.length; i++) {
      let r = this.anim.bones[i];
      r.weight = 0;
      r.pose.copy(this.bones[i]);
    }
  }
  updateAnim(e, t) {
    if (this.anim.data.type == "none") {
      this.playAnim(ne.None, this.anim.seq);
    }
    if (this.currentAnim() != ne.None) {
      let i = this.anim.ticker;
      this.anim.ticker += e * 1;
      let r = rs[this.anim.data.type];
      let a = r.keyframes;
      let l = -1;
      let s = 0;
      while (this.anim.ticker >= a[s].time && s < a.length - 1) {
        l++;
        s++;
      }
      l = z.max(l, 0);
      let m = a[l].time;
      let d = a[s].time;
      let h = z.min((this.anim.ticker - m) / (d - m), 1);
      let p = a[l].bones;
      let w = a[s].bones;
      let f = this.anim.data.mirror;
      for (let y = 0; y < this.anim.bones.length; y++) {
        let C = this.anim.bones[y];
        let P = y;
        if (f) {
          P = y % 2 == 0 ? y + 1 : y - 1;
        }
        if (p[P] !== undefined && w[P] !== undefined) {
          C.weight = l == s ? h : 1;
          C.pose.copy(I.lerp(h, p[P], w[P]));
          if (f) {
            C.pose.pos.y *= -1;
            C.pose.pivot.y *= -1;
            C.pose.rot *= -1;
          }
        }
      }
      let S = s == a.length - 1 && z.eqAbs(h, 1);
      let x = this.anim.ticker;
      if (S) {
        x += 1;
      }
      for (let y = 0; y < r.effects.length; y++) {
        let C = r.effects[y];
        if (C.time >= i && C.time < x) {
          this[C.fn].apply(this, [t, C.args]);
        }
      }
      if (S) {
        this.playAnim(ne.None, this.anim.seq);
      }
    }
  }
  animPlaySound(e, t) {
    let r = B[this.iDmhea.uhf].sound[t.sound];
    if (r) {
      e.audioManager?.playSound(r, {
        channel: "sfx",
        soundPos: this.aznZwb,
        fallOff: 3,
        layer: this.layer,
        filter: "muffled"
      });
    }
  }
  animSetThrowableState(e, t) {
    this.throwableState = t.state;
  }
  animThrowableParticles(e, t) {
    if (B[this.iDmhea.uhf].useThrowParticles) {
      let i = n.rotate(n.create(0.75, 0.75), Math.atan2(this.WoDzy.y, this.WoDzy.x));
      e.particleBarn?.addParticle("fragPin", this.renderLayer, n.add(this.aznZwb, i), n.mul(n.rotate(this.WoDzy, Math.PI * 0.5), 4.5), 1, Math.random() * Math.PI * 2, null, this.renderZOrd + 1);
      let r = n.rotate(n.create(0.75, -0.75), Math.atan2(this.WoDzy.y, this.WoDzy.x));
      e.particleBarn?.addParticle("fragLever", this.renderLayer, n.add(this.aznZwb, r), n.mul(n.rotate(this.WoDzy, -Math.PI * 0.25), 3.5), 1, Math.random() * Math.PI * 2, null, this.renderZOrd + 1);
    }
  }
  animMeleeCollision(e, t) {
    let i = B[this.iDmhea.uhf];
    if (i && i.type == "melee") {
      let r = this.getMeleeCollider();
      let a = r.rad + n.length(n.sub(this.aznZwb, r.pos));
      let l = [];
      let s = e.map?.fBXVaI.idcTHu();
      for (let p = 0; p < s.length; p++) {
        let w = s[p];
        if (w.active && !w.dead && !w.isSkin && w.height >= R.player.meleeHeight && g.sameLayer(w.layer, this.layer & 1)) {
          let f = X.intersectCircle(w.collider, r.pos, r.rad);
          if (i.cleave || i.wallCheck) {
            let S = n.normalizeSafe(n.sub(w.pos, this.aznZwb), n.create(1, 0));
            let x = it.intersectSegment(e.map?.fBXVaI.idcTHu(), this.aznZwb, S, a, R.player.meleeHeight, this.layer, false);
            if (x && x.id !== w.__id) {
              f = null;
            }
          }
          if (f) {
            let S = re[w.type];
            let x = n.add(r.pos, n.mul(n.neg(f.dir), r.rad - f.pen));
            let y = n.rotate(n.mul(f.dir, 7.5), (Math.random() - 0.5) * Math.PI / 3);
            l.push({
              pen: f.pen,
              prio: 1,
              pos: x,
              vel: y,
              layer: this.renderLayer,
              zOrd: this.renderZOrd,
              particle: S.hitParticle,
              sound: S.sound.punch,
              soundFn: "playGroup"
            });
          }
        }
      }
      let m = e.playerBarn?.getPlayerInfo(this.__id).teamId;
      let d = e.playerBarn?.playerPool.idcTHu();
      for (let p = 0; p < d.length; p++) {
        let w = d[p];
        if (w.active && w.__id != this.__id && !w.iDmhea.XRQji && g.sameLayer(w.layer, this.layer)) {
          let f = n.normalizeSafe(n.sub(w.aznZwb, this.aznZwb), n.create(1, 0));
          let S = xe.intersectCircleCircle(r.pos, r.rad, w.aznZwb, w.LnvK);
          if (S && z.eqAbs(a, it.intersectSegmentDist(e.map?.fBXVaI.idcTHu(), this.aznZwb, f, a, R.player.meleeHeight, this.layer, false))) {
            let x = e.playerBarn?.getPlayerInfo(w.__id).teamId;
            let y = n.rotate(f, (Math.random() - 0.5) * Math.PI / 3);
            let C = i.sound[t.playerHit] || i.sound.playerHit;
            if (!window.CrazyGames) {
              l.push({
                pen: S.pen,
                prio: x == m ? 2 : 0,
                pos: n.copy(w.aznZwb),
                vel: y,
                layer: w.renderLayer,
                zOrd: w.renderZOrd,
                particle: "bloodSplat",
                sound: C,
                soundFn: "playSound"
              });
            }
          }
        }
      }
      l.sort((p, w) => p.prio == w.prio ? w.pen - p.pen : p.prio - w.prio);
      let h = l.length;
      if (!i.cleave) {
        h = z.min(h, 1);
      }
      for (let p = 0; p < h; p++) {
        let w = l[p];
        e.particleBarn?.addParticle(w.particle, w.layer, w.pos, w.vel, 1, Math.random() * Math.PI * 2, null, w.zOrd + 1);
        e.audioManager?.[w.soundFn](w.sound, {
          channel: "hits",
          soundPos: w.pos,
          layer: this.layer,
          filter: "muffled"
        });
      }
    }
  }
  initSubmergeSprites() {
    let e = function (i, r) {
      i.texture = G.from(r);
      i.anchor.set(0.5, 0.5);
      i.tint = 16777215;
      i.alpha = 0;
      i.visible = false;
    };
    e(this.bodySubmergeSprite, "player-wading-01.img");
    e(this.handLSubmergeSprite, "player-hands-01.img");
    e(this.handRSubmergeSprite, "player-hands-01.img");
    e(this.footLSubmergeSprite, "player-feet-01.img");
    e(this.footRSubmergeSprite, "player-feet-01.img");
    let t = new pe();
    t.beginFill(16711680, 0.5);
    t.drawCircle(0, 0, di * 76);
    t.position.set(0, 0);
    this.bodySubmergeSprite.addChild(t);
    this.bodySubmergeSprite.mask = t;
    this.bodySubmergeSprite.scale.set(0.5, 0.5);
  }
  updateSubmersion(e, t) {
    let i = this.surface?.type == "water";
    let r = 0;
    if (i) {
      let d = this.surface?.data.river;
      let h = d && !t.isInOcean(this.aznZwb);
      let p = h ? d.distanceToShore(this.aznZwb) : t.distanceToShore(this.aznZwb);
      let w = h ? 12 : 16;
      r = z.remap(p, 0, w, 0.6, 1);
    }
    this.submersion = z.lerp(e * 4, this.submersion, r);
    let a = this.submersion * 0.8;
    let l = (0.9 - this.submersion * 0.4) * 2;
    let s = 1 / (l * di);
    this.bodySubmergeSprite.scale.set(l, l);
    this.bodySubmergeSprite.mask.scale.set(s, s);
    this.bodySubmergeSprite.alpha = a;
    this.bodySubmergeSprite.visible = a > 0.001;
    if (i) {
      this.bodySubmergeSprite.tint = this.surface?.data.waterColor;
    }
    let m = [this.handLSubmergeSprite, this.handRSubmergeSprite, this.footLSubmergeSprite, this.footRSubmergeSprite];
    for (let d = 0; d < m.length; d++) {
      let h = m[d];
      h.alpha = this.downed ? a : 0;
      h.visible = h.alpha > 0.001;
      if (i) {
        h.tint = this.surface?.data.waterColor;
      }
    }
  }
  updateFrozenState(e) {
    if (this.iDmhea.joaNG) {
      this.frozenTicker = 0.25;
    } else {
      this.frozenTicker -= e;
      this.updateFrozenImage = true;
    }
    this.bodyEffectSprite.alpha = this.iDmhea.joaNG ? 1 : z.remap(this.frozenTicker, 0, 0.25, 0, 1);
    this.bodyEffectSprite.visible = this.frozenTicker > 0;
  }
  addRecoil(e, t, i) {
    if (t) {
      this.gunRecoilL += e;
    }
    if (i) {
      this.gunRecoilR += e;
    }
  }
  isUnderground(e) {
    if (this.layer != 1) {
      return false;
    }
    let t = e.OYF.idcTHu();
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r.layers.length >= 2) {
        let a = r.layers[1];
        if (X.intersectCircle(a.collision, this.aznZwb, this.LnvK)) {
          return a.underground;
        }
      }
    }
    return true;
  }
}
class ir {
  playerPool = new be(us);
  playerInfo = {};
  playerIds = [];
  teamInfo = {};
  groupInfo = {};
  playerStatus = {};
  anonPlayerNames = false;
  onMapLoad(e) {}
  PEHQLt(e, t, i, r, a, l, s, m, d, h, p, w, f) {
    let S = this.playerPool.idcTHu();
    for (let k = 0; k < S.length; k++) {
      let b = S[k];
      if (b.active) {
        b.PEHQLt(e, this, s, d, a, m, l, r, h, t, p, w, f);
      }
    }
    let x = this.getPlayerInfo(t);
    let y = this.getPlayerById(t);
    this.setPlayerStatus(t, {
      pos: n.copy(y.iDmhea.aznZwb),
      health: y.alkER.vSiCK,
      disconnected: false,
      dead: y.iDmhea.XRQji,
      downed: y.iDmhea.ZFRZY,
      role: y.iDmhea.paYnn,
      visible: true
    });
    let C = zr(s.factionMode);
    let P = Object.keys(this.playerStatus);
    for (let k = 0; k < P.length; k++) {
      let b = this.playerStatus[P[k]];
      let M = b.playerId;
      let E = this.getPlayerInfo(M);
      let D = this.getPlayerById(M);
      if (D) {
        b.posDelta = n.length(n.sub(D.iDmhea.aznZwb, b.pos));
        b.posTarget = n.copy(D.iDmhea.aznZwb);
        b.posInterp = z.clamp(b.posInterp + e * 0.2, e / C, 1);
        b.dead = D.iDmhea.XRQji;
        b.downed = D.iDmhea.ZFRZY;
      } else {
        b.posInterp = e / C;
      }
      let L = n.sub(b.posTarget, b.pos);
      let _ = n.length(L);
      let T = _ > 0.0001 ? n.div(L, _) : n.create(1, 0);
      let V = z.min(_, b.posDelta * b.posInterp);
      b.pos = n.add(b.pos, n.mul(T, V));
      b.timeSinceVisible += e;
      b.timeSinceUpdate += e;
      let j = !b.dead || E.teamId != x.teamId && b.role != "leader" ? 0 : 0.6;
      b.minimapAlpha = z.smoothstep(b.timeSinceVisible, 0, 0.1) * z.lerp(z.smoothstep(b.timeSinceUpdate, 2, 2.5), 1, j);
      if (!s.factionMode && E.teamId != x.teamId) {
        b.minimapAlpha = 0;
      }
      b.minimapVisible = b.minimapAlpha > 0.01;
    }
  }
  lXaw(e, t) {
    let i = this.playerPool.idcTHu();
    for (let r = 0; r < i.length; r++) {
      let a = i[r];
      if (a.active) {
        a.render(e, t);
      }
    }
  }
  getPlayerById(e) {
    let t = this.playerPool.idcTHu();
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r.active && r.__id === e) {
        return r;
      }
    }
    return null;
  }
  setPlayerInfo(e) {
    this.playerInfo[e.playerId] = {
      playerId: e.playerId,
      teamId: e.teamId,
      groupId: e.groupId,
      name: e.name,
      nameTruncated: $.truncateString(e.name || "", "bold 16px arial", 180),
      anonName: `Player${e.playerId - 2750}`,
      loadout: g.cloneDeep(e.loadout)
    };
    this.playerIds.push(e.playerId);
    this.playerIds.sort((t, i) => t - i);
  }
  deletePlayerInfo(e) {
    let t = this.playerIds.indexOf(e);
    if (t !== -1) {
      this.playerIds.splice(t, 1);
    }
    delete this.playerInfo[e];
    delete this.playerStatus[e];
  }
  getPlayerInfo(e) {
    return this.playerInfo[e] || {
      playerId: 0,
      group: 0,
      teamId: 0,
      name: "",
      nameTruncated: "",
      anonName: "",
      loadout: {}
    };
  }
  recomputeTeamData() {
    this.teamInfo = {};
    this.groupInfo = {};
    let e = Object.keys(this.playerInfo);
    for (let r = 0; r < e.length; r++) {
      let a = this.playerInfo[e[r]];
      let l = a.playerId;
      let s = a.teamId;
      this.teamInfo[s] = this.teamInfo[s] || {
        teamId: s,
        playerIds: []
      };
      this.teamInfo[s].playerIds.push(l);
      let m = a.groupId;
      this.groupInfo[m] = this.groupInfo[m] || {
        groupId: m,
        playerIds: []
      };
      this.groupInfo[m].playerIds.push(l);
    }
    let t = Object.keys(this.teamInfo);
    for (let r = 0; r < t.length; r++) {
      this.teamInfo[t[r]].playerIds.sort((a, l) => a - l);
    }
    let i = Object.keys(this.groupInfo);
    for (let r = 0; r < i.length; r++) {
      this.groupInfo[i[r]].playerIds.sort((a, l) => a - l);
    }
  }
  getTeamInfo(e) {
    return this.teamInfo[e];
  }
  getGroupInfo(e) {
    return this.groupInfo[e];
  }
  updatePlayerStatus(e, t, i) {
    let r = this.getTeamInfo(e);
    let a = i ? this.playerIds : r.playerIds;
    if (a.length != t.players.length) {
      console.error(`PlayerIds and playerStatus.players out of sync. OurLen: ${a.length} MsgLen: ${t.players.length} FactionMode: ${i}`);
      return;
    }
    for (let l = 0; l < a.length; l++) {
      let s = a[l];
      let m = t.players[l];
      if (m.hasData) {
        this.setPlayerStatus(s, m);
      }
    }
  }
  setPlayerStatus(e, t) {
    let i = this.playerStatus[e] || {
      playerId: e,
      pos: n.copy(t.pos),
      posTarget: n.copy(t.pos),
      posDelta: n.create(0, 0),
      health: 100,
      posInterp: 0,
      visible: false,
      dead: false,
      downed: false,
      disconnected: false,
      role: "",
      timeSinceUpdate: 0,
      timeSinceVisible: 0,
      minimapAlpha: 0,
      minimapVisible: false
    };
    if (!i.minimapVisible) {
      i.pos = n.copy(t.pos);
      if (!i.visible && t.visible) {
        i.timeSinceVisible = 0;
      }
    }
    i.visible = t.visible;
    if (i.visible) {
      i.timeSinceUpdate = 0;
    }
    i.posTarget = n.copy(t.pos);
    i.posDelta = n.length(n.sub(t.pos, i.pos));
    i.dead = t.dead;
    i.downed = t.downed;
    i.role = t.role;
    if (t.health !== undefined) {
      i.health = t.health;
    }
    if (t.disconnected !== undefined) {
      i.disconnected = t.disconnected;
    }
    this.playerStatus[e] = i;
  }
  getPlayerStatus(e) {
    return this.playerStatus[e];
  }
  updateGroupStatus(e, t) {
    let i = this.getGroupInfo(e);
    if (i.playerIds.length != t.players.length) {
      console.error("PlayerIds and groupStatus.players out of sync");
      return;
    }
    for (let r = 0; r < i.playerIds.length; r++) {
      let a = i.playerIds[r];
      let l = t.players[r];
      let s = this.getPlayerStatus(a);
      if (s) {
        s.health = l.health;
        s.disconnected = l.disconnected;
      }
    }
  }
  getGroupColor(e) {
    let t = this.getPlayerInfo(e);
    let i = this.getGroupInfo(t.groupId);
    let r = i ? i.playerIds.indexOf(e) : 0;
    if (r >= 0 && r < R.groupColors.length) {
      return R.groupColors[r];
    } else {
      return 16777215;
    }
  }
  getTeamColor(e) {
    let t = e - 1;
    if (t >= 0 && t < R.teamColors.length) {
      return R.teamColors[t];
    } else {
      return 16777215;
    }
  }
  getPlayerName(e, t, i) {
    let r = this.getPlayerInfo(e);
    if (!r) {
      return "";
    }
    let a = r.name;
    if (i) {
      a = r.nameTruncated;
    }
    if (this.anonPlayerNames && this.getPlayerInfo(t).groupId != r.groupId) {
      a = r.anonName;
    }
    return a;
  }
  addDeathEffect(e, t, i, r, a) {
    let l = this.getPlayerById(e);
    let s = this.getPlayerById(t);
    if (l && s?.EAO("turkey_shoot")) {
      r.playGroup("cluck", {
        soundPos: l.aznZwb,
        layer: l.layer,
        muffled: true
      });
      r.playSound("feather_01", {
        channel: "sfx",
        soundPos: l.aznZwb,
        layer: l.layer,
        muffled: true
      });
      let m = Math.floor(g.random(30, 35));
      for (let d = 0; d < m; d++) {
        let h = n.mul(n.randomUnit(), g.random(5, 15));
        a.addParticle("turkeyFeathersDeath", l.layer, l.aznZwb, h);
      }
    }
  }
}
class ds {
  __id;
  __type;
  active;
  YjhxEK;
  aznZwb;
  LnvK;
  Rpch;
  OFrX;
  drlpl() {}
  HJMxT() {
    this.YjhxEK.fadeOut();
    this.YjhxEK = null;
  }
  lNjqwJ(e, t, i, r) {
    this.aznZwb = n.copy(e.pos);
    this.LnvK = e.rad;
    if (t) {
      this.Rpch = e.layer;
      this.OFrX = e.interior;
    }
    if (i) {
      this.YjhxEK = r.smokeBarn.tLDqCB();
      this.YjhxEK?.drlpl(this.aznZwb, this.LnvK, this.Rpch, this.OFrX);
    }
    this.YjhxEK.posTarget = n.copy(this.aznZwb);
    this.YjhxEK.radTarget = this.LnvK;
  }
}
let fi = ["part-smoke-02.img", "part-smoke-03.img"];
class ps {
  active = false;
  zIdx = 0;
  sprite = ee.from(fi[Math.floor(Math.random() * fi.length)]);
  pos;
  posTarget;
  rad;
  radTarget;
  rot;
  rotVel;
  fade;
  fadeTicker;
  fadeDuration;
  tint;
  layer;
  interior;
  letructor() {
    this.sprite.anchor = new Et(0.5, 0.5);
    this.sprite.visible = false;
  }
  drlpl(e, t, i, r) {
    this.pos = n.copy(e);
    this.posTarget = n.copy(this.pos);
    this.rad = t;
    this.radTarget = this.rad;
    this.rot = g.random(0, Math.PI * 2);
    this.rotVel = Math.PI * g.random(0.25, 0.5) * (Math.random() < 0.5 ? -1 : 1);
    this.fade = false;
    this.fadeTicker = 0;
    this.fadeDuration = g.random(0.5, 0.75);
    this.tint = g.rgbToInt(g.hsvToRgb(0, 0, g.random(0.9, 0.95)));
    this.layer = i;
    this.interior = r;
  }
  fadeOut() {
    this.fade = true;
  }
}
class rr {
  fEtbJP = new be(ds);
  nWpH = [];
  zIdx = 2147483647;
  tLDqCB() {
    let e = null;
    for (let t = 0; t < this.nWpH.length; t++) {
      if (!this.nWpH[t].active) {
        e = this.nWpH[t];
        break;
      }
    }
    if (!e) {
      e = new ps();
      this.nWpH.push(e);
    }
    e.active = true;
    e.zIdx = this.zIdx--;
    return e;
  }
  PEHQLt(e, t, i, r, a) {
    for (let l = 0; l < this.nWpH.length; l++) {
      let s = this.nWpH[l];
      if (s.active) {
        s.rad = z.lerp(e * 3, s.rad, s.radTarget);
        s.pos = z.v2lerp(e * 3, s.pos, s.posTarget);
        s.rotVel *= 1 / (1 + e * 0.1);
        s.rot += s.rotVel * e;
        s.fadeTicker += s.fade ? e : 0;
        s.active = s.fadeTicker < s.fadeDuration;
        let m = z.clamp(1 - s.fadeTicker / s.fadeDuration, 0, 1) * 0.9;
        let d = s.layer;
        if ((g.sameLayer(s.layer, i.layer) || i.layer & 2) && (s.layer == 1 || !(i.layer & 2) || !r.insideStructureMask(X.createCircle(s.pos, 1)))) {
          d |= 2;
        }
        let h = s.interior ? 500 : 1000;
        a.addPIXIObj(s.sprite, d, h, s.zIdx);
        let p = t.JDbtXa(s.pos);
        let w = t.Jjwns(s.rad * 2 / t.HrSNF);
        s.sprite.position.set(p.x, p.y);
        s.sprite.scale.set(w, w);
        s.sprite.rotation = s.rot;
        s.sprite.tint = s.tint;
        s.sprite.alpha = m;
        s.sprite.visible = s.active;
      }
    }
  }
}
function wi(u, e, t) {
  let i = e - u;
  let r = i * t;
  if (Math.abs(r) < 0.01) {
    return i;
  } else {
    return r;
  }
}
function fs() {
  let u = new pe();
  u.position.set(0, 0);
  u.scale.set(1, 1);
  u.__zOrd = 0;
  u.__zIdx = 0;
  return u;
}
function gt(u, e, t, i, r) {
  u.moveTo(e, t);
  u.lineTo(e, t + r);
  u.lineTo(e + i, t + r);
  u.lineTo(e + i, t);
  u.lineTo(e, t);
  u.closePath();
}
class ar {
  letructor(e, t) {
    this.game = e;
    this.canvasMode = t;
    for (let i = 0; i < 4; i++) {
      this.layers.push(new ws(`layer_${i}`));
    }
    this.ground.alpha = 0;
  }
  zIdx = 0;
  layer = 0;
  layerAlpha = 0;
  groundAlpha = 0;
  underground = false;
  layers = [];
  ground = new pe();
  layerMask = fs();
  debugLayerMask = null;
  layerMaskDirty = true;
  layerMaskActive = false;
  HJMxT() {
    this.layerMask.parent?.removeChild(this.layerMask);
    this.layerMask.destroy(true);
  }
  addPIXIObj(e, t, i, r) {
    if (!e.transform) {
      let s = new Error();
      let m = JSON.stringify({
        type: "addChild",
        stack: s.stack,
        browser: navigator.userAgent,
        playing: this.game.DjCbXw,
        gameOver: this.game.men,
        spectating: this.game.kDxZ,
        time: this.game.zLmmQ,
        mode: this.game.teamMode,
        layer: t,
        zOrd: i,
        zIdx: r
      });
      console.error(m);
    }
    if (e.__layerIdx === undefined) {
      e.__layerIdx = -1;
      e.__zOrd = -1;
      e.__zIdx = -1;
    }
    let a = t;
    if (t & 2) {
      a = i >= 100 ? 3 : 2;
    }
    if (e.parent != this.layers[a] || e.__zOrd != i || r !== undefined && e.__zIdx != r) {
      e.__layerIdx = a;
      e.__zOrd = i;
      e.__zIdx = r !== undefined ? r : this.zIdx++;
      this.layers[a].addSortedChild(e);
    }
  }
  setActiveLayer(e) {
    this.layer = e;
  }
  setUnderground(e) {
    this.underground = e;
  }
  resize(e, t) {
    let i = e.mapLoaded ? e.getMapDef().biome.colors.underground : 1772803;
    this.ground.clear();
    this.ground.beginFill(i);
    this.ground.drawRect(0, 0, t.LCRnPO, t.gMqwV);
    this.ground.endFill();
    this.layerMaskDirty = true;
  }
  redrawLayerMask(e, t) {
    let i = this.layerMask;
    if (this.canvasMode) {
      i.clear();
      if (this.layerMaskActive) {
        i.beginFill(16777215, 1);
        i.drawRect(0, 0, e.LCRnPO, e.gMqwV);
        let r = t.OYF.idcTHu();
        for (let a = 0; a < r.length; a++) {
          let l = r[a];
          if (l.active) {
            for (let s = 0; s < l.mask.length; s++) {
              let m = l.mask[s];
              let d = n.mul(n.sub(m.max, m.min), 0.5);
              let h = n.add(m.min, d);
              let p = e.JDbtXa(n.sub(h, d));
              let w = e.JDbtXa(n.add(h, d));
              i.drawRect(p.x, p.y, w.x - p.x, w.y - p.y);
            }
          }
        }
        i.endFill();
      }
    } else {
      if (this.layerMaskDirty) {
        this.layerMaskDirty = false;
        i.clear();
        i.beginFill(16777215, 1);
        gt(i, 0, 0, 1024, 1024);
        let l = t.OYF.idcTHu();
        for (let s = 0; s < l.length; s++) {
          let m = l[s];
          if (m.active) {
            for (let d = 0; d < m.mask.length; d++) {
              let h = m.mask[d];
              let p = n.mul(n.sub(h.max, h.min), 0.5);
              let w = n.add(h.min, p);
              let f = w.x - p.x;
              let S = w.y - p.y;
              let x = p.x * 2;
              let y = p.y * 2;
              i.beginHole();
              gt(i, f, S, x, y);
              i.endHole();
            }
          }
        }
        i.endFill();
      }
      let r = e.JDbtXa(n.create(0, 0));
      let a = e.iDeS(1);
      i.position.set(r.x, r.y);
      i.scale.set(a, -a);
    }
  }
  redrawDebugLayerMask(e, t) {
    let i = this.debugLayerMask;
    i.clear();
    i.beginFill(16711935, 1);
    let r = t.OYF.idcTHu();
    for (let s = 0; s < r.length; s++) {
      let m = r[s];
      if (m.active) {
        for (let d = 0; d < m.mask.length; d++) {
          let h = m.mask[d];
          let p = n.mul(n.sub(h.max, h.min), 0.5);
          let w = n.add(h.min, p);
          let f = w.x - p.x;
          let S = w.y - p.y;
          let x = p.x * 2;
          let y = p.y * 2;
          gt(i, f, S, x, y);
        }
      }
    }
    i.endFill();
    let a = e.JDbtXa(n.create(0, 0));
    e.JDbtXa(n.create(1, 0));
    let l = e.iDeS(1);
    i.position.set(a.x, a.y);
    i.scale.set(l, -l);
  }
  PEHQLt(e, t, i, r) {
    let a = this.layer > 0 ? 1 : 0;
    this.layerAlpha += wi(this.layerAlpha, a, e * 12);
    let l = this.layer == 1 && this.underground ? 1 : 0;
    this.groundAlpha += wi(this.groundAlpha, l, e * 12);
    this.layers[0].alpha = 1;
    this.layers[1].alpha = this.layerAlpha;
    this.layers[2].alpha = 1;
    this.layers[3].alpha = 1;
    this.ground.alpha = this.groundAlpha;
    this.layers[0].visible = this.groundAlpha < 1;
    this.layers[1].visible = this.layerAlpha > 0;
    this.ground.visible = this.groundAlpha > 0;
    this.redrawLayerMask(t, i);
    let s = this.layer == 0;
    if (s && !this.layerMaskActive) {
      this.layers[2].mask = this.layerMask;
      this.layers[2].addChild(this.layerMask);
      this.layerMaskActive = true;
    } else if (!s && this.layerMaskActive) {
      this.layers[2].mask = null;
      this.layers[2].removeChild(this.layerMask);
      this.layerMaskActive = false;
    }
    for (let m = 0; m < this.layers.length; m++) {
      this.layers[m].checkSort();
    }
  }
}
class ws extends Y {
  letructor(e = "") {
    super();
    this.debugName = e;
  }
  dirty = true;
  addSortedChild(e) {
    this.addChild(e);
    this.dirty = true;
  }
  checkSort() {
    if (this.dirty) {
      this.children.sort((e, t) => e.__zOrd == t.__zOrd ? e.__zIdx - t.__zIdx : e.__zOrd - t.__zOrd);
      this.dirty = false;
      return true;
    } else {
      return false;
    }
  }
}
let Ye = 2;
let gi = 0.00001;
class gs {
  letructor(e, t) {
    this.input = e;
    this.config = t;
    let i = function (m, d) {
      let h = ee.from("pad.img");
      h.anchor.set(0.5, 0.5);
      h.scale.set(1, 1);
      h.alpha = 0.2;
      h.visible = false;
      h.tint = d;
      m.addChild(h);
      return h;
    };
    let r = () => ({
      touched: false,
      centerPos: n.create(0, 0),
      touchPos: n.create(0, 0),
      centerSprite: i(this.container, 0),
      touchSprite: i(this.container, 16777215)
    });
    this.touchPads = [r(), r()];
    let a = function (m) {
      if (["locked", "anywhere"].includes(m)) {
        return m;
      } else {
        return "anywhere";
      }
    };
    let l = a(t.get("touchMoveStyle"));
    let s = a(t.get("touchAimStyle"));
    this.setMoveStyle(l);
    this.setAimStyle(s);
    this.setTouchAimLine(!!t.get("touchAimLine"));
    this.init();
  }
  container = new Y();
  lineSprites = new Ss();
  padScaleBase = 1;
  padScaleDown = 0.6;
  padScalePos = 0.25;
  moveDetected = false;
  shotDetected = false;
  shotDetectedOld = false;
  touchingAim = false;
  display = true;
  moveStyle = "locked";
  aimStyle = "locked";
  touchAimLine = true;
  touchPads;
  playerMovement = {
    left: false,
    right: false,
    up: false,
    down: false,
    moveLen: 0
  };
  analogMovement = {
    toMoveDir: n.create(1, 0),
    toMoveLen: 0
  };
  aimMovement = {
    toAimDir: n.create(1, 0),
    toAimLen: 0
  };
  leftLockedPadCenter = n.create(0, 0);
  rightLockedPadCenter = n.create(0, 0);
  padPosBase = 48;
  padPosRange = 0;
  movePadDetectMult = 1;
  shotPadDetectMult = 1.075;
  turnDirCooldown = 0.5;
  turnDirTicker = 0;
  mobileOffsetLandscape = 25;
  mobileOffsetPortrait = 100;
  lockedPadOffsetLandscape = n.create(126, 100);
  lockedPadOffsetPortrait = n.create(96, 160);
  lockedPadOffsetYLandscapeSafari = 120;
  lockedPadOffsetYPortraitSafari = 240;
  getTouchMovement(e) {
    return this.getMovement(e);
  }
  getAimMovement(e, t) {
    let i = e.alkER.rgEC == R.WeaponSlot.Throwable;
    return this.getAim(i, t);
  }
  setAimDir(e) {
    this.aimMovement.toAimDir = n.copy(e);
  }
  getMovement(e) {
    let t = null;
    let i = null;
    let r = false;
    let a;
    this.moveDetected = false;
    for (let s = 0; s < this.input.touches.length; s++) {
      let m = this.input.touches[s];
      if (!m.isDead && this.isLeftSideTouch(m.posDown.x, e)) {
        let d = this.moveStyle == "anywhere" ? m.posDown : this.leftLockedPadCenter;
        let h = n.sub(m.pos, d);
        let p = n.length(h);
        if (p > Ye) {
          let w = (p - Ye) / (this.padPosRange / this.movePadDetectMult - Ye);
          a = w > gi ? n.div(h, w) : this.analogMovement.toMoveDir;
          this.analogMovement = {
            toMoveDir: n.create(a.x, a.y * -1),
            toMoveLen: w
          };
          this.moveDetected = true;
        }
        i = this.getletrainedPos(d, m.pos, p);
        t = d;
        r = true;
        break;
      }
    }
    let l = this.touchPads[0];
    l.touched = r;
    if (r && this.moveStyle == "anywhere") {
      l.centerPos = n.copy(t);
    } else {
      l.centerPos = n.copy(this.leftLockedPadCenter);
    }
    l.touchPos.x = r ? i.x : this.leftLockedPadCenter.x;
    l.touchPos.y = r ? i.y : this.leftLockedPadCenter.y;
    return this.analogMovement;
  }
  getAim(e, t) {
    let i = false;
    let r = null;
    let a = null;
    let l;
    for (let m = 0; m < this.input.touches.length; m++) {
      let d = this.input.touches[m];
      if (!d.isDead && !this.isLeftSideTouch(d.posDown.x, t)) {
        let h = this.aimStyle == "anywhere" ? d.posDown : this.rightLockedPadCenter;
        let p = n.sub(d.pos, h);
        let w = n.length(p);
        if (w > Ye) {
          let f = n.sub(d.pos, h);
          let S = n.length(f);
          l = S > gi ? n.div(f, S) : this.aimMovement.toAimDir;
          this.aimMovement = {
            toAimDir: n.create(l.x, l.y * -1),
            toAimLen: S
          };
        } else {
          this.aimMovement.toAimLen = 0;
        }
        a = this.getletrainedPos(h, d.pos, w);
        r = h;
        i = true;
        break;
      }
    }
    this.shotDetectedOld = this.shotDetected;
    this.shotDetected = this.aimMovement.toAimLen > this.padPosRange / this.shotPadDetectMult && i;
    this.touchingAim = i;
    if (e && this.shotDetectedOld && i) {
      this.shotDetected = true;
    }
    let s = this.touchPads[1];
    s.touched = i;
    if (i && this.aimStyle == "anywhere") {
      s.centerPos = n.copy(r);
    } else {
      s.centerPos = n.copy(this.rightLockedPadCenter);
    }
    s.touchPos.x = i ? a.x : this.rightLockedPadCenter.x;
    s.touchPos.y = i ? a.y : this.rightLockedPadCenter.y;
    return {
      aimMovement: this.aimMovement,
      touched: s.touched
    };
  }
  PEHQLt(e, t, i, r, a) {
    for (let l = 0; l < this.touchPads.length; l++) {
      let s = this.touchPads[l];
      s.centerSprite.position.x = s.centerPos.x;
      s.centerSprite.position.y = s.centerPos.y;
      s.centerSprite.scale.x = this.padScaleBase * this.padScaleDown;
      s.centerSprite.scale.y = this.padScaleBase * this.padScaleDown;
      s.centerSprite.visible = v.touch && this.display;
      s.touchSprite.position.x = s.touchPos.x;
      s.touchSprite.position.y = s.touchPos.y;
      s.touchSprite.scale.x = this.padScaleBase * this.padScalePos;
      s.touchSprite.scale.y = this.padScaleBase * this.padScalePos;
      s.touchSprite.visible = v.touch && this.display;
    }
    this.lineSprites.update(this, t, i, r, a);
  }
  isLeftSideTouch(e, t) {
    return e < t.LCRnPO * 0.5;
  }
  getletrainedPos(e, t, i) {
    if (i <= this.padPosRange) {
      return t;
    }
    let r = t.x - e.x;
    let a = t.y - e.y;
    let l = Math.atan2(a, r);
    return n.create(Math.cos(l) * this.padPosRange + e.x, Math.sin(l) * this.padPosRange + e.y);
  }
  getletrainedPosDown(e, t, i) {
    let r = n.normalizeSafe(t);
    return n.add(e, n.mul(r, Math.max(0, i - this.padPosRange)));
  }
  toggleMoveStyle() {
    this.setMoveStyle(this.moveStyle == "locked" ? "anywhere" : "locked");
  }
  setMoveStyle(e) {
    this.moveStyle = e;
    this.config.set("touchMoveStyle", e);
    let t = document.getElementById("btn-game-move-style");
    if (t) {
      if (this.moveStyle == "locked") {
        t.classList.remove("unlocked-on-icon");
        t.classList.add("locked-on-icon");
      } else {
        t.classList.remove("locked-on-icon");
        t.classList.add("unlocked-on-icon");
      }
    }
  }
  toggleAimStyle() {
    this.setAimStyle(this.aimStyle == "locked" ? "anywhere" : "locked");
  }
  setAimStyle(e) {
    this.aimStyle = e;
    this.config.set("touchAimStyle", e);
    let t = document.getElementById("btn-game-aim-style");
    if (this.aimStyle == "locked") {
      t.classList.remove("unlocked-on-icon");
      t.classList.add("locked-on-icon");
    } else {
      t.classList.remove("locked-on-icon");
      t.classList.add("unlocked-on-icon");
    }
  }
  toggleAimLine() {
    this.setTouchAimLine(!this.touchAimLine);
  }
  setTouchAimLine(e) {
    this.touchAimLine = e;
    this.config.set("touchAimLine", this.touchAimLine);
    let t = document.getElementById("btn-game-aim-line");
    if (this.touchAimLine) {
      t.classList.remove("aim-line-off-icon");
      t.classList.add("aim-line-on-icon");
    } else {
      t.classList.remove("aim-line-on-icon");
      t.classList.add("aim-line-off-icon");
    }
  }
  init() {
    this.resize();
  }
  resize() {
    let e = v.isLandscape;
    let t = this.lockedPadOffsetLandscape;
    let i = this.lockedPadOffsetPortrait;
    if (v.tablet) {
      t.x = t.x * 1;
      i.x = i.x * 1.25;
    }
    let r = n.create(t.x, t.y);
    let a = n.create(i.x, i.y);
    let l = n.create(v.screenWidth - t.x, t.y);
    let s = n.create(v.screenWidth - i.x, i.y);
    if (v.os == "ios") {
      if (v.model == "iphonex") {
        r.x = r.x + 56;
        l.x = l.x - 56;
        r.y = r.y * 0.9;
        l.y = l.y * 0.9;
      } else {
        let h = this.lockedPadOffsetYLandscapeSafari;
        let p = this.lockedPadOffsetYPortraitSafari;
        if (v.tablet) {
          h *= 1;
          p *= 1;
        }
        r.y = h;
        a.y = p;
        l.y = h;
        s.y = p;
      }
    }
    this.padScaleBase = e ? 1 : 0.8;
    this.padPosRange = this.padPosBase * this.padScaleBase;
    let m = e ? r : a;
    this.leftLockedPadCenter = n.create(m.x, v.screenHeight - m.y);
    let d = e ? l : s;
    this.rightLockedPadCenter = n.create(d.x, v.screenHeight - d.y);
    this.setMobileStyling(e);
  }
  setMobileStyling(e) {
    if (v.touch) {
      c("#btn-touch-styles").find(".btn-game-container").css("display", "inline-block");
      c("#ui-emote-button").css("display", "block");
    }
    if (v.uiLayout == v.UiLayout.Sm) {
      c("#ui-map-wrapper").addClass("ui-map-wrapper-mobile").removeClass("ui-map-wrapper-desktop");
      c("#ui-settings-container-mobile").css("display", "block");
      c("#ui-settings-container-desktop").css("display", "none");
      c("#ui-right-center").addClass("ui-right-center-mobile").removeClass("ui-right-center-desktop");
      c("#ui-leaderboard-wrapper").css("display", "none");
      c("#big-map-close").css("display", "block");
      c("#ui-game-menu").removeClass("ui-game-menu-desktop");
      c("#btn-game-tabs").css("display", "none");
      c("#ui-game-tab-settings").removeClass("ui-game-tab-settings-desktop");
      c(".ui-ability-key").css("display", "none");
    } else {
      c("#ui-map-wrapper").removeClass("ui-map-wrapper-mobile").addClass("ui-map-wrapper-desktop");
      c("#ui-settings-container-mobile").css("display", "none");
      c("#ui-settings-container-desktop").css("display", "block");
      c("#ui-right-center").removeClass("ui-right-center-mobile").addClass("ui-right-center-desktop");
      c("#ui-leaderboard-wrapper").css("display", "block");
      c("#big-map-close").css("display", "none");
      c("#ui-game-menu").addClass("ui-game-menu-desktop");
      c("#btn-game-tabs").css("display", "flex");
      c("#ui-game-tab-settings").addClass("ui-game-tab-settings-desktop");
      c(".ui-ability-key").css("display", "block");
    }
    if (v.tablet) {
      if (e) {
        if (v.os == "ios") {
          c("#ui-bottom-right").addClass("ui-bottom-right-tablet-ipad-browser");
          c("#ui-right-center").addClass("ui-right-center-tablet-ipad-browser");
        } else {
          c("#ui-bottom-right").addClass("ui-bottom-right-tablet");
          c("#ui-right-center").addClass("ui-right-center-tablet");
        }
        c("#ui-bottom-center-left").addClass("ui-bottom-center-left-tablet");
        c("#ui-bottom-center-right").addClass("ui-bottom-center-right-tablet");
        c("#ui-top-left").addClass("ui-top-left-tablet");
        c("#ui-spectate-options-wrapper").addClass("ui-spectate-options-wrapper-tablet");
        c("#ui-killfeed-wrapper").addClass("ui-killfeed-wrapper-tablet");
        c("#ui-kill-leader-wrapper").css("right", 144);
      } else {
        c("#ui-bottom-left").removeClass("ui-bottom-left-tablet");
        c("#ui-bottom-right").removeClass("ui-bottom-right-tablet");
        c("#ui-right-center").removeClass("ui-right-center-tablet");
        c("#ui-bottom-center-right").removeClass("ui-bottom-center-right-tablet");
        c("#ui-top-left").removeClass("ui-top-left-tablet");
        c("#ui-spectate-options-wrapper").removeClass("ui-spectate-options-wrapper-tablet");
        c("#ui-killfeed-wrapper-wrapper").removeClass("ui-killfeed-wrapper-tablet");
      }
    }
    if (v.os == "ios") {
      if (v.model == "iphonex") {
        let t = v.isLandscape ? "99%" : "90%";
        let i = v.isLandscape ? 0 : 32;
        c("#ui-game").css({
          height: t,
          top: i
        });
        c("#ui-stats-contents").css({
          transform: "translate(-50%) scale(0.95)",
          "transform-origin": "top"
        });
        if (e) {
          c("#ui-game").css({
            left: "50%",
            transform: "translateX(-50%)",
            width: "93%"
          });
        } else {
          c("#ui-game").css({
            left: "",
            transform: "",
            width: ""
          });
        }
      } else if (window.navigator.standalone && !v.tablet) {
        c("#ui-game").css({
          height: "95%"
        });
      } else {
        let t = v.isLandscape ? "86%" : "82%";
        if (v.tablet) {
          t = "100%";
        }
        c("#ui-game").css({
          height: t
        });
        c("#ui-right-center, #ui-top-center-scopes-wrapper, #ui-top-center, #ui-menu-display").css({
          "margin-top": 6
        });
      }
    }
    if (v.tablet || e) {
      c("#ui-loot-50AE").insertBefore("#ui-loot-556mm");
      c("#ui-loot-9mm").insertBefore("#ui-loot-556mm");
      c("#ui-loot-308sub").insertBefore("#ui-loot-556mm");
      c("#ui-loot-12gauge").insertBefore("#ui-loot-556mm");
      c("#ui-loot-flare").insertBefore("#ui-loot-556mm");
      c("#ui-loot-762mm").insertBefore("#ui-loot-556mm");
      c("#ui-loot-45acp").insertBefore("#ui-loot-556mm");
    } else {
      c("#ui-loot-9mm").insertBefore("#ui-loot-45acp");
      c("#ui-loot-12gauge").insertBefore("#ui-loot-45acp");
      c("#ui-loot-762mm").insertBefore("#ui-loot-45acp");
      c("#ui-loot-556mm").insertBefore("#ui-loot-45acp");
      c("#ui-loot-50AE").insertBefore("#ui-loot-45acp");
      c("#ui-loot-308sub").insertBefore("#ui-loot-45acp");
      c("#ui-loot-flare").insertBefore("#ui-loot-45acp");
    }
  }
  hideAll() {
    this.display = false;
  }
}
class Ss {
  container = new Y();
  dots = [];
  letructor() {
    this.container.visible = false;
  }
  createDot() {
    let e = new ee();
    e.texture = G.from("dot.img");
    e.anchor.set(0.5, 0.5);
    e.position.set(0, 0);
    e.scale.set(1, 1);
    e.tint = 16777215;
    e.alpha = 1;
    e.visible = false;
    return e;
  }
  update(e, t, i, r, a) {
    let l = v.touch && e.touchingAim && e.touchAimLine;
    if (l) {
      let s = t.iDmhea.uhf;
      let m = B[s];
      let d = 30;
      if (m.type == "gun") {
        let E = nt[m.bulletType].distance;
        d = m.barrelLength + E;
      }
      let h = t.kEZUyv();
      let p = Math.sqrt(h * 1.414 * h);
      d = z.min(d, p);
      let w = n.copy(t.aznZwb);
      let f = n.add(w, n.mul(t.WoDzy, d));
      let S = i.fBXVaI.idcTHu();
      for (let E = 0; E < S.length; E++) {
        let D = S[E];
        if (D.active && !D.dead && D.height >= R.bullet.height && D.collidable && !D.isWindow && g.sameLayer(t.layer, D.layer) && (m.type != "throwable" || D.height > R.projectile.maxHeight)) {
          let L = X.intersectSegment(D.collider, w, f);
          if (L) {
            let _ = n.length(n.sub(L.point, w));
            if (_ < d) {
              d = _;
              f = L.point;
            }
          }
        }
      }
      let x = 3.5;
      let y = 1.5;
      let C = n.length(n.sub(f, w));
      let P = Math.max(Math.ceil((C - x) / y), 0);
      while (this.dots.length < P) {
        let E = this.createDot();
        this.container.addChild(E);
        this.dots.push(E);
      }
      for (let E = 0; E < this.dots.length; E++) {
        let D = this.dots[E];
        let L = x + E * y;
        let _ = n.add(t.aznZwb, n.mul(t.WoDzy, L));
        let T = 1 / 32 * 0.375;
        D.position.set(_.x, _.y);
        D.scale.set(T, T);
        D.visible = E < P;
      }
      let k = r.JDbtXa(n.create(0, 0));
      let b = r.JDbtXa(n.create(1, 1));
      let M = n.sub(b, k);
      this.container.position.set(k.x, k.y);
      this.container.scale.set(M.x, M.y);
      this.container.alpha = 0.3;
      a.addPIXIObj(this.container, t.layer, 19, 0);
    }
    this.container.visible = l;
  }
}
class ys {
  letructor(e) {
    this.mapSpriteBarn = e;
  }
  mapIndicators = [];
  idToMapIdicator = {};
  updateIndicatorData(e) {
    for (let t = 0; t < e.length; t++) {
      let i = e[t];
      if (i.dead) {
        this.removeIndicator(i.id);
      } else {
        this.updateIndicator(i);
      }
    }
  }
  addIndicator(e) {
    let t = {
      id: e.id,
      type: e.type,
      pos: n.copy(e.pos),
      equipped: e.equipped,
      mapSprite: this.mapSpriteBarn.addSprite(),
      pulseSprite: this.mapSpriteBarn.addSprite(),
      pulseScale: 0.5,
      pulseScaleMin: 0.5,
      pulseScaleMax: 1,
      pulseTicker: 0,
      pulseDir: 1,
      pulseSpeed: 0.3
    };
    this.mapIndicators.push(t);
    this.idToMapIdicator[e.id] = t;
    return t;
  }
  removeIndicator(e) {
    for (let t = 0; t < this.mapIndicators.length; t++) {
      let i = this.mapIndicators[t];
      if (i.id == e) {
        i.mapSprite.free();
        i.pulseSprite.free();
        this.mapIndicators.splice(t, 1);
        delete this.idToMapIdicator[e];
        break;
      }
    }
  }
  updateIndicator(e) {
    let t = this.idToMapIdicator[e.id];
    t ||= this.addIndicator(e);
    t.pos = n.copy(e.pos);
    t.equipped = e.equipped;
    let i = B[t.type];
    let r = (v.uiLayout == v.UiLayout.Sm ? 0.15 : 0.2) * 1.25;
    let a = t.equipped ? 655350 : 1;
    let l = t.mapSprite;
    l.pos = n.copy(t.pos);
    l.scale = r;
    l.alpha = 1;
    l.zOrder = a;
    l.visible = true;
    l.sprite.texture = G.from(i.mapIndicator?.sprite);
    l.sprite.tint = i.mapIndicator?.tint ?? 16777215;
    if (i.mapIndicator?.pulse) {
      let s = t.pulseSprite;
      s.pos = n.copy(t.pos);
      s.scale = 1;
      s.zOrder = a - 1;
      s.visible = true;
      s.sprite.texture = G.from("part-pulse-01.img");
      s.sprite.tint = i.mapIndicator.pulseTint;
    }
  }
  updateIndicatorPulses(e) {
    for (let t = 0; t < this.mapIndicators.length; t++) {
      let i = this.mapIndicators[t];
      i.pulseTicker = z.clamp(i.pulseTicker + e * i.pulseDir * i.pulseSpeed, i.pulseScaleMin, 1);
      i.pulseScale = i.pulseTicker * i.pulseScaleMax;
      if (i.pulseScale >= i.pulseScaleMax || i.pulseTicker <= i.pulseScaleMin) {
        i.pulseDir *= -1;
      }
      i.pulseSprite.scale = i.pulseScale;
      i.pulseSprite.visible = i.equipped;
    }
  }
}
class xs extends ee {
  __zOrder = -1;
  letructor() {
    super();
  }
}
class zs {
  active = false;
  retained = true;
  sprite = new xs();
  pos = n.create(0, 0);
  scale = 1;
  alpha = 1;
  visible = true;
  pulse = false;
  lifetime = 0;
  ticker = 0;
  zOrder = 0;
  letructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(1, 1);
    this.sprite.visible = false;
  }
  init() {
    this.active = true;
    this.retained = true;
    this.pos = n.create(0, 0);
    this.scale = 1;
    this.alpha = 1;
    this.pulse = false;
    this.visible = true;
    this.lifetime = Number.MAX_VALUE;
    this.ticker = 0;
    this.zOrder = 0;
  }
  free() {
    this.active = false;
    this.sprite.visible = false;
  }
  release() {
    this.retained = false;
  }
}
class bs {
  container = new Y();
  mapSprites = [];
  free() {
    for (let e = 0; e < this.mapSprites.length; e++) {
      let t = this.mapSprites[e].sprite;
      t.parent?.removeChild(t);
      t.destroy({
        children: true
      });
    }
  }
  addSprite() {
    let e = null;
    for (let t = 0; t < this.mapSprites.length; t++) {
      if (!this.mapSprites[t].active) {
        e = this.mapSprites[t];
        break;
      }
    }
    if (!e) {
      e = new zs();
      this.mapSprites.push(e);
      this.container.addChild(e.sprite);
    }
    e.init();
    return e;
  }
  update(e, t, i) {
    let r = false;
    for (let a = 0; a < this.mapSprites.length; a++) {
      let l = this.mapSprites[a];
      if (l.active) {
        if (l.zOrder != l.sprite.__zOrder) {
          l.sprite.__zOrder = l.zOrder;
          r = true;
        }
        l.ticker += e;
        if (l.pulse) {
          l.scale += e / 2.5;
        }
        let s = t.getMapPosFromWorldPos(l.pos, i);
        let m = l.scale;
        let d = z.smoothstep(l.ticker, 0, 0.1) * (1 - z.smoothstep(l.ticker, l.lifetime - 0.5, l.lifetime));
        l.sprite.position.set(s.x, s.y);
        l.sprite.scale.set(m, m);
        l.sprite.alpha = l.alpha * d;
        l.sprite.visible = l.visible && l.sprite.alpha > 0.0001;
        if (l.ticker >= l.lifetime && !l.retained) {
          l.free();
        }
      }
    }
    if (r) {
      this.container.children.sort((a, l) => a.__zOrder - l.__zOrder);
    }
  }
}
let et = 24;
class ks {
  container = new Y();
  timerBackground = ee.from("timer-background.img");
  counterText = new We();
  gfx = new pe();
  labelText = new We();
  screenScaleFactor = 1;
  mobileOffset = 0;
  active = false;
  label = "";
  elapsed = 0;
  duration = 0;
  letructor() {
    this.container.visible = false;
    this.timerBackground.anchor.set(0.5, 0.5);
    this.timerBackground.scale.set(1, 1);
    this.container.addChild(this.timerBackground);
    this.container.addChild(this.gfx);
    this.counterText.anchor.set(0.5, 0.5);
    this.counterText.style = {
      fontFamily: "Roboto Condensed, Arial, sans-serif",
      fontWeight: "bold",
      fontSize: et,
      align: "center",
      fill: 16777215,
      stroke: 0,
      strokeThickness: 3
    };
    this.container.addChild(this.counterText);
    this.labelText.anchor.set(0.5, 0.5);
    this.labelText.style = {
      fontFamily: "Roboto Condensed, Arial, sans-serif",
      fontWeight: "100",
      fontSize: et,
      align: "center",
      fill: 16777215
    };
    this.container.addChild(this.labelText);
  }
  destroy() {
    this.container.removeChild(this.timerBackground);
    this.timerBackground.destroy({
      children: true
    });
    this.container.destroy({
      children: true,
      texture: true
    });
  }
  start(e, t, i) {
    this.active = true;
    this.label = e;
    this.elapsed = t;
    this.duration = i;
  }
  stop() {
    this.active = false;
  }
  resize(e, t) {
    this.screenScaleFactor = t;
    if (v.uiLayout == v.UiLayout.Sm) {
      if (!v.tablet) {
        this.container.scale.set(0.5, 0.5);
      }
      this.mobileOffset = v.isLandscape ? e.mobileOffsetLandscape : e.mobileOffsetPortrait;
    } else {
      this.container.scale.set(1, 1);
      this.mobileOffset = 0;
    }
  }
  update(e, t) {
    if (!this.active) {
      this.container.visible = false;
      return;
    }
    this.elapsed = z.min(this.elapsed + e, this.duration);
    let i = 56 + this.label.length * et * 0.45;
    let r = et * 1.5;
    let a = 0 - i / 2;
    let l = 87.5 - r / 2;
    let s = z.min(this.elapsed / this.duration, 1) * Math.PI * 2 - Math.PI * 0.5;
    this.gfx.clear();
    this.gfx.beginFill(0, 0.5);
    this.gfx.drawRoundedRect(a, l, i, r, 5);
    this.gfx.endFill();
    this.gfx.lineStyle(6, 16777215);
    this.gfx.arc(0, 0, 35, -Math.PI * 0.5, s, false);
    this.counterText.text = z.max(0, this.duration - this.elapsed).toFixed(1);
    this.labelText.position.y = 87.5;
    this.labelText.text = this.label;
    this.container.position.set(t.LCRnPO / 2, t.gMqwV / 3 * this.screenScaleFactor + this.mobileOffset);
    this.container.visible = true;
  }
}
function Si(u) {
  let e = Math.floor(u / 3600);
  let t = Math.floor(u / 60) % 60;
  let i = Math.floor(u) % 60;
  let r = "";
  if (e > 0) {
    r += `${e}h `;
  }
  if (e > 0 || t > 0) {
    r += `${t}m `;
  }
  return r += `${i}s`;
}
function St(u, e, t, i) {
  let r = u + (e - u) / t * i;
  return Math.floor(r);
}
class qe {
  letructor(e, t, i) {
    this.r = e;
    this.g = t;
    this.b = i;
  }
  getColors() {
    return {
      r: this.r,
      g: this.g,
      b: this.b
    };
  }
}
class vs {
  letructor(e, t, i, r, a, l, s, m, d) {
    this.game = e;
    this.audioManager = t;
    this.particleBarn = i;
    this.planeBarn = r;
    this.localization = a;
    this.canvasMode = l;
    this.touch = s;
    this.inputBinds = m;
    this.inputBindUi = d;
    this.game = e;
    this.particleBarn = i;
    this.localization = a;
    this.touch = s;
    this.inputBinds = m;
    this.inputBindUi = d;
    this.roleMenuConfirm.on("click", f => {
      f.stopPropagation();
      this.roleSelected = this.roleDisplayed;
      this.setRoleMenuActive(false);
    });
    c("#ui-map-wrapper").css("display", "block");
    c("#ui-team").css("display", "block");
    c(".ui-map-expand").on("mousedown", f => {
      f.stopPropagation();
    });
    c(".ui-map-expand").on("click", f => {
      if (v.touch) {
        if (!this.bigmapDisplayed) {
          this.displayMapLarge();
        }
      } else if (v.uiLayout == v.UiLayout.Lg) {
        this.displayMapLarge(this.bigmapDisplayed);
      }
    });
    c("#ui-map-minimize").on("mousedown", f => {
      f.stopPropagation();
    });
    c("#ui-map-minimize").on("click", f => {
      f.stopPropagation();
      this.toggleMiniMap();
    });
    c("#ui-menu-display").on("click", f => {
      f.stopPropagation();
      this.toggleEscMenu();
    });
    this.moveStyleButton.on("touchstart", () => {
      s.toggleMoveStyle();
    });
    this.aimStyleButton.on("touchstart", () => {
      s.toggleAimStyle();
    });
    this.aimLineButton.on("touchstart", () => {
      s.toggleAimLine();
    });
    this.onTouchScreen = f => {
      if (f.target?.id == "cvs") {
        this.toggleEscMenu(true);
      }
    };
    c(document).on("touchstart", this.onTouchScreen);
    this.bigmapClose = c("#big-map-close");
    this.bigmapClose.on("touchend", f => {
      f.stopPropagation();
      this.displayMapLarge(true);
    });
    this.bigmapClose.on("mousedown", f => {
      f.stopPropagation();
    });
    this.bigmapClose.on("click", f => {
      f.stopPropagation();
      this.displayMapLarge(true);
    });
    this.gameTabBtns.on("click", f => {
      this.setCurrentGameTab(c(f.target).data("tab"));
    });
    this.setCurrentGameTab(this.currentGameTab);
    this.fullScreenButton.on("mousedown", f => {
      f.stopPropagation();
    });
    this.fullScreenButton.on("click", () => {
      $.toggleFullScreen();
      this.toggleEscMenu();
    });
    v.os == "ios";
    v.touch;
    this.resumeButton.on("mousedown", f => {
      f.stopPropagation();
    });
    this.resumeButton.on("click", () => {
      this.toggleEscMenu();
    });
    if (v.touch) {
      this.resumeButton.css("display", "none");
    }
    c("#btn-spectate-quit").on("click", () => {
      this.quitGame();
    });
    c("#btn-game-quit").on("mousedown", f => {
      f.stopPropagation();
    });
    c("#btn-game-quit").on("click", () => {
      this.game.gxunU = true;
      this.game.jRakkk = 1;
      this.quitGame();
    });
    this.specStatsButton.on("click", () => {
      this.toggleLocalStats();
    });
    this.specNextButton.on("click", () => {
      this.specNext = true;
    });
    this.specPrevButton.on("click", () => {
      this.specPrev = true;
    });
    this.interactionElems.css("pointer-events", "auto");
    this.interactionElems.on("touchstart", f => {
      f.stopPropagation();
      this.interactionTouched = true;
    });
    this.reloadElems.css("pointer-events", "auto");
    this.reloadElems.on("touchstart", f => {
      f.stopPropagation();
      this.reloadTouched = true;
    });
    this.gasRenderer = new Wi(l, 0);
    this.resetWeapSlotStyling = () => {
      if (this.weapDraggedDiv) {
        this.weapSwitches.css({
          left: "",
          top: ""
        });
        c("#ui-game").css({
          "pointer-events": ""
        });
      }
      this.weapDraggedDiv = null;
      this.weapDragging = false;
      this.weapDropped = false;
      if (this.weapSwitches.hasClass("ui-weapon-dragged")) {
        this.weapSwitches.removeClass("ui-weapon-dragged");
      }
      if (!this.weapNoSwitches.hasClass("ui-outline-hover")) {
        this.weapNoSwitches.addClass("ui-outline-hover");
      }
    };
    if (!v.touch) {
      this.weapSwitches.on("mousedown", f => {
        let S = f.currentTarget;
        if (f.button == 0) {
          this.weapDraggedDiv = c(S);
          this.weapDraggedId = c(S).data("slot");
        }
      });
      c("#ui-game").on("mousemove", f => {
        if (this.weapDraggedDiv && !this.weapDropped) {
          if (this.weapDragging) {
            this.weapDraggedDiv.css({
              left: f.pageX - 80,
              top: f.pageY - 30
            });
            this.weapDraggedDiv.addClass("ui-weapon-dragged");
          } else {
            c("#ui-game").css({
              "pointer-events": "initial"
            });
            this.weapNoSwitches.removeClass("ui-outline-hover");
            this.weapDragging = true;
          }
        }
      });
      c("#ui-game, #ui-weapon-id-1, #ui-weapon-id-2").on("mouseup", f => {
        if (f.button == 0 && this.weapDraggedDiv != null) {
          this.weapSwitches.each(() => {
            let S = c(f.currentTarget).data("slot");
            if (c(f.currentTarget).is(":hover") && this.weapDraggedId != S) {
              this.swapWeapSlots = true;
              this.weapDropped = true;
            }
          });
          if (!this.swapWeapSlots) {
            this.resetWeapSlotStyling();
          }
        }
      });
    }
    this.mapIndicatorBarn = new ys(this.mapSpriteBarn);
    this.container.mask = new pe();
    this.display = {
      gas: this.gasRenderer.display,
      gasSafeZone: this.gasSafeZoneRenderer.display,
      airstrikeZones: r.airstrikeZoneContainer,
      mapSprites: this.mapSpriteBarn.container,
      teammates: new Y(),
      player: new Y(),
      border: new pe()
    };
    this.mapSprite.anchor = new Et(0.5, 0.5);
    this.container.addChild(this.mapSprite);
    this.container.addChild(this.display.gas);
    this.container.addChild(this.display.gasSafeZone);
    this.container.addChild(this.display.airstrikeZones);
    this.container.addChild(this.display.mapSprites);
    this.container.addChild(this.display.teammates);
    this.container.addChild(this.display.player);
    this.container.addChild(this.display.border);
    let h = this.getMinimapMargin();
    let p = this.getMinimapSize();
    this.minimapPos = n.create(h + p / 2, e.sJNwq.gMqwV - p / 2 - h);
    this.muteButtonImage = this.muteButton.find("img");
    let w = this.audioManager.mute;
    this.muteButtonImage.attr("src", w ? this.muteOffImg : this.muteOnImg);
    this.muteButton.on("mousedown", f => {
      f.stopPropagation();
    });
    this.muteButton.on("click", f => {
      let S = this.audioManager.muteToggle();
      this.muteButtonImage.attr("src", S ? this.muteOffImg : this.muteOnImg);
      S = null;
    });
    this.teamMemberHealthBarWidth = parseInt(c(".ui-team-member-health").find(".ui-bar-inner").css("width"));
    for (let f = 0; f < 4; f++) {
      let S = this.topLeft;
      let x = f;
      this.teamSelectors.push({
        teamNameHtml: "",
        groupId: c(S).find(`[data-id=${x}]`),
        groupIdDisplayed: false,
        teamName: c(S).find(`[data-id=${x}]`).find(".ui-team-member-name"),
        teamIcon: c(S).find(`[data-id=${x}]`).find(".ui-team-member-icon"),
        teamStatus: c(S).find(`[data-id=${x}]`).find(".ui-team-member-status"),
        teamHealthInner: c(S).find(`[data-id=${x}]`).find(".ui-health-actual"),
        teamColor: c(S).find(`[data-id=${x}]`).find(".ui-team-member-color"),
        playerId: 0,
        prevHealth: 0,
        prevStatus: {
          disconnected: false,
          dead: false,
          downed: false,
          role: ""
        },
        indicators: {
          main: {
            elem: c("#ui-team-indicators").find(`.ui-indicator-main[data-id=${x}]`),
            displayed: false
          }
        }
      });
    }
    this.init();
  }
  DCc = new ks();
  gameElem = c("#ui-game");
  statsMain = c("#ui-stats");
  statsElem = c("#ui-stats-bg");
  statsContentsContainer = c("#ui-stats-contents");
  statsContents = c("#ui-stats-contents-inner");
  statsHeader = c("#ui-stats-header");
  statsInfoBox = c("#ui-stats-info-box");
  statsOptions = c("#ui-stats-options");
  statsAds = c(".ui-stats-ad-container");
  statsLogo = c("#ui-stats-logo");
  escMenuElem = c("#ui-game-menu");
  escMenuDisplayed = false;
  roleMenuElemWrapper = c("#ui-role-menu-wrapper");
  roleMenuElem = c("#ui-role-menu");
  roleMenuFooterEnterElem = c("#ui-role-footer-enter");
  roleMenuFooterHtml = "";
  roleMenuActive = false;
  roleMenuDisplayed = false;
  roleMenuTicker = 0;
  roleDisplayed = "";
  roleSelected = "";
  roleMenuConfirm = c("#ui-role-footer-enter");
  roleMenuInst = null;
  topLeft = c("#ui-top-left");
  waitingForPlayers = true;
  waitingText = c("#ui-waiting-text");
  spectating = false;
  prevSpectatorCount = 0;
  spectatorCount = 0;
  spectatorCounterDisplayed = false;
  spectatorCounterContainer = c("#ui-spec-counter");
  spectatorCounter = c("#ui-spec-counter-number");
  spectateMode = c(".ui-spectate-mode");
  spectatedPlayerText = c("#ui-spectate-text");
  spectatedPlayerName = "";
  spectatedPlayerId = 0;
  spectateModeStats = c("#ui-spectate-stats");
  spectateModeStatsData = c("#ui-spectate-stats-data");
  spectateOptionsWrapper = c("#ui-spectate-options-wrapper");
  rightCenter = c("#ui-right-center");
  leaderboardAlive = c("#ui-leaderboard-alive");
  playersAlive = c(".js-ui-players-alive");
  leaderboardAliveFaction = c("#ui-leaderboard-alive-faction");
  playersAliveRed = c(".js-ui-players-alive-red");
  playersAliveBlue = c(".js-ui-players-alive-blue");
  playersAliveRedCounter = 0;
  playersAliveBlueCounter = 0;
  playerKills = c(".js-ui-player-kills");
  announcement = c("#ui-announcement");
  killLeaderName = c("#ui-kill-leader-name");
  killLeaderCount = c("#ui-kill-leader-count");
  mapContainer = c("#ui-map-container");
  mapContainerBottom = 52;
  mapInfo = c("#ui-map-info");
  mapInfoBottom = 218;
  gasState = {};
  gasIcon = c("#ui-gas-icon");
  gasTimer = c("#ui-gas-timer");
  mapMinimizeButton = c("#ui-map-minimize");
  menuDisplayButton = c("#ui-menu-display");
  bottomCenterRight = c("#ui-bottom-center-right");
  actionSeq = -1;
  displayMapDirty = false;
  displayMapClear = false;
  gameTabs = c(".ui-game-tab");
  gameTabBtns = c(".btn-game-tab-select");
  gameKeybindBtns = c(".btn-keybind-desc");
  currentGameTab = "settings";
  onTouchScreen;
  bigmap = c("#big-map");
  bigmapCollision = c("#big-map-collision");
  bigmapClose = c("#big-map-close");
  moveStyleButton = c("#btn-game-move-style");
  aimLineButton = c("#btn-game-aim-line");
  aimStyleButton = c("#btn-game-aim-style");
  fullScreenButton = c("#btn-game-fullscreen");
  resumeButton = c("#btn-game-resume");
  specStatsButton = c("#btn-spectate-view-stats");
  specBegin = false;
  specNext = false;
  specPrev = false;
  specNextButton = c("#btn-spectate-next-player");
  specPrevButton = c("#btn-spectate-prev-player");
  interactionElems = c("#ui-interaction-press, #ui-interaction");
  interactionTouched = false;
  reloadElems = c("#ui-current-clip, #ui-remaining-ammo, #ui-reload-button-container");
  reloadTouched = false;
  flairElems = c(".ui-health-flair");
  flairId = 0;
  healthRed = new qe(255, 0, 0);
  healthDarkpink = new qe(255, 45, 45);
  healthLightpink = new qe(255, 112, 112);
  healthWhite = new qe(255, 255, 255);
  healthGrey = new qe(179, 179, 179);
  minimapDisplayed = true;
  visibilityMode = 0;
  hudVisible = true;
  gasRenderer;
  gasSafeZoneRenderer = new ka();
  sentAdStatus = false;
  frame = 0;
  weapsDirty = false;
  weapSwitches = c("#ui-weapon-id-1, #ui-weapon-id-2");
  weapNoSwitches = c("#ui-weapon-id-3, #ui-weapon-id-4");
  weapDraggedId = 0;
  swapWeapSlots = false;
  weapDraggedDiv = null;
  weapDragging = false;
  weapDropped = false;
  mapSpriteBarn = new bs();
  mapIndicatorBarn;
  playerMapSprites = [];
  playerPingSprites = {};
  container = new Y();
  resetWeapSlotStyling;
  display;
  mapSprite = new ee(G.EMPTY);
  bigmapDisplayed = false;
  screenScaleFactor = 1;
  minimapPos;
  dead = false;
  muteButton = c("#ui-mute-ingame");
  muteButtonImage;
  muteOffImg = "audio-off.img";
  muteOnImg = "audio-on.img";
  displayingStats = false;
  teamMemberHealthBarWidth;
  teamMemberHeight = 48;
  groupPlayerCount = 0;
  teamSelectors = [];
  displayOldMapSprites = false;
  HJMxT() {
    this.gasRenderer.free();
    this.clearUI();
    this.roleMenuConfirm.off("click");
    c(".ui-role-option").off("click");
    c(".ui-map-expand").off("mousedown");
    c(".ui-map-expand").off("click");
    c("#ui-map-minimize").off("mousedown");
    c("#ui-map-minimize").off("click");
    c("#ui-menu-display").off("click");
    this.moveStyleButton.off("touchstart");
    this.aimStyleButton.off("touchstart");
    this.aimLineButton.off("touchstart");
    c(document).off("touchstart", this.onTouchScreen);
    this.bigmapClose.off("touchend");
    this.bigmapClose.off("mousedown");
    this.bigmapClose.off("click");
    this.gameTabBtns.off("click");
    this.fullScreenButton.off("mousedown");
    this.fullScreenButton.off("click");
    this.resumeButton.off("mousedown");
    this.resumeButton.off("click");
    c("#btn-spectate-quit").off("click");
    c("#btn-game-quit").off("mousedown");
    c("#btn-game-quit").off("click");
    this.specStatsButton.off("click");
    this.specNextButton.off("click");
    this.specPrevButton.off("click");
    this.interactionElems.off("touchstart");
    this.reloadElems.off("touchstart");
    this.weapSwitches.off("mousedown");
    c("#ui-game").off("mousemove");
    c("#ui-game").off("mouseup");
    c("#ui-weapon-id-1").off("mouseup");
    c("#ui-weapon-id-2").off("mouseup");
    this.muteButton.off("mousedown");
    this.muteButton.off("click");
    c(".ui-team-member-health").find(".ui-bar-inner").css("width", this.teamMemberHealthBarWidth);
    c("#ui-center").off("mouseenter mouseleave");
    this.inputBinds.menuHovered = false;
    if (!this.hudVisible) {
      this.cycleHud();
    }
    this.DCc.destroy();
    this.clearStatsElems();
    this.setRoleMenuActive(false);
    this.init();
  }
  init() {
    c(".js-ui-map-hidden").css("display", "block");
    c("#ui-map-counter-default").css("display", "inline-block");
    c("#ui-map-counter-faction").css("display", "none");
    this.flairElems.css("display", "none");
    this.clearStatsElems();
    this.setSpectating(false);
    this.updateSpectatorCountDisplay(true);
    this.resetWeapSlotStyling();
    this.dead = false;
    for (let e = 0; e < this.teamSelectors.length; e++) {
      this.teamSelectors[e].teamColor.removeAttr("style");
    }
  }
  onMapLoad(e, t) {
    this.resize(e, t);
    let i = e.getMapDef().gameMode.killLeaderEnabled;
    c("#ui-kill-leader-container").css("display", i ? "block" : "none");
    if (!v.mobile) {
      c("#ui-killfeed-wrapper").css("top", i ? "60px" : "12px");
    }
  }
  PEHQLt(e, t, i, r, a, l, s, m, d) {
    let h = t;
    if (this.weapsDirty) {
      this.resetWeapSlotStyling();
    }
    this.weapsDirty = false;
    this.mapIndicatorBarn.updateIndicatorPulses(e);
    let p = z.max(Math.floor(r.duration * (1 - r.circleT)), 0);
    let w = {
      mode: r.mode,
      time: p
    };
    if (this.gasState.mode != w.mode || this.gasState.time != w.time) {
      this.gasState = w;
      let k = this.gasState.mode == dt.Moving;
      this.mapInfo.removeClass("icon-pulse");
      this.gasIcon.removeClass("gas-icon");
      this.gasIcon.removeClass("danger-icon");
      if (k) {
        this.mapInfo.addClass("icon-pulse");
      }
      this.gasIcon.addClass(k ? "danger-icon" : "gas-icon");
      let b = Math.floor(this.gasState.time / 60);
      let E = `0${this.gasState.time % 60}`.slice(-2);
      this.gasTimer.html(`${b}:${E}`);
    }
    this.spectatorCount = t.alkER.roTo;
    this.updateSpectatorCountDisplay(false);
    if (t.iDmhea.XRQji && !this.dead) {
      this.dead = true;
      this.DCc.stop();
    }
    if (h.downed || this.dead) {
      this.resetWeapSlotStyling();
    }
    if (this.actionSeq != t.KXvZTW.seq && (this.actionSeq = t.KXvZTW.seq, this.DCc.stop(), t.KXvZTW.type != ie.None && !this.displayingStats)) {
      let k = "";
      let b = "";
      let M = "";
      switch (t.KXvZTW.type) {
        case ie.Reload:
        case ie.ReloadAlt:
          if (B[t.KXvZTW.item]) {
            b = this.localization.translate("game-reloading");
          }
          break;
        case ie.UseItem:
          if (B[t.KXvZTW.item]) {
            b = this.localization.translate("game-using");
            M = this.localization.translate(`game-${t.KXvZTW.item}`);
          }
          break;
        case ie.Revive:
          {
            let E = l.getPlayerInfo(t.KXvZTW.targetId).name;
            b = this.localization.translate("game-reviving");
            M = h.downed ? "" : E;
            break;
          }
      }
      if (b != "" || M != "") {
        if (this.localization.translate("word-order") == "svo") {
          k += b || "";
          k += M ? ` ${M}` : "";
        } else if (this.localization.translate("word-order") == "sov") {
          k += M ? `${M} ` : "";
          k += b ? ` ${b}` : "";
        }
        this.DCc.start(k, t.KXvZTW.time, t.KXvZTW.duration);
      }
    }
    if (!this.bigmapDisplayed) {
      this.mapSprite.x = this.minimapPos.x + this.mapSprite.width / 2 - t.Hxqi.x / i.width * this.mapSprite.width;
      this.mapSprite.y = this.minimapPos.y - this.mapSprite.height / 2 + t.Hxqi.y / i.height * this.mapSprite.height;
    }
    let f = n.create(s.LCRnPO * 0.5 / s.fVAy(), s.gMqwV * 0.5 / s.fVAy());
    let S = {
      min: n.sub(s.aznZwb, f),
      max: n.add(s.aznZwb, f)
    };
    let x = l.getPlayerInfo(t.__id).groupId;
    let y = l.getGroupInfo(x);
    if (!y) {
      let k = {
        playerId: t.__id,
        groupId: x,
        spectating: this.spectating,
        playing: this.game.zLmmQ,
        groupInfo: l.groupInfo
      };
      console.error(`badTeamInfo_1: ${JSON.stringify(k)}`);
    }
    let C = v.uiLayout == v.UiLayout.Sm;
    let P = y.playerIds.length;
    for (let k = 0; k < P; k++) {
      let b = this.teamSelectors[k];
      let M = y.playerIds[k];
      let E = l.getPlayerInfo(M);
      let D = M == h.__id;
      let L = l.getPlayerStatus(M);
      if (L && m > Se.Solo) {
        if (!b.groupIdDisplayed) {
          b.groupId.css("display", "block");
          b.groupIdDisplayed = true;
        }
        this.updateTeam(k, $.htmlEscape(E.name), L.health, {
          disconnected: L.disconnected,
          dead: L.dead,
          downed: L.downed,
          role: L.role
        }, E.playerId, E.teamId, l);
        for (let _ in b.indicators) {
          if (b.indicators.hasOwnProperty(_)) {
            let T = b.indicators[_];
            let V = T.elem;
            let j = true;
            if ((!D || T.displayAll) && !d) {
              let q = L.pos;
              let Z = n.normalizeSafe(n.sub(q, s.aznZwb), n.create(1, 0));
              let O = xe.intersectRayAabb(s.aznZwb, Z, S.min, S.max);
              let N = Math.atan2(Z.y, -Z.x) + Math.PI * 0.5;
              let U = s.JDbtXa(O);
              let te = xe.testCircleAabb(q, R.player.radius, S.min, S.max);
              if (!L.dead && !te) {
                let ae = 32;
                let ge = `translate(-50%, -50%) rotate(${N}rad)`;
                if (C) {
                  ae = 16;
                  ge += " scale(0.5)";
                }
                j = false;
                V.css({
                  left: z.clamp(U.x, ae, s.LCRnPO - ae),
                  top: z.clamp(U.y, ae, s.gMqwV - ae - 0),
                  transform: ge
                });
                if (!T.displayed) {
                  V.css("display", "block");
                  T.displayed = true;
                }
              }
            }
            if (j && T.displayed) {
              V.css("display", "none");
              T.displayed = false;
            }
          }
        }
      }
    }
    for (let k = P; k < this.teamSelectors.length; k++) {
      let b = this.teamSelectors[k];
      for (let M in b.indicators) {
        if (b.indicators.hasOwnProperty(M)) {
          let E = b.indicators[M];
          if (E.displayed) {
            E.elem.css("display", "none");
            E.displayed = false;
          }
        }
      }
      if (b.groupIdDisplayed) {
        b.groupId.css("display", "none");
        b.groupIdDisplayed = false;
      }
    }
    if (i.factionMode) {
      let k = l.getPlayerInfo(h.__id);
      if (this.flairId != k.teamId) {
        this.flairId = k.teamId;
        let b = this.flairId == 1 ? "red" : "blue";
        this.flairElems.css({
          display: "block",
          "background-image": `url(../img/gui/player-patch-${b}.svg)`
        });
      }
    }
    if (m > Se.Solo && this.groupPlayerCount != P && v.uiLayout == v.UiLayout.Lg) {
      this.groupPlayerCount = P;
      this.spectateOptionsWrapper.css({
        top: this.groupPlayerCount * this.teamMemberHeight + 12
      });
    } else if (m == Se.Solo) {
      this.spectateOptionsWrapper.css({
        top: 12
      });
    }
    this.updatePlayerMapSprites(e, t, l, i);
    this.mapSpriteBarn.update(e, this, i);
    this.DCc.update(e, s);
    if (this.roleMenuActive) {
      this.roleMenuTicker -= e;
      let k = Math.ceil(this.roleMenuTicker);
      let b = `${this.localization.translate("game-enter-game")} (${k})`;
      if (b != this.roleMenuFooterHtml) {
        this.roleMenuFooterEnterElem.html(b);
        this.roleMenuFooterHtml = b;
      }
      if (!this.roleMenuInst && this.audioManager.isSoundLoaded("ambient_lab_01", "ambient")) {
        this.roleMenuInst = this.audioManager.playSound("ambient_lab_01", {
          channel: "ambient"
        });
      }
      if (this.roleMenuTicker <= 0) {
        this.roleSelected = this.roleDisplayed;
        this.setRoleMenuActive(false);
      }
    }
  }
  updatePlayerMapSprites(e, t, i, r) {
    let a = i.getPlayerInfo(t.__id);
    let l = 0;
    let s = (d, h, p, w, f, S, x) => {
      if (l >= this.playerMapSprites.length) {
        let C = this.mapSpriteBarn.addSprite();
        this.playerMapSprites.push(C);
      }
      let y = this.playerMapSprites[l++];
      y.pos = n.copy(d);
      y.scale = h;
      y.alpha = p;
      y.visible = w;
      y.zOrder = f;
      y.sprite.texture = G.from(S);
      y.sprite.tint = x;
    };
    let m = Object.keys(i.playerStatus);
    for (let d = 0; d < m.length; d++) {
      let h = i.playerStatus[m[d]];
      let p = h.playerId;
      let w = i.getPlayerInfo(p);
      let f = w.groupId == a.groupId;
      let S = 65535 + p * 2;
      if (p == a.playerId) {
        S += 131070;
      }
      let x = Oi[h.role];
      let y = x?.mapIcon;
      if (y) {
        S += 65535;
      }
      let C = "player-map-inner.img";
      if (y) {
        C = x.mapIcon.alive;
      }
      if (h.dead) {
        C = "skull-outlined.img";
        if (y) {
          C = x.mapIcon.dead;
        }
      } else if (h.downed) {
        C = f ? "player-map-inner.img" : "player-map-downed.img";
      }
      let P = f ? i.getGroupColor(p) : i.getTeamColor(w.teamId);
      if (r.factionMode && y) {
        P = i.getTeamColor(w.teamId);
      }
      let k = v.uiLayout == v.UiLayout.Sm ? 0.15 : 0.2;
      let b = k;
      b = f ? h.dead ? k * 1.5 : y ? k * 1.25 : k * 1 : h.dead || h.downed || y ? k * 1.25 : k * 0.75;
      s(h.pos, b, h.minimapAlpha, h.minimapVisible, S, C, P);
      if (f) {
        let M = v.uiLayout == v.UiLayout.Sm ? 0.25 : 0.3;
        let E = h.minimapVisible && !y;
        s(h.pos, M, h.minimapAlpha, E, S - 1, "player-map-outer.img", 16777215);
      }
    }
    for (let d = this.playerMapSprites.length - 1; d >= l; d--) {
      this.playerMapSprites[d].visible = false;
    }
  }
  getMinimapMargin() {
    if (v.uiLayout == v.UiLayout.Sm) {
      return 4;
    } else {
      return 16;
    }
  }
  getMinimapSize() {
    if (v.uiLayout == v.UiLayout.Sm) {
      return 192;
    } else {
      return 256;
    }
  }
  getMinimapBorderWidth() {
    if (v.uiLayout == v.UiLayout.Sm) {
      return 1;
    } else {
      return 4;
    }
  }
  createPing(e, t, i, r, a, l) {
    let s = Fe[e];
    if (s) {
      let m = (h, p) => {
        let w = this.mapSpriteBarn.addSprite();
        w.pos = n.copy(t);
        w.scale = h;
        w.lifetime = s.mapLife;
        w.pulse = false;
        w.zOrder = 100;
        w.sprite.texture = G.from(s.mapTexture);
        w.sprite.tint = p;
        return w;
      };
      let d = h => {
        let p = this.mapSpriteBarn.addSprite();
        p.pos = n.copy(t);
        p.scale = 0;
        p.lifetime = s.pingLife;
        p.pulse = true;
        p.zOrder = 99;
        p.sprite.texture = G.from("ping-map-pulse.img");
        p.sprite.tint = h;
        return p;
      };
      if (s.mapEvent) {
        let h = (v.uiLayout == v.UiLayout.Sm ? 0.15 : 0.2) * 1.5;
        m(h, s.tint).release();
        d(s.tint).release();
      } else {
        let h = 16777215;
        let p = a.getPlayerInfo(r);
        let w = a.getPlayerInfo(i);
        let f = a.getPlayerStatus(i);
        if (p && w && f) {
          if (f.role == "leader") {
            h = 65280;
          } else if (p.groupId == w.groupId) {
            h = a.getGroupColor(i);
          } else {
            h = a.getTeamColor(w.teamId);
          }
        }
        this.playerPingSprites[i] ||= [];
        let S = this.playerPingSprites[i];
        for (let P = 0; P < S.length; P++) {
          S[P].free();
        }
        let x = v.uiLayout == v.UiLayout.Sm ? 0.15 : 0.2;
        let y = m(x, h);
        let C = d(h);
        S.push(y);
        S.push(C);
      }
    }
  }
  updateMapSprite(e, t, i, r) {
    if (e.displayed) {
      if (e.life != null) {
        e.life -= r;
        e.displayed = e.life > 0;
        if (e.maxLife - e.life < 0.1) {
          t.alpha = (e.maxLife - e.life) / 0.1;
        } else if (e.life < 0.5) {
          t.alpha = z.max(e.life / 0.5, 0);
        } else {
          t.alpha = 1;
        }
      }
      if (e.pulse && e.displayed) {
        e.scale = e.scale + r / 2.5;
        t.scale.set(e.scale, e.scale);
      }
      t.visible = i && t.alpha > 0;
    }
  }
  updateMapIndicators(e) {
    this.mapIndicatorBarn.updateIndicatorData(e);
  }
  getMapPosFromWorldPos(e, t) {
    let i = this.mapSprite.x - this.mapSprite.width / 2 + e.x / t.width * this.mapSprite.width;
    let r = this.mapSprite.y + this.mapSprite.height / 2 - e.y / t.height * this.mapSprite.height;
    return n.create(i, r);
  }
  getWorldPosFromMapPos(e, t, i) {
    let r = false;
    if (this.bigmapDisplayed) {
      let a = (i.LCRnPO - this.mapSprite.width) / 2;
      let l = (i.gMqwV - this.mapSprite.height) / 2;
      if (v.uiLayout == v.UiLayout.Sm && !v.isLandscape) {
        l = 0;
      }
      r = e.x > a && e.x < i.LCRnPO - a && e.y > l && e.y < i.gMqwV - l;
    } else if (this.minimapDisplayed) {
      let a = this.getMinimapSize();
      let l = this.getMinimapMargin();
      let m = (a * this.screenScaleFactor + l) * 0.5;
      r = e.x > this.minimapPos.x - m && e.x < this.minimapPos.x + m && e.y > this.minimapPos.y - m && e.y < this.minimapPos.y + m;
    }
    if (r) {
      let a = n.create(this.mapSprite.x - this.mapSprite.width / 2, this.mapSprite.y + this.mapSprite.height / 2);
      let l = (e.x - a.x) / this.mapSprite.width * t.width;
      let s = (a.y - e.y) / this.mapSprite.height * t.height;
      return n.create(l, s);
    }
    return false;
  }
  hideAll() {
    this.gameElem.css("display", "none");
  }
  showAll() {
    this.gameElem.css("display", "block");
  }
  setLocalKills(e) {
    this.playerKills.html(e);
  }
  removeAds() {
    if (window.CrazyGames) {
      window.CrazyGames.SDK.banner.clearAllBanners();
    } else {
      if (!window.aiptag) {
        return;
      }
      let e = ["728x90", "300x250_2"];
      for (let t = 0; t < e.length; t++) {
        let i = e[t];
        window.aiptag.cmd.display.push(() => {
          window.aipDisplayTag.destroy(`survev-io_${i}`);
        });
      }
    }
  }
  refreshMainPageAds() {
    let e = ["728x90"];
    if (window.CrazyGames) {
      for (let t = 0; t < e.length; t++) {
        let i = e[t];
        let r = i.split("x").map(Number);
        It(`survev-io_${i}`, r[0], r[1]);
      }
    }
    if (window.aiptag) {
      for (let t = 0; t < e.length; t++) {
        let i = e[t];
        window.aiptag.cmd.display.push(() => {
          window.aipDisplayTag.display(`survev-io_${i}`);
        });
      }
    }
  }
  clearUI() {
    this.DCc.stop();
    this.curAction = {
      type: ie.None
    };
    this.displayMapLarge(true);
    this.displayMiniMap();
    this.clearStatsElems();
    this.clearTeamUI();
    this.toggleEscMenu(true);
    this.toggleLocalStats(true);
    this.visibilityMode = 0;
    this.spectatorCount = 0;
    this.setLocalKills(0);
  }
  beginSpectating() {
    this.specBegin = true;
  }
  hideStats() {
    this.displayingStats = false;
    this.statsMain.css("display", "none");
    this.statsElem.stop().css({
      display: "none",
      opacity: 0
    });
    this.statsContents.stop().hide();
  }
  teamModeToString(e) {
    let t = {
      unknown: "game-rank",
      [Se.Solo]: "game-solo-rank",
      [Se.Duo]: "game-duo-rank",
      [Se.Squad]: "game-squad-rank"
    };
    let i = t[e] || t.unknown;
    return this.localization.translate(i);
  }
  getTitleVictoryText(e, t) {
    if (e) {
      return `${this.spectatedPlayerName} ${this.localization.translate("game-won-the-game")}`;
    }
    let i = "game-chicken";
    if (t.turkeyMode) {
      i = "game-turkey";
    }
    return this.localization.translate(i);
  }
  getTitleDefeatText(e, t) {
    if (t) {
      return `${this.spectatedPlayerName} ${this.localization.translate("game-player-died")}.`;
    } else if (e > Se.Solo) {
      return this.localization.translate("game-team-eliminated");
    } else {
      return `${this.localization.translate("game-You")} ${this.localization.translate("game-you-died")}.`;
    }
  }
  getOverviewElems(e, t, i, r) {
    if (r) {
      let a = this.localization.translate("game-red-team");
      let l = this.localization.translate("game-blue-team");
      return `<div class="ui-stats-header-right ui-stats-header-red-team"><span class="ui-stats-header-stat">${a} </span><span class="ui-stats-header-value">${this.playersAliveRedCounter}</span></div><div class="ui-stats-header-left ui-stats-header-blue-team"><span class="ui-stats-header-stat">${l} </span><span class="ui-stats-header-value">${this.playersAliveBlueCounter}</span></div>`;
    }
    if (e == Se.Solo) {
      return `<div><span class="ui-stats-header-stat">${this.teamModeToString(e)} </span><span class="ui-stats-header-value">#${t}</span></div>`;
    } else {
      return `<div class="ui-stats-header-right"><span class="ui-stats-header-stat">${this.teamModeToString(e)} </span><span class="ui-stats-header-value">#${t}</span></div><div class="ui-stats-header-left"><span class="ui-stats-header-stat">${this.localization.translate("game-team-kills")} </span><span class="ui-stats-header-value">${i}</span></div>`;
    }
  }
  quitGame() {
    this.game.men = true;
    this.refreshMainPageAds();
    this.game.onQuit();
    this.game.respawns.push(performance.now());
  }
  showStats(e, t, i, r, a, l, s, m, d, h, p, w) {
    if (!m || t == l || a) {
      this.toggleEscMenu(true);
      this.displayingStats = true;
      this.DCc.stop();
      this.displayMapLarge(true);
      this.clearStatsElems();
      this.setSpectating(false, s);
      this.removeAds();
      this.statsMain.css("display", "block");
      this.statsLogo.css("display", "block");
      this.statsContentsContainer.css({
        top: ""
      });
      this.statsInfoBox.css({
        height: ""
      });
      let S = l == r ? 1750 : 2500;
      this.setBannerAd(S, w);
      let x = l == r || m && r == t;
      let y = m && l != t;
      let C = x ? this.getTitleVictoryText(y, p.getMapDef().gameMode) : this.getTitleDefeatText(s, y);
      let P = 0;
      for (let q = 0; q < e.length; q++) {
        P += e[q].kills;
      }
      let k = this.getOverviewElems(s, i, P, p.getMapDef().gameMode.factionMode);
      let b = c("<div/>").append(c("<div/>", {
        class: "ui-stats-header-title",
        html: C
      })).append(c("<div/>", {
        class: "ui-stats-header-overview",
        html: k
      }));
      this.statsHeader.html(b);
      let M = (q, Z) => c("<div/>", {
        class: "ui-stats-info"
      }).append(c("<div/>", {
        html: q
      })).append(c("<div/>", {
        html: Z
      }));
      let E = v.uiLayout != v.UiLayout.Sm || v.tablet ? 250 : 125;
      let D = 0;
      D -= (e.length - 1) * E / 2;
      D -= (e.length - 1) * 10;
      for (let q = 0; q < e.length; q++) {
        let Z = e[q];
        let O = d.getPlayerInfo(Z.playerId);
        let N = Si(Z.timeAlive);
        let U = "ui-stats-info-player";
        U += Z.dead ? " ui-stats-info-status" : "";
        let te = (ae => c("<div/>", {
          class: ae
        }))(U);
        te.css("left", D);
        te.append(c("<div/>", {
          class: "ui-stats-info-player-name",
          html: $.htmlEscape(O.name)
        }));
        te.append(M(this.localization.translate("game-kills"), `${Z.kills}`)).append(M(this.localization.translate("game-damage-dealt"), Z.damageDealt)).append(M(this.localization.translate("game-damage-taken"), Z.damageTaken)).append(M(this.localization.translate("game-survived"), N));
        if (p.getMapDef().gameMode.factionMode && a) {
          switch (q) {
            case 1:
              te.append(c("<div/>", {
                class: "ui-stats-info-player-badge ui-stats-info-player-red-leader"
              }));
              break;
            case 2:
              te.append(c("<div/>", {
                class: "ui-stats-info-player-badge ui-stats-info-player-blue-leader"
              }));
              break;
            case 3:
              {
                let ae = O.teamId == 1 ? "ui-stats-info-player-red-ribbon" : "ui-stats-info-player-blue-ribbon";
                te.append(c("<div/>", {
                  class: `ui-stats-info-player-badge ${ae}`
                }));
              }
          }
        }
        this.statsInfoBox.append(te);
        D += 10;
      }
      let L = c("<a/>", {
        class: "ui-stats-restart btn-green btn-darken menu-option",
        html: this.localization.translate("game-play-new-game")
      });
      L.on("click", () => {
        this.quitGame();
      });
      this.statsOptions.append(L);
      if (a || this.waitingForPlayers) {
        L.css({
          width: v.uiLayout != v.UiLayout.Sm || v.tablet ? 225 : 130
        });
      } else {
        L.css({
          left: v.uiLayout != v.UiLayout.Sm || v.tablet ? -72 : -46
        });
        let q = c("<a/>", {
          class: "btn-green btn-darken menu-option ui-stats-spectate",
          html: this.localization.translate("game-spectate")
        });
        q.on("click", this.beginSpectating.bind(this));
        this.statsOptions.append(q);
      }
      let _ = 0;
      let T = 500;
      let V = 250 / z.max(1, e.length);
      let j = 750 / z.max(1, e.length);
      this.statsInfoBox.children().each((q, Z) => {
        let O = c(Z);
        O.css("opacity", 0);
        O.delay(S + j + (_ + q) * V).animate({
          opacity: 1
        }, T, () => {
          O.children().each((N, U) => {
            c(U).delay(N * V).animate({
              opacity: 1
            }, T);
          });
        });
        O.children().each((N, U) => {
          c(U).css("opacity", 0);
          _++;
        });
        _++;
      });
      this.statsOptions.children().each((q, Z) => {
        let O = c(Z);
        O.hide();
        let N = S + j + (_ + q) * V + 500;
        O.delay(N).fadeIn(T);
        _++;
      });
      this.statsElem.stop();
      this.statsElem.css("display", "block");
      this.statsElem.delay(S).animate({
        opacity: 1
      }, 1000);
      this.statsContents.stop();
      this.statsContents.css("display", "block");
      this.statsContents.delay(S).animate({
        opacity: 1
      }, 1000);
    }
  }
  clearStatsElems() {
    this.statsHeader.empty();
    this.statsInfoBox.empty();
    this.statsOptions.empty();
    this.statsAds.css("display", "none");
    this.statsContents.stop();
    this.statsContents.css({
      display: "none",
      opacity: 0
    });
    this.statsElem.stop();
    this.statsElem.css({
      display: "none",
      opacity: 0
    });
    this.statsMain.css("display", "none");
  }
  showTeamAd(e, t) {
    this.toggleEscMenu(true);
    this.displayMapLarge(true);
    this.clearStatsElems();
    this.statsMain.css("display", "block");
    this.statsLogo.css("display", "none");
    this.DCc.stop();
    this.displayingStats = true;
    this.statsHeader.html((() => {
      let l = this.localization.translate("game-You");
      l += " ";
      l += this.localization.translate("game-you-died");
      l += ".";
      let s = `<div><span class="ui-stats-header-stat">${this.localization.translate("game-kills")} </span>`;
      s += `<span class="ui-stats-header-value">${e.kills}</span></div>`;
      return c("<div/>", {
        class: ""
      }).append(c("<div/>", {
        class: "ui-stats-header-title",
        html: l
      })).append(c("<div/>", {
        class: "ui-stats-header-overview",
        html: s
      }));
    })());
    this.statsContentsContainer.css({
      top: "10%"
    });
    this.statsInfoBox.css({
      height: 0
    });
    let i = c("<a/>", {
      class: "ui-stats-restart btn-green btn-darken menu-option",
      html: this.localization.translate("game-play-new-game")
    });
    i.on("click", () => {
      this.quitGame();
    });
    this.statsOptions.append(i);
    i.css({
      left: v.uiLayout != v.UiLayout.Sm || v.tablet ? -72 : -46
    });
    let r = c("<a/>", {
      class: "btn-green btn-darken menu-option ui-stats-spectate",
      html: this.localization.translate("game-spectate")
    });
    r.on("click", this.beginSpectating.bind(this));
    this.statsOptions.append(r);
    let a = 0;
    this.statsOptions.children().each((l, s) => {
      let m = c(s);
      m.hide();
      let d = 4100 + (a + l) * 300 + 300;
      m.delay(d).fadeIn(750);
      a++;
    });
    this.statsElem.stop();
    this.statsElem.css("display", "block");
    this.statsElem.delay(2500).animate({
      opacity: 1
    }, 1000);
    this.statsContents.stop();
    this.statsContents.css("display", "block");
    this.statsContents.delay(2500).animate({
      opacity: 1
    }, 1000);
  }
  setBannerAd(e, t) {
    if (!window.aiptag) {
      return;
    }
    let i = Math.max(e - 150, 0);
    setTimeout(() => {
      c("#ui-stats-ad-container-desktop").css("display", "inline-block");
      window.aiptag.cmd.display.push(() => {
        window.aipDisplayTag.display("survev-io_300x250_2");
      });
      t.hideKillMessage();
    }, i);
  }
  setSpectateTarget(e, t, i, r) {
    if (e != this.spectatedPlayerId) {
      this.setSpectating(true, i);
      let a = r.getPlayerName(e, t, false);
      this.spectatedPlayerId = e;
      this.spectatedPlayerName = $.htmlEscape(a);
      this.spectatedPlayerText.find("#spectate-player").html(this.spectatedPlayerName);
      this.actionSeq = -1;
      this.DCc.stop();
    }
  }
  setSpectating(e, t) {
    if (this.spectating != e) {
      this.spectating = e;
      if (this.spectating) {
        this.spectateMode.css("display", "block");
        c(".ui-zoom").removeClass("ui-zoom-hover");
        let i = t == Se.Solo;
        this.specPrevButton.css("display", i ? "none" : "block");
        this.specNextButton.css("display", i ? "none" : "block");
        this.hideStats();
      } else {
        this.spectateMode.css("display", "none");
        c(".ui-zoom").addClass("ui-zoom-hover");
      }
    }
  }
  setLocalStats(e) {
    let t = {
      kills: this.localization.translate("game-kills"),
      damageDealt: this.localization.translate("game-damage-dealt"),
      damageTaken: this.localization.translate("game-damage-taken"),
      timeAlive: this.localization.translate("game-survived")
    };
    this.spectateModeStatsData.empty();
    for (let i in t) {
      if (t.hasOwnProperty(i)) {
        let r = t[i];
        let a = i == "timeAlive" ? Si(e[i]) : e[i];
        let l = `<tr><td class="ui-spectate-stats-category">${r}</td><td class="ui-spectate-stats-value">${a}</td></tr>`;
        this.spectateModeStatsData.append(l);
      }
    }
  }
  toggleLocalStats(e = false) {
    let t = this.spectateModeStats.css("display") == "none" && !e;
    this.spectateModeStats.css("display", t ? "inline-block" : "none");
    this.specStatsButton.html(t ? this.localization.translate("game-hide-match-stats") : this.localization.translate("game-view-match-stats"));
  }
  updatePlayersAlive(e) {
    this.playersAlive.html(e);
    this.leaderboardAlive.css("display", "block");
    this.leaderboardAliveFaction.css("display", "none");
  }
  updatePlayersAliveRed(e) {
    this.playersAliveRed.html(e);
    this.playersAliveRedCounter = e;
    this.leaderboardAlive.css("display", "none");
    this.leaderboardAliveFaction.css("display", "block");
    c("#ui-map-counter-default").css("display", "none");
    c("#ui-map-counter-faction").css("display", "inline-block");
  }
  updatePlayersAliveBlue(e) {
    this.playersAliveBlue.html(e);
    this.playersAliveBlueCounter = e;
    this.leaderboardAlive.css("display", "none");
    this.leaderboardAliveFaction.css("display", "block");
    c("#ui-map-counter-default").css("display", "none");
    c("#ui-map-counter-faction").css("display", "inline-block");
  }
  updateKillLeader(e, t, i, r) {
    let a = e != 0;
    let l = r?.sniperMode ? this.localization.translate("game-waiting-for-hunted") : this.localization.translate("game-waiting-for-new-leader");
    this.killLeaderName.html(a ? t : l);
    this.killLeaderCount.html(a ? i : 0);
  }
  displayMapLarge(e) {
    this.bigmapDisplayed = !e && !this.bigmapDisplayed;
    if (this.bigmapDisplayed) {
      this.container.alpha = 1;
    } else {
      this.container.alpha = this.minimapDisplayed ? 1 : 0;
    }
    let t = v.uiLayout == v.UiLayout.Sm ? ".js-ui-mobile-map-hidden" : "js-ui-desktop-map-hidden";
    t += ", .js-ui-map-hidden";
    c(this.visibilityMode == 2 ? ".js-ui-hud-show" : t).css("display", this.bigmapDisplayed ? "none" : "block");
    c(".js-ui-map-show").css("display", this.bigmapDisplayed ? "block" : "none");
    this.updateSpectatorCountDisplay(true);
    this.redraw(this.game.sJNwq);
  }
  updateSpectatorCountDisplay(e) {
    let t = !this.bigmapDisplayed && this.spectatorCount > 0;
    e = e || this.spectatorCount > 0 && !this.spectatorCounterDisplayed || this.spectatorCount == 0 && this.spectatorCounterDisplayed;
    if (this.spectatorCount != this.prevSpectatorCount) {
      this.spectatorCounter.html(this.spectatorCount);
      this.prevSpectatorCount = this.spectatorCount;
    }
    if (e) {
      this.spectatorCounterContainer.css("display", t ? "block" : "none");
      this.spectatorCounterDisplayed = t;
    }
  }
  toggleMiniMap() {
    if (this.minimapDisplayed) {
      this.hideMiniMap();
    } else {
      this.displayMiniMap();
    }
  }
  cycleVisibilityMode() {
    if (!this.bigmapDisplayed) {
      switch (this.visibilityMode) {
        case 0:
          this.hideMiniMap();
          this.visibilityMode = 1;
          break;
        case 1:
          this.displayMiniMap();
          this.visibilityMode = 0;
      }
    }
  }
  cycleHud() {
    if (this.gameElem.css("display") == "none") {
      this.gameElem.css("display", "block");
      this.displayMiniMap();
      this.hudVisible = true;
    } else {
      this.gameElem.css("display", "none");
      this.hideMiniMap();
      this.hudVisible = false;
    }
  }
  hideMiniMap() {
    if (!this.bigmapDisplayed) {
      this.minimapDisplayed = false;
      this.container.alpha = 0;
      this.mapInfo.css("bottom", "auto");
      this.spectatorCounterContainer.css({
        bottom: 6,
        left: 98
      });
    }
  }
  displayMiniMap() {
    if (!this.bigmapDisplayed) {
      let e = v.uiLayout == v.UiLayout.Sm;
      this.minimapDisplayed = true;
      this.container.alpha = 1;
      this.mapInfo.css("bottom", this.mapInfoBottom);
      this.spectatorCounterContainer.css({
        bottom: e ? 0 : 218,
        left: e ? 0 : 6
      });
    }
  }
  displayAnnouncement(e) {
    if (e) {
      this.announcement.html(e);
      this.announcement.fadeIn(400, () => {
        setTimeout(() => {
          this.announcement.fadeOut(800);
        }, 3000);
      });
    }
  }
  displayGasAnnouncement(e, t) {
    let i = "";
    switch (e) {
      case dt.Waiting:
        {
          i = this.localization.translate("game-red-zone-advances");
          let r = Math.floor(t / 60);
          let a = t - r * 60;
          i += r > 1 ? ` ${r} ${this.localization.translate("game-minutes")}` : "";
          i += r == 1 ? ` ${r} ${this.localization.translate("game-minute")}` : "";
          i += a > 0 ? ` ${Math.floor(a)} ${this.localization.translate("game-seconds")}` : "";
          break;
        }
      case dt.Moving:
        i = this.localization.translate("game-red-zone-advancing");
        break;
    }
    this.displayAnnouncement(i);
  }
  setWaitingForPlayers(e) {
    this.waitingForPlayers = e;
    this.waitingText.css("display", e ? "block" : "none");
  }
  lXaw(e, t, i, r, a, l) {
    let s = t.getCircle(1);
    let m = this.getMapPosFromWorldPos(s.pos, r);
    let d = this.getMapPosFromWorldPos(n.add(s.pos, n.create(s.rad, 0)), r);
    let h = n.length(n.sub(d, m));
    this.gasRenderer.render(m, h, t.isActive());
    let p = t.circleNew;
    let w = this.getMapPosFromWorldPos(p.pos, r);
    let f = this.getMapPosFromWorldPos(n.add(p.pos, n.create(p.rad, 0)), r);
    let S = n.length(n.sub(f, w));
    let x = this.getMapPosFromWorldPos(e, r);
    let y = t.isActive();
    let C = t.isActive() && !this.bigmapDisplayed;
    this.gasSafeZoneRenderer.render(w, S, x, y, C);
    a.renderAirstrikeZones(this, r, l);
  }
  updateHealthBar(e, t, i, r) {
    let a = e;
    let l = r.health * 0.01 * a;
    l = r.dead ? 0 : z.max(l, 1);
    t.css("width", l);
    if (l > 0) {
      i?.css("width", l);
    }
    let s = r.health;
    let m = this.healthRed;
    let d = this.healthDarkpink;
    if (s > 25) {
      if (r.downed) {
        t.css({
          backgroundColor: "red"
        });
      } else {
        if (z.eqAbs(s, 100, 0.2)) {
          m = this.healthGrey;
          d = this.healthGrey;
        } else if (z.eqAbs(s, 75, 0.2) || s >= 75) {
          m = this.healthWhite;
          d = this.healthWhite;
        } else {
          m = this.healthDarkpink;
          d = this.healthLightpink;
        }
        let h = m.getColors();
        let p = d.getColors();
        let w = St(h.r, p.r, 45, s);
        let f = St(h.g, p.g, 45, s);
        let S = St(h.b, p.b, 45, s);
        t.css({
          backgroundColor: `rgba(${w},${f},${S},1)`
        });
      }
      t.removeClass("ui-bar-danger");
    } else {
      t.addClass("ui-bar-danger");
    }
  }
  updateTeam(e, t, i, r, a, l, s) {
    let m = this.teamSelectors[e].groupId;
    let d = this.teamSelectors[e].teamName;
    let h = this.teamSelectors[e].prevHealth;
    let p = this.teamSelectors[e].prevStatus;
    let w = r.dead != p.dead || r.disconnected != p.disconnected || r.downed != p.downed || r.role != p.role;
    if (this.teamSelectors[e].playerId != a || i != h || w) {
      let f = this.teamSelectors[e].teamStatus;
      let S = this.teamSelectors[e].teamHealthInner;
      this.teamSelectors[e].playerId = a;
      this.teamSelectors[e].teamNameHtml = t;
      d.html(t);
      this.updateHealthBar(this.teamMemberHealthBarWidth, S, null, {
        health: i,
        dead: r.dead,
        downed: r.downed
      });
      if (w) {
        f.attr("class", "ui-team-member-status");
        if (r.disconnected) {
          f.addClass("ui-team-member-status-disconnected");
        } else if (r.dead) {
          f.addClass("ui-team-member-status-dead");
        } else if (r.downed) {
          f.addClass("ui-team-member-status-downed").addClass("icon-pulse");
        }
        d.css("opacity", r.disconnected || r.dead ? 0.3 : 1);
      }
      m.css("display", "block");
      this.teamSelectors[e].prevStatus = r;
      this.teamSelectors[e].prevHealth = i;
    }
  }
  clearTeamUI() {
    c(".ui-team-member").css("display", "none");
    c(".ui-team-indicator").css("display", "none");
    c(".ui-team-member-name").removeAttr("style");
    c(".ui-team-member-status").removeAttr("style");
    c(".ui-team-member-status").removeClass("ui-team-member-status-downed ui-team-member-status-dead ui-team-member-status-disconnected icon-pulse");
    this.teamSelectors = [];
  }
  resize(e, t) {
    this.screenScaleFactor = v.uiLayout == v.UiLayout.Sm ? 0.5626 : z.min(1, z.clamp(t.LCRnPO / 1280, 0.75, 1) * z.clamp(t.gMqwV / 1024, 0.75, 1));
    this.DCc.resize(this.touch, this.screenScaleFactor);
    this.gasRenderer.resize();
    this.mapSprite.texture = e.getMapTexture();
    let i = z.min(1, z.min(t.LCRnPO / 1200, t.gMqwV / 900));
    this.roleMenuElem.css("transform", `translateX(-50%) translateY(-50%) scale(${i})`);
    this.redraw(t);
  }
  redraw(e) {
    let t = e.LCRnPO;
    let i = e.gMqwV;
    let r = this.getMinimapMargin();
    let a = 0;
    let l = 0;
    if (v.model == "iphonex") {
      if (v.isLandscape) {
        a += 28;
      } else {
        l += 32;
      }
    }
    let s = this.getMinimapSize();
    let m = this.getMinimapBorderWidth();
    let d = v.uiLayout == v.UiLayout.Sm;
    this.display.border.clear();
    this.container.mask?.clear();
    if (this.bigmapDisplayed) {
      let h = z.min(t, i);
      this.mapSprite.width = h;
      this.mapSprite.height = h;
      this.mapSprite.x = t / 2;
      this.mapSprite.y = i / 2;
      this.mapSprite.alpha = 1;
      this.container.mask.beginFill(16777215, 1);
      this.container.mask.drawRect(this.mapSprite.x - this.mapSprite.width / 2, this.mapSprite.y - this.mapSprite.height / 2, this.mapSprite.width, this.mapSprite.height);
      this.container.mask.endFill();
      if (v.touch) {
        this.bigmapCollision.css({
          width: i,
          height: t
        });
      }
    } else {
      let h = this.screenScaleFactor * 1600 / 1.2;
      let p = s * this.screenScaleFactor;
      this.mapSprite.width = h;
      this.mapSprite.height = h;
      this.mapSprite.alpha = 0.8;
      let w = {
        zoom: this.screenScaleFactor
      };
      if (document.body) {
        if ("WebkitTransform" in document.body.style) {
          w = {
            "-webkit-transform": `scale(${this.screenScaleFactor})`
          };
        } else if ("transform" in document.body.style) {
          w = {
            transform: `scale(${this.screenScaleFactor})`
          };
        }
      }
      this.mapContainer.css(w);
      this.mapContainer.css("bottom", this.mapContainerBottom * this.screenScaleFactor);
      let f = d ? p / 2 + r : i - p / 2 - r;
      this.minimapPos.x = r + p / 2 + a;
      this.minimapPos.y = f + l;
      this.display.border.lineStyle(m, 0);
      this.display.border.beginFill(0, 0);
      let S = d ? r + m / 2 : i - p - r + m / 2;
      this.display.border.drawRect(r + m / 2 + a, S + l, p - m, p - m);
      this.display.border.endFill();
      let x = d ? r : i - p - r;
      this.container.mask.beginFill(16777215, 1);
      this.container.mask.drawRect(r + a, x - 0.5 + l, p, p);
      this.container.mask.endFill();
    }
  }
  toggleEscMenu(e = false) {
    if (!this.displayingStats) {
      if (this.escMenuDisplayed || e) {
        this.escMenuDisplayed = false;
        this.escMenuElem.css("display", "none");
        this.setCurrentGameTab("settings");
        c("#ui-center").off("mouseenter mouseleave");
        this.inputBinds.menuHovered = false;
        if (this.roleMenuActive) {
          this.displayRoleMenu();
        }
      } else if (this.bigmapDisplayed) {
        this.displayMapLarge(true);
      } else {
        if (this.visibilityMode == 2) {
          this.cycleVisibilityMode();
        }
        this.escMenuDisplayed = true;
        this.escMenuElem.css("display", "block");
        c("#ui-center").hover(() => {
          this.inputBinds.menuHovered = true;
        }, () => {
          this.inputBinds.menuHovered = false;
        });
        this.inputBinds.menuHovered = false;
        if (this.roleMenuActive) {
          this.hideRoleMenu();
        }
      }
    }
  }
  setCurrentGameTab(e) {
    this.currentGameTab = e;
    this.gameTabs.css("display", "none");
    this.gameTabBtns.removeClass("btn-game-menu-selected");
    c(`#ui-game-tab-${this.currentGameTab}`).css("display", "block");
    c(`#btn-game-${this.currentGameTab}`).addClass("btn-game-menu-selected");
    if (this.currentGameTab == "keybinds") {
      this.inputBindUi.refresh();
    } else {
      this.inputBindUi.cancelBind();
    }
  }
  setRoleMenuActive(e) {
    this.roleMenuActive = e;
    if (this.roleMenuActive) {
      this.roleMenuTicker = 20;
      this.displayRoleMenu();
    } else {
      if (this.roleMenuInst) {
        this.audioManager.stopSound(this.roleMenuInst);
        this.roleMenuInst = null;
      }
      this.hideRoleMenu();
    }
  }
  displayRoleMenu() {
    this.roleMenuElemWrapper.css("display", "block");
  }
  hideRoleMenu() {
    this.roleMenuElemWrapper.css("display", "none");
  }
  setRoleMenuOptions(e, t) {
    c("#ui-role-header").html("");
    for (let r = 0; r < t.length; r++) {
      let a = t[r];
      let l = B[a];
      let s = c("<div/>", {
        class: "ui-role-option",
        "data-role": a
      });
      s.css({
        "background-image": `url('${l.guiImg}')`
      });
      c("#ui-role-header").append(s);
    }
    c(".ui-role-option").on("click", r => {
      r.stopPropagation();
      let a = c(r.currentTarget);
      this.setRoleMenuInfo(a.data("role"));
    });
    let i = t[0];
    if (t.includes(e)) {
      i = e;
    }
    this.setRoleMenuInfo(i);
  }
  setRoleMenuInfo(e) {
    let t = B[e];
    c(".ui-role-option").css({
      "background-size": 132,
      opacity: 0.5
    });
    c("#ui-role-header").find(`[data-role=${e}]`).css({
      "background-size": 164,
      opacity: 1
    });
    let i = c("<div/>", {
      class: "ui-role-body-left"
    });
    let r = c("<div/>", {
      class: "ui-role-body-name"
    });
    let a = c("<div/>", {
      class: "ui-role-body-image"
    });
    let l = this.localization.translate(`game-${e}`);
    r.html(l);
    a.css({
      "background-image": `url('${t.guiImg}')`
    });
    let s = t.color ? $.colorToHexString(t.color) : "default";
    this.roleMenuElem.css("border-color", s);
    i.append(r).append(a);
    let m = c("<div/>", {
      class: "ui-role-body-right"
    });
    let d = t.perks;
    for (let h = 0; h < d.length; h++) {
      let p = d[h];
      let w = c("<div/>", {
        class: "ui-role-body-perk"
      });
      let f = c("<div/>", {
        class: "ui-role-body-perk-image-wrapper"
      }).append(c("<div/>", {
        class: "ui-role-body-perk-image-icon"
      }));
      let S = c("<div/>", {
        class: "ui-role-body-perk-name"
      });
      let x = $.getSvgFromGameType(p instanceof Function ? p() : p);
      f.find(".ui-role-body-perk-image-icon").css({
        "background-image": `url('${x}')`
      });
      let y = this.localization.translate(`game-${p}`);
      S.html(y);
      w.append(f).append(S);
      m.append(w);
    }
    c("#ui-role-body").html("").append(i).append(m);
    this.roleDisplayed = e;
  }
}
let sr = 6;
let yi = 750;
let or = 3;
let _s = {
  [R.WeaponSlot.Primary]: A.EquipPrimary,
  [R.WeaponSlot.Secondary]: A.EquipSecondary,
  [R.WeaponSlot.Melee]: A.EquipMelee,
  [R.WeaponSlot.Throwable]: A.EquipThrowable
};
function J(u) {
  return document.getElementById(u);
}
function xi(u) {
  return u.button == 0;
}
function zi(u) {
  if ("which" in u) {
    return u.which == 3;
  } else {
    return u.button == 2;
  }
}
function Lt(u, e, t) {
  if (u instanceof Array) {
    for (let i = 0; i < u.length; i++) {
      Lt(u[i], t !== undefined ? e[t] : e, i);
    }
  } else if (u instanceof Object) {
    let i = Object.keys(u);
    for (let r = 0; r < i.length; r++) {
      let a = i[r];
      Lt(u[a], t !== undefined ? e[t] : e, a);
    }
  } else {
    e[t] = u;
  }
}
function At(u, e, t) {
  if (e instanceof Array) {
    let i = [];
    for (let r = 0; r < e.length; r++) {
      i[r] = At(u[r], e[r], t);
    }
    return i;
  }
  if (e instanceof Object) {
    let i = {};
    let r = Object.keys(e);
    for (let a = 0; a < r.length; a++) {
      let l = r[a];
      i[l] = At(u[l], e[l], t);
    }
    return i;
  }
  return u != e || t;
}
function lr() {
  let u = Object.keys(B);
  let e = [];
  for (let t = 0; t < u.length; t++) {
    let i = u[t];
    let r = B[i];
    if (!r.hideUi && (r.type == "heal" || r.type == "boost" || r.type == "ammo")) {
      e.push(i);
    }
  }
  return e;
}
class bi {
  mobile = false;
  touch = false;
  rareLootMessage = {
    lootType: "",
    ticker: 0,
    duration: 0,
    opacity: 0
  };
  pickupMessage = {
    message: "",
    ticker: 0,
    duration: 0,
    opacity: 0
  };
  killMessage = {
    text: "",
    count: "",
    ticker: 0,
    duration: 0,
    opacity: 0
  };
  killFeed = Array.from({
    length: sr
  }, () => ({
    text: "",
    color: "#000000",
    offset: 0,
    opacity: 0,
    ticker: Number.MAX_VALUE
  }));
  ammo = {
    current: 0,
    remaining: 0,
    displayCurrent: false,
    displayRemaining: false
  };
  interaction = {
    type: 0,
    text: "",
    key: "",
    usable: false
  };
  weapons = Array.from({
    length: R.WeaponSlot.Count
  }, (e, t) => ({
    slot: t,
    type: "",
    ammo: 0,
    equipped: false,
    selectable: false,
    opacity: 0,
    width: 0,
    ticker: 0,
    bind: _s[t],
    bindStr: ""
  }));
  scopes = kt.map(e => ({
    type: e,
    visible: false,
    equipped: false,
    selectable: false
  }));
  loot = lr().map(e => ({
    type: e,
    count: 0,
    maximum: 0,
    selectable: false,
    width: 0,
    ticker: 0
  }));
  perks = Array.from({
    length: or
  }, () => ({
    type: "",
    droppable: false,
    width: 0,
    ticker: 0,
    pulse: false
  }));
  gear = vt.map(e => ({
    type: e,
    item: "",
    selectable: false,
    width: 0,
    ticker: 0,
    rot: 0
  }));
  health = R.player.health;
  boost = 0;
  downed = false;
}
class Is {
  letructor(e, t) {
    this.localization = e;
    this.inputBinds = t;
    let i = this;
    for (let s = 0; s < sr; s++) {
      let m = `ui-killfeed-${s}`;
      let d = J(m);
      if (!d) {
        d = document.createElement("div");
        d.id = m;
        d.classList.add("killfeed-div");
        let h = document.createElement("div");
        h.classList.add("killfeed-text");
        d.appendChild(h);
        this.dom.killFeed.div.appendChild(d);
      }
      this.dom.killFeed.lines.push({
        line: d,
        text: d.firstElementChild
      });
    }
    for (let s = 0; s < R.WeaponSlot.Count; s++) {
      let m = J(`ui-weapon-id-${s + 1}`);
      let d = {
        div: m,
        type: m.getElementsByClassName("ui-weapon-name")[0],
        number: m.getElementsByClassName("ui-weapon-number")[0],
        image: m.getElementsByClassName("ui-weapon-image")[0],
        ammo: m.getElementsByClassName("ui-weapon-ammo-counter")[0]
      };
      this.dom.weapons.push(d);
    }
    for (let s = 0; s < kt.length; s++) {
      let m = kt[s];
      let d = {
        scopeType: m,
        div: J(`ui-scope-${m}`)
      };
      this.dom.scopes.push(d);
    }
    for (let s = lr(), m = 0; m < s.length; m++) {
      let d = s[m];
      let h = J(`ui-loot-${d}`);
      if (h) {
        let p = {
          lootType: d,
          div: h,
          count: h.getElementsByClassName("ui-loot-count")[0],
          image: h.getElementsByClassName("ui-loot-image")[0],
          overlay: h.getElementsByClassName("ui-loot-overlay")[0]
        };
        this.dom.loot.push(p);
      }
    }
    for (let s = 0; s < vt.length; s++) {
      let m = vt[s];
      let d = J(`ui-armor-${m}`);
      let h = {
        gearType: m,
        div: d,
        level: d.getElementsByClassName("ui-armor-level")[0],
        image: d.getElementsByClassName("ui-armor-image")[0]
      };
      this.dom.gear.push(h);
    }
    for (let s = 0; s < or; s++) {
      let m = J(`ui-perk-${s}`);
      let d = {
        perkType: "",
        div: m,
        divTitle: m.getElementsByClassName("tooltip-title")[0],
        divDesc: m.getElementsByClassName("tooltip-desc")[0],
        image: m.getElementsByClassName("ui-armor-image")[0]
      };
      this.dom.perks.push(d);
    }
    let r = (s, m, d) => {
      this.eventListeners.push({
        event: s,
        elem: m,
        fn: d
      });
      m.addEventListener(s, d);
    };
    let a = (s, m, d, h) => {
      this.itemActions.push({
        action: s,
        type: m,
        data: d,
        div: h,
        actionQueued: false,
        actionTime: 0
      });
    };
    for (let s = 0; s < this.dom.weapons.length; s++) {
      a("use", "weapon", s, this.dom.weapons[s].div);
      a("drop", "weapon", s, this.dom.weapons[s].div);
    }
    for (let s = 0; s < this.dom.scopes.length; s++) {
      let m = this.dom.scopes[s];
      a("use", "scope", m.scopeType, m.div);
      if (m.scopeType != "1xscope") {
        a("drop", "loot", m.scopeType, m.div);
      }
    }
    for (let s = 0; s < this.dom.loot.length; s++) {
      let m = this.dom.loot[s];
      let d = B[m.lootType];
      if (d.type == "heal" || d.type == "boost") {
        a("use", "loot", m.lootType, m.div);
      }
      a("drop", "loot", m.lootType, m.div);
    }
    for (let s = 0; s < this.dom.gear.length; s++) {
      let m = this.dom.gear[s];
      if (m.gearType != "backpack") {
        a("drop", "loot", m.gearType, m.div);
      }
    }
    for (let s = 0; s < this.dom.perks.length; s++) {
      a("drop", "perk", s, this.dom.perks[s].div);
    }
    for (let s = 0; s < this.itemActions.length; s++) {
      let m = this.itemActions[s];
      r("mousedown", m.div, d => {
        if (m.action == "use" && xi(d) || m.action == "drop" && zi(d)) {
          d.stopPropagation();
          m.actionQueued = true;
        }
      });
      r("mouseup", m.div, d => {
        if (m.actionQueued && (m.action == "use" && xi(d) || m.action == "drop" && zi(d))) {
          d.stopPropagation();
          this.pushAction(m);
          m.actionQueued = false;
        }
      });
      r("touchstart", m.div, d => {
        if (d.changedTouches.length > 0) {
          d.stopPropagation();
          m.actionQueued = true;
          m.actionTime = new Date().getTime();
          m.touchOsId = d.changedTouches[0].identifier;
        }
      });
      r("touchend", m.div, d => {
        if (new Date().getTime() - m.actionTime < yi && m.actionQueued && m.action == "use") {
          this.pushAction(m);
        }
        m.actionQueued = false;
      });
      r("touchcancel", m.div, d => {
        m.actionQueued = false;
      });
    }
    let l = document.getElementById("cvs");
    this.clearQueuedItemActions = () => {
      for (let s = 0; s < this.itemActions.length; s++) {
        this.itemActions[s].actionQueued = false;
      }
      if (v.touch) {
        l.focus();
      }
    };
    window.addEventListener("mouseup", this.clearQueuedItemActions);
    window.addEventListener("focus", this.clearQueuedItemActions);
    this.onKeyUp = s => {
      let m = s.which || s.keyCode;
      let d = i.inputBinds.getBind(A.Fullscreen);
      if (d && m == d.code) {
        $.toggleFullScreen();
      }
    };
    window.addEventListener("keyup", this.onKeyUp);
  }
  oldState = new bi();
  newState = new bi();
  frameCount = 0;
  dom = {
    debugButton: J("ui-debug-button"),
    emoteButton: J("ui-emote-button"),
    menu: {
      touchStyles: J("btn-touch-styles"),
      aimLine: J("btn-game-aim-line")
    },
    rareLootMessage: {
      icon: J("ui-perk-message-image-icon"),
      imageWrapper: J("ui-perk-message-image-wrapper"),
      wrapper: J("ui-perk-message-wrapper"),
      name: J("ui-perk-message-name"),
      desc: J("ui-perk-message-acquired")
    },
    pickupMessage: J("ui-pickup-message"),
    killMessage: {
      div: J("ui-kills"),
      text: J("ui-kill-text"),
      count: J("ui-kill-count")
    },
    killFeed: {
      div: J("ui-killfeed-contents"),
      lines: []
    },
    weapons: [],
    ammo: {
      current: J("ui-current-clip"),
      remaining: J("ui-remaining-ammo"),
      reloadButton: J("ui-reload-button-container")
    },
    interaction: {
      div: J("ui-interaction"),
      key: J("ui-interaction-press"),
      text: J("ui-interaction-description")
    },
    health: {
      inner: J("ui-health-actual"),
      depleted: J("ui-health-depleted")
    },
    boost: {
      div: J("ui-boost-counter"),
      bars: [J("ui-boost-counter-0").firstElementChild, J("ui-boost-counter-1").firstElementChild, J("ui-boost-counter-2").firstElementChild, J("ui-boost-counter-3").firstElementChild]
    },
    scopes: [],
    loot: [],
    gear: [],
    perks: []
  };
  rareLootMessageQueue = [];
  uiEvents = [];
  eventListeners = [];
  clearQueuedItemActions;
  onKeyUp;
  itemActions = [];
  HJMxT() {
    for (let e = 0; e < this.eventListeners.length; e++) {
      let t = this.eventListeners[e];
      t.elem.removeEventListener(t.event, t.fn);
    }
    window.removeEventListener("focus", this.clearQueuedItemActions);
    window.removeEventListener("mouseup", this.clearQueuedItemActions);
    window.removeEventListener("keyup", this.onKeyUp);
  }
  pushAction(e) {
    this.uiEvents.push({
      action: e.action,
      type: e.type,
      data: e.data
    });
  }
  flushInput() {
    this.uiEvents = [];
  }
  PEHQLt(e, t, i, r, a, l, s) {
    let m = this.newState;
    m.mobile = v.mobile;
    m.touch = v.touch;
    if (m.touch) {
      for (let L = 0; L < this.itemActions.length; L++) {
        let _ = this.itemActions[L];
        if (_.actionQueued && _.action == "drop") {
          let T = new Date().getTime();
          if (T - _.actionTime >= yi) {
            this.pushAction(_);
            _.actionTime = T;
            _.actionQueued = false;
          }
        }
      }
    }
    if (m.rareLootMessage.ticker >= m.rareLootMessage.duration && this.rareLootMessageQueue.length > 0) {
      let L = this.rareLootMessageQueue.shift();
      m.rareLootMessage.lootType = L;
      m.rareLootMessage.ticker = 0;
      m.rareLootMessage.duration = this.rareLootMessageQueue.length > 0 ? 2 : 4;
      m.rareLootMessage.opacity = 0;
    }
    m.rareLootMessage.ticker += e;
    let d = m.rareLootMessage.ticker;
    let h = m.rareLootMessage.duration;
    m.rareLootMessage.opacity = 1 - z.smoothstep(d, h - 0.2, h);
    m.pickupMessage.ticker += e;
    let p = m.pickupMessage.ticker;
    let w = m.pickupMessage.duration;
    m.pickupMessage.opacity = z.smoothstep(p, 0, 0.2) * (1 - z.smoothstep(p, w, w + 0.2)) * (1 - m.rareLootMessage.opacity);
    m.killMessage.ticker += e;
    let f = m.killMessage.ticker;
    let S = m.killMessage.duration;
    m.killMessage.opacity = (1 - z.smoothstep(f, S - 0.2, S)) * (1 - m.rareLootMessage.opacity);
    let x = 0;
    for (let L = 0; L < m.killFeed.length; L++) {
      let _ = m.killFeed[L];
      _.ticker += e;
      let T = _.ticker;
      _.offset = x;
      _.opacity = z.smoothstep(T, 0, 0.25) * (1 - z.smoothstep(T, 6, 6.5));
      x += z.min(T / 0.25, 1);
      if (v.mobile) {
        _.opacity = T < 6.5 ? 1 : 0;
      }
    }
    m.health = t.iDmhea.XRQji ? 0 : z.max(t.alkER.vSiCK, 1);
    m.boost = t.alkER.iIN;
    m.downed = t.iDmhea.ZFRZY;
    let y = 0;
    let C = null;
    let P = true;
    if (t.canInteract(l)) {
      let L = null;
      let _ = 0;
      let T = l.fBXVaI.idcTHu();
      for (let q = 0; q < T.length; q++) {
        let Z = T[q];
        if (Z.active && !Z.dead && g.sameLayer(Z.layer, t.layer)) {
          let O = Z.getInteraction();
          if (O) {
            let N = X.intersectCircle(Z.collider, t.iDmhea.aznZwb, O.rad + t.LnvK);
            if (N && N.pen >= _) {
              L = Z;
              _ = N.pen;
            }
          }
        }
      }
      if (L) {
        y = 4;
        C = L;
        P = true;
      }
      let V = a.getClosestLoot();
      if (V && !t.iDmhea.ZFRZY) {
        let q = B[V.type];
        let Z = t.eBb(R.WeaponSlot.Primary);
        let O = t.eBb(R.WeaponSlot.Secondary);
        let N = Z && O;
        let U = q.type != "gun" || !N || t.oenro() == "gun";
        let te = false;
        if (m.touch && q.type == "helmet" && t.imQkUx() == q.level && V.type != t.iDmhea.ODVGwj || q.type == "chest" && t.Fte() == q.level && V.type != t.iDmhea.psCic) {
          te = true;
        }
        if (U || v.uiLayout == v.UiLayout.Sm) {
          y = 2;
          C = V;
        }
        P = U && (!m.touch || q.type == "gun" || q.type == "melee" || q.type == "outfit" || q.type == "perk" || te);
      }
      let j = t.EAO("self_revive");
      if (t.KXvZTW.type == ie.None && (!t.iDmhea.ZFRZY || j)) {
        let q = r.getPlayerInfo(t.__id).teamId;
        let Z = r.playerPool.idcTHu();
        for (let O = 0; O < Z.length; O++) {
          let N = Z[O];
          if (N.active) {
            let U = r.getPlayerInfo(N.__id).teamId;
            if ((N.__id != t.__id || j) && q == U && N.iDmhea.ZFRZY && !N.iDmhea.XRQji && N.KXvZTW.type != ie.Revive && n.length(n.sub(N.iDmhea.aznZwb, t.iDmhea.aznZwb)) < R.player.reviveRange && g.sameLayer(N.layer, t.layer)) {
              y = 3;
              C = N;
              P = true;
            }
          }
        }
      }
      if (t.KXvZTW.type == ie.Revive && t.iDmhea.ZFRZY && !j) {
        y = 0;
        C = null;
        P = false;
      }
      if ((t.KXvZTW.type == ie.UseItem || t.KXvZTW.type == ie.Revive && (!t.iDmhea.ZFRZY || j)) && !i) {
        y = 1;
        C = null;
        P = true;
      }
    }
    m.interaction.type = y;
    m.interaction.text = this.getInteractionText(y, C, t);
    m.interaction.key = this.getInteractionKey(y);
    m.interaction.usable = P && !i;
    for (let L = 0; L < t.alkER.iomTK.length; L++) {
      let _ = t.alkER.iomTK[L];
      let T = m.weapons[L];
      T.type = _.type;
      T.ammo = _.ammo;
      if (L == R.WeaponSlot.Throwable) {
        T.ammo = t.alkER.xSjUw[_.type] || 0;
      }
      let V = T.equipped;
      T.equipped = L == t.alkER.rgEC;
      T.selectable = (_.type != "" || L == 0 || L == 1) && !i;
      let j = T.equipped ? 1 : 0.6;
      let q = j - T.opacity;
      let Z = z.min(q, z.sign(q) * e / 0.15);
      T.opacity = z.clamp(T.opacity + Z, 0, 1);
      if (v.mobile) {
        T.opacity = j;
      }
      if (T.type == "bugle" && T.ammo == 0) {
        T.opacity = 0.25;
      }
      T.ticker += e;
      if (!T.equipped || !V) {
        T.ticker = 0;
      }
      if (this.frameCount < 2) {
        T.ticker = 1;
      }
      let O = z.min(T.ticker / 0.09, Math.PI);
      let N = Math.sin(O);
      T.width = N < 0.001 ? 0 : N;
      if (v.mobile) {
        T.width = 0;
      }
      let U = s.getBind(T.bind);
      T.bindStr = U ? U.toString() : "";
    }
    let k = m.weapons[t.alkER.rgEC];
    let b = B[k.type];
    let M = k.ammo;
    let E = b.type == "gun" ? b.ammoInfinite || t.EAO("endless_ammo") && !b.ignoreEndlessAmmo ? Number.MAX_VALUE : t.alkER.xSjUw[b.ammo] : 0;
    m.ammo.current = M;
    m.ammo.remaining = E;
    m.ammo.displayCurrent = b.type != "melee";
    m.ammo.displayRemaining = E > 0;
    for (let L = 0; L < m.scopes.length; L++) {
      let _ = m.scopes[L];
      _.visible = t.alkER.xSjUw[_.type] > 0;
      _.equipped = _.visible && t.alkER.oupk == _.type;
      _.selectable = _.visible && !i;
    }
    for (let L = t.zNli(), _ = 0; _ < m.loot.length; _++) {
      let T = m.loot[_];
      let V = T.count;
      T.count = t.alkER.xSjUw[T.type] || 0;
      T.maximum = R.bagSizes[T.type][L];
      T.selectable = T.count > 0 && !i;
      if (T.count > V) {
        T.ticker = 0;
      }
      if (this.frameCount < 2) {
        T.ticker = 1;
      }
      T.ticker += e;
      let j = z.min(T.ticker / 0.05, Math.PI);
      let q = Math.sin(j);
      T.width = q < 0.001 ? 0 : q;
      if (v.mobile) {
        T.width = 0;
      }
    }
    for (let L = 0; L < m.gear.length; L++) {
      let _ = m.gear[L];
      let T = "";
      if (_.type == "chest") {
        T = t.iDmhea.psCic;
      } else if (_.type == "helmet") {
        T = t.iDmhea.ODVGwj;
      } else if (_.type == "backpack" && (T = t.iDmhea.QvFXYQ) == "backpack00") {
        T = "";
      }
      let V = _.item;
      _.item = T;
      _.selectable = T != "" && !i;
      if (V != _.item) {
        _.ticker = 0;
      }
      if (this.frameCount < 2) {
        _.ticker = 1;
      }
      _.ticker += e;
      let j = z.min(_.ticker / 0.05, Math.PI);
      let q = Math.sin(j);
      _.width = q < 0.001 ? 0 : q;
      if (v.mobile) {
        _.width = 0;
      }
    }
    for (let L = 0; L < m.perks.length; L++) {
      let _ = m.perks[L];
      if (t.perks.length > L) {
        let T = t.perks[L];
        _.type = T.type;
        _.droppable = T.droppable;
        if (T.isNew) {
          _.ticker = 0;
        }
        if (this.frameCount < 2) {
          _.ticker = 1;
        }
        _.ticker += e;
        let V = z.min(_.ticker / 0.05, Math.PI);
        let j = Math.sin(V);
        _.width = j < 0.001 ? 0 : j;
        if (v.mobile) {
          _.width = 0;
        }
        _.pulse = !v.mobile && _.ticker < 4;
      } else {
        _.type = "";
      }
    }
    let D = At(this.oldState, this.newState, this.frameCount++ == 0);
    this.render(D, this.newState);
    Lt(this.newState, this.oldState);
  }
  render(e, t) {
    let i = this.dom;
    if (e.touch) {
      i.interaction.key.style.backgroundImage = t.touch ? "url('img/gui/tap.svg')" : "none";
      if (t.touch) {
        i.interaction.key.innerHTML = "";
      }
      i.menu.touchStyles.style.display = t.touch ? "flex" : "none";
      i.menu.aimLine.style.display = t.touch ? "block" : "none";
      i.ammo.reloadButton.style.display = t.touch ? "block" : "none";
      i.emoteButton.style.display = t.touch ? "block" : "none";
      if (i.debugButton) {
        i.debugButton.style.display = t.touch ? "block" : "none";
      }
    }
    if (e.rareLootMessage.lootType) {
      let r = t.rareLootMessage.lootType;
      let a = B[r];
      if (a && a.type == "xp") {
        let d = this.localization.translate("game-xp-drop-desc");
        i.rareLootMessage.desc.innerHTML = `+${a.xp} ${d}`;
      } else {
        i.rareLootMessage.desc.innerHTML = "";
      }
      let l = a?.lootImg?.border ? `url(img/loot/${a.lootImg.border.slice(0, -4)}.svg)` : "none";
      i.rareLootMessage.imageWrapper.style.backgroundImage = l;
      let s = $.getSvgFromGameType(r);
      i.rareLootMessage.icon.style.backgroundImage = s ? `url('${s}')` : "none";
      let m = this.localization.translate(`game-${r}`);
      i.rareLootMessage.name.innerHTML = m;
    }
    if (e.rareLootMessage.opacity) {
      i.rareLootMessage.wrapper.style.opacity = String(t.rareLootMessage.opacity);
    }
    if (e.pickupMessage.message) {
      i.pickupMessage.innerHTML = t.pickupMessage.message;
    }
    if (e.pickupMessage.opacity) {
      i.pickupMessage.style.opacity = String(t.pickupMessage.opacity);
    }
    if (e.killMessage.text || e.killMessage.count) {
      i.killMessage.text.innerHTML = t.killMessage.text;
      i.killMessage.count.innerHTML = t.killMessage.count;
    }
    if (e.killMessage.opacity) {
      i.killMessage.div.style.opacity = String(t.killMessage.opacity);
    }
    for (let r = 0; r < e.killFeed.length; r++) {
      let a = e.killFeed[r];
      let l = i.killFeed.lines[r];
      let s = t.killFeed[r];
      if (a.text) {
        l.text.innerHTML = s.text;
      }
      if (a.offset) {
        let m = v.uiLayout != v.UiLayout.Sm || v.tablet ? 35 : 15;
        l.line.style.top = `${Math.floor(s.offset * m)}px`;
      }
      if (a.color) {
        l.text.style.color = s.color;
      }
      if (a.opacity) {
        l.line.style.opacity = String(s.opacity);
      }
    }
    if (e.health || e.downed) {
      let r = [{
        health: 100,
        color: [179, 179, 179]
      }, {
        health: 100,
        color: [255, 255, 255]
      }, {
        health: 75,
        color: [255, 255, 255]
      }, {
        health: 75,
        color: [255, 158, 158]
      }, {
        health: 25,
        color: [255, 82, 82]
      }, {
        health: 25,
        color: [255, 0, 0]
      }, {
        health: 0,
        color: [255, 0, 0]
      }];
      let a = 0;
      let l = Math.ceil(t.health);
      while (r[a].health > l && a < r.length - 1) {
        a++;
      }
      let s = r[z.max(a - 1, 0)];
      let m = r[a];
      let d = z.delerp(t.health, s.health, m.health);
      let h = [Math.floor(z.lerp(d, s.color[0], m.color[0])), Math.floor(z.lerp(d, s.color[1], m.color[1])), Math.floor(z.lerp(d, s.color[2], m.color[2]))];
      if (t.downed) {
        h = [255, 0, 0];
      }
      i.health.inner.style.backgroundColor = `rgba(${h[0]}, ${h[1]}, ${h[2]}, 1.0)`;
      i.health.inner.style.width = `${t.health}%`;
      i.health.depleted.style.width = `${t.health}%`;
      i.health.depleted.style.display = t.health > 0 ? "block" : "none";
      if (t.health > 25) {
        i.health.inner.classList.remove("ui-bar-danger");
      } else {
        i.health.inner.classList.add("ui-bar-danger");
      }
    }
    if (e.boost) {
      let r = R.player.boostBreakpoints;
      let a = 0;
      for (let l = 0; l < r.length; l++) {
        a += r[l];
      }
      for (let l = t.boost / 100, s = 0; s < i.boost.bars.length; s++) {
        let m = r[s] / a;
        let d = z.clamp(l / m, 0, 1);
        l = z.max(l - m, 0);
        i.boost.bars[s].style.width = `${d * 100}%`;
      }
      i.boost.div.style.opacity = String(t.boost == 0 ? 0 : 1);
    }
    if (e.interaction.type) {
      i.interaction.div.style.display = t.interaction.type == 0 ? "none" : "flex";
    }
    if (e.interaction.text) {
      i.interaction.text.innerHTML = t.interaction.text;
    }
    if (e.interaction.key) {
      i.interaction.key.innerHTML = t.touch ? "" : t.interaction.key;
      i.interaction.key.className = i.interaction.key.innerHTML.length > 1 ? "ui-interaction-small" : "ui-interaction-large";
    }
    if (e.interaction.usable) {
      i.interaction.key.style.display = t.interaction.usable ? "block" : "none";
    }
    for (let r = 0; r < e.weapons.length; r++) {
      let a = e.weapons[r];
      let l = i.weapons[r];
      let s = t.weapons[r];
      if (a.type) {
        let m = "";
        let d = "";
        let h = B[s.type];
        if (h) {
          m = this.localization.translate(`game-hud-${s.type}`) || this.localization.translate(`game-${s.type}`);
          d = $.getCssTransformFromGameType(s.type);
        }
        l.type.innerHTML = m;
        l.image.src = $.getSvgFromGameType(s.type);
        l.image.style.display = h ? "inline" : "none";
        l.image.style.transform = d;
      }
      if (a.equipped) {
        l.div.style.backgroundColor = s.equipped ? "rgba(0, 0, 0, 0.4)" : "rgba(0, 0, 0, 0)";
      }
      if (a.selectable) {
        l.div.style.pointerEvents = s.type != "" || s.selectable ? "auto" : "none";
      }
      if (a.width) {
        let m = z.lerp(s.width, 83.33, 100);
        l.div.style.width = `${m}%`;
      }
      if (a.opacity) {
        l.div.style.opacity = String(s.opacity);
      }
      if (a.ammo && l.ammo) {
        l.ammo.innerHTML = String(s.ammo);
        l.ammo.style.display = s.ammo > 0 ? "block" : "none";
      }
      if (a.bindStr) {
        l.number.innerHTML = s.bindStr[0] || "";
      }
    }
    if (e.ammo.current) {
      let r = t.ammo.current;
      i.ammo.current.innerHTML = String(r);
      i.ammo.current.style.color = r > 0 ? "white" : "red";
    }
    if (e.ammo.remaining) {
      let r = t.ammo.remaining;
      i.ammo.remaining.innerHTML = String(r == Number.MAX_VALUE ? "&#8734;" : r);
      i.ammo.remaining.style.color = r != 0 ? "white" : "red";
    }
    if (e.ammo.displayCurrent) {
      i.ammo.current.style.opacity = String(t.ammo.displayCurrent ? 1 : 0);
    }
    if (e.ammo.displayRemaining) {
      i.ammo.remaining.style.opacity = String(t.ammo.displayRemaining ? 1 : 0);
      i.ammo.reloadButton.style.opacity = String(t.ammo.displayRemaining ? 1 : 0);
    }
    for (let r = 0; r < e.scopes.length; r++) {
      let a = e.scopes[r];
      let l = i.scopes[r];
      let s = t.scopes[r];
      if (a.visible) {
        if (s.visible) {
          l.div.classList.remove("ui-hidden");
        } else {
          l.div.classList.add("ui-hidden");
        }
      }
      if (a.equipped) {
        if (s.equipped) {
          l.div.classList.add("ui-zoom-active");
          l.div.classList.remove("ui-zoom-inactive");
        } else {
          l.div.classList.remove("ui-zoom-active");
          l.div.classList.add("ui-zoom-inactive");
        }
      }
      if (a.selectable) {
        l.div.style.pointerEvents = s.selectable ? "auto" : "none";
      }
    }
    for (let r = 0; r < e.loot.length; r++) {
      let a = e.loot[r];
      let l = i.loot[r];
      let s = t.loot[r];
      if (a && l && s) {
        if (a.count || a.maximum) {
          l.count.innerHTML = String(s.count);
          l.div.style.opacity = String(B[l.lootType].special && s.count == 0 ? 0 : s.count > 0 ? 1 : 0.25);
          l.div.style.color = s.count == s.maximum ? "#ff9900" : "#ffffff";
        }
        if (a.width) {
          let m = 1 + s.width * 0.33;
          let d = `scale(${m}, ${m})`;
          l.image.style.transform = d;
          if (l.overlay) {
            l.overlay.style.transform = d;
          }
        }
        if (a.selectable) {
          l.div.style.pointerEvents = s.selectable ? "auto" : "none";
        }
      }
    }
    for (let r = 0; r < e.gear.length; r++) {
      let a = e.gear[r];
      let l = i.gear[r];
      let s = t.gear[r];
      if (a.item) {
        let m = s.item ? B[s.item] : null;
        let d = m ? m.level : 0;
        l.div.style.display = m ? "block" : "none";
        l.level.innerHTML = this.localization.translate(`game-level-${d}`);
        l.level.style.color = d >= 3 ? "#ff9900" : "#ffffff";
        l.image.src = $.getSvgFromGameType(s.item);
      }
      if (a.selectable) {
        l.div.style.pointerEvents = s.selectable ? "auto" : "none";
      }
      if (a.width) {
        let m = 1 + s.width * 0.33;
        let d = `scale(${m}, ${m})`;
        let h = B[s.item];
        if (h?.lootImg.rot !== undefined) {
          d += ` rotate(${h.lootImg.rot}rad)`;
        }
        l.image.style.transform = d;
      }
    }
    for (let r = 0; r < e.perks.length; r++) {
      let a = e.perks[r];
      let l = i.perks[r];
      let s = t.perks[r];
      if (a.type) {
        l.perkType = s.type;
        l.divTitle.innerHTML = this.localization.translate(`game-${s.type}`);
        l.divDesc.innerHTML = this.localization.translate(`game-${s.type}-desc`);
        l.div.style.display = s.type ? "block" : "none";
        l.image.src = s.type ? $.getSvgFromGameType(s.type) : "";
      }
      if (a.droppable) {
        if (s.droppable) {
          l.div.classList.add("ui-outline-hover");
          l.div.classList.remove("ui-perk-no-drop");
        } else {
          l.div.classList.remove("ui-outline-hover");
          l.div.classList.add("ui-perk-no-drop");
        }
      }
      if (a.pulse) {
        if (s.pulse) {
          l.div.classList.add("ui-perk-pulse");
        } else {
          l.div.classList.remove("ui-perk-pulse");
        }
      }
      if (a.width) {
        let m = 1 + s.width * 0.33;
        l.image.style.transform = `scale(${m}, ${m})`;
      }
    }
  }
  displayPickupMessage(e) {
    let t = this.newState.pickupMessage;
    t.message = this.getPickupMessageText(e);
    t.ticker = 0;
    t.duration = 3;
  }
  displayKillMessage(e, t) {
    let i = this.newState.killMessage;
    i.text = e;
    i.count = t;
    i.ticker = 0;
    i.duration = 7;
  }
  hideKillMessage() {
    this.newState.killMessage.ticker = z.max(this.newState.killMessage.ticker, this.newState.killMessage.duration - 0.2);
  }
  addRareLootMessage(e, t) {
    if (t) {
      this.newState.rareLootMessage.ticker = this.newState.rareLootMessage.duration;
      this.rareLootMessageQueue = [];
    }
    this.rareLootMessageQueue.push(e);
  }
  removeRareLootMessage(e) {
    let t = this.rareLootMessageQueue.indexOf(e);
    if (t >= 0) {
      this.rareLootMessageQueue.splice(t, 1);
    }
    if (this.newState.rareLootMessage.lootType == e) {
      this.newState.rareLootMessage.ticker = this.newState.rareLootMessage.duration;
    }
  }
  getRareLootMessageText(e) {
    if (B[e]) {
      return `Acquired perk: ${this.localization.translate(`game-${e}`)}`;
    } else {
      return "";
    }
  }
  addKillFeedMessage(e, t) {
    let i = this.newState.killFeed;
    let r = i[i.length - 1];
    r.text = e;
    r.color = t;
    r.ticker = 0;
    i.sort((a, l) => a.ticker - l.ticker);
  }
  getKillFeedText(e, t, i, r, a) {
    switch (r) {
      case Be.Player:
        return `${t} ${this.localization.translate(a ? "game-knocked-out" : "game-killed")} ${e} ${this.localization.translate("game-with")} ${this.localization.translate(`game-${i}`)}`;
      case Be.Bleeding:
        {
          let l = this.localization.translate(t ? "game-finally-killed" : "game-finally-bled-out");
          if (t) {
            return `${t} ${l} ${e}`;
          } else {
            return `${e} ${l}`;
          }
        }
      case Be.Gas:
        {
          let l;
          let s;
          if (a) {
            l = this.localization.translate("game-the-red-zone");
            s = this.localization.translate("game-knocked-out");
          } else {
            s = this.localization.translate(t ? "game-finally-killed" : "game-died-outside");
          }
          if (l) {
            return `${l} ${s} ${e}`;
          } else {
            return `${e} ${s}`;
          }
        }
      case Be.Airdrop:
        {
          let l = re[i];
          let s = this.localization.translate("game-the-air-drop");
          let m = a ? this.localization.translate("game-knocked-out") : l && !l.airdropCrate ? this.localization.translate("game-killed") : this.localization.translate("game-crushed");
          return `${s} ${m} ${e}`;
        }
      case Be.Airstrike:
        {
          let l = this.localization.translate(a ? "game-knocked-out" : "game-killed");
          if (t) {
            return `${t} ${l} ${e} ${this.localization.translate("game-with")} ${this.localization.translate("game-an-air-strike")}`;
          } else {
            return `${this.localization.translate("game-the-air-strike")} ${l} ${e}`;
          }
        }
      default:
        return "";
    }
  }
  getKillFeedColor(e, t, i, r) {
    if (r) {
      return "#efeeee";
    } else if (e == t) {
      return "#d1777c";
    } else if (e == i) {
      return "#00bfff";
    } else {
      return "#efeeee";
    }
  }
  getRoleKillFeedColor(e, t, i) {
    let r = B[e];
    if (r?.killFeed?.color) {
      return r.killFeed.color;
    } else {
      return $.colorToHexString(i.getTeamColor(t));
    }
  }
  getRoleTranslation(e, t) {
    let i = `game-${e}`;
    if (e == "leader") {
      i = t == 1 ? "game-red-leader" : "game-blue-leader";
    }
    return this.localization.translate(i);
  }
  getRoleAnnouncementText(e, t) {
    return `${this.localization.translate("game-youve-been-promoted-to")} ${this.getRoleTranslation(e, t)}!`;
  }
  getRoleAssignedKillFeedText(e, t, i) {
    let r = this.getRoleTranslation(e, t);
    return `${i} ${this.localization.translate("game-promoted-to")} ${r}!`;
  }
  getRoleKilledKillFeedText(e, t, i) {
    let r = this.getRoleTranslation(e, t);
    if (i) {
      return `${i} ${this.localization.translate("game-killed")} ${r}!`;
    } else {
      return `${r} ${this.localization.translate("game-is-dead")}!`;
    }
  }
  getKillText(e, t, i, r, a, l, s, m, d) {
    let h = r && !a;
    let p = d ? e : this.localization.translate("game-you").toUpperCase();
    let w = h ? "game-knocked-out" : i ? "game-killed" : "game-finally-killed";
    let f = this.localization.translate(w);
    let S = l ? d ? this.localization.translate("game-themselves") : this.localization.translate("game-yourself").toUpperCase() : t;
    let x = this.localization.translate(m == R.DamageType.Airstrike ? "game-an-air-strike" : `game-${s}`);
    let y = this.localization.translate("game-with");
    if (x && (i || h)) {
      return `${p} ${f} ${S} ${y} ${x}`;
    } else {
      return `${p} ${f} ${S}`;
    }
  }
  getKillCountText(e) {
    return `${e} ${this.localization.translate(e != 1 ? "game-kills" : "game-kill")}`;
  }
  getDownedText(e, t, i, r, a) {
    let l = a ? t : this.localization.translate("game-you").toUpperCase();
    let s = e;
    if (!s) {
      if (r == R.DamageType.Gas) {
        s = this.localization.translate("game-the-red-zone");
      } else if (r == R.DamageType.Airdrop) {
        s = this.localization.translate("game-the-air-drop");
      } else if (r == R.DamageType.Airstrike) {
        s = this.localization.translate("game-the-air-strike");
      }
    }
    let m = this.localization.translate(`game-${i}`);
    if (e && r == R.DamageType.Airstrike) {
      m = this.localization.translate("game-an-air-strike");
    }
    let d = this.localization.translate("game-with");
    if (m) {
      return `${s} knocked ${l} out ${d} ${m}`;
    } else {
      return `${s} knocked ${l} out`;
    }
  }
  getPickupMessageText(e) {
    let t = {
      [Me.Full]: "game-not-enough-space",
      [Me.AlreadyOwned]: "game-item-already-owned",
      [Me.AlreadyEquipped]: "game-item-already-equipped",
      [Me.BetterItemEquipped]: "game-better-item-equipped",
      [Me.GunCannotFire]: "game-gun-cannot-fire"
    };
    let i = t[e] || t[Me.Full];
    return this.localization.translate(i);
  }
  getInteractionText(e, t, i) {
    switch (e) {
      case 0:
        return "";
      case 1:
        return this.localization.translate("game-cancel");
      case 3:
        if (t && i && t == i && i.EAO("self_revive")) {
          return this.localization.translate("game-revive-self");
        } else {
          return this.localization.translate("game-revive-teammate");
        }
      case 4:
        {
          let r = t.getInteraction();
          return `${this.localization.translate(r.action)} ${this.localization.translate(r.object)}`;
        }
      case 2:
        {
          let r = t;
          let a = this.localization.translate(`game-${r.type}`) || r.type;
          if (r.count > 1) {
            a += ` (${r.count})`;
          }
          return a;
        }
      default:
        return "";
    }
  }
  getInteractionKey(e) {
    let t = null;
    switch (e) {
      case 1:
        t = this.inputBinds.getBind(A.Cancel);
        break;
      case 2:
        t = this.inputBinds.getBind(A.Loot) || this.inputBinds.getBind(A.Interact);
        break;
      case 4:
        t = this.inputBinds.getBind(A.Use) || this.inputBinds.getBind(A.Interact);
        break;
      case 3:
        t = this.inputBinds.getBind(A.Revive) || this.inputBinds.getBind(A.Interact);
        break;
      case 0:
      default:
        t = this.inputBinds.getBind(A.Use);
    }
    if (t) {
      return t.toString();
    } else {
      return "<Unbound>";
    }
  }
}
function Ms() {
  let u = {
    "ui-loot-bandage": "img/loot/loot-medical-bandage.svg",
    "ui-loot-healthkit": "img/loot/loot-medical-healthkit.svg",
    "ui-loot-soda": "img/loot/loot-medical-soda.svg",
    "ui-loot-painkiller": "img/loot/loot-medical-pill.svg",
    "ui-loot-9mm": "img/loot/loot-ammo-box.svg",
    "ui-loot-12gauge": "img/loot/loot-ammo-box.svg",
    "ui-loot-762mm": "img/loot/loot-ammo-box.svg",
    "ui-loot-556mm": "img/loot/loot-ammo-box.svg",
    "ui-loot-50AE": "img/loot/loot-ammo-box.svg",
    "ui-loot-308sub": "img/loot/loot-ammo-box.svg",
    "ui-loot-flare": "img/loot/loot-ammo-box.svg",
    "ui-loot-45acp": "img/loot/loot-ammo-box.svg"
  };
  for (let [e, t] of Object.entries(u)) {
    J(e).getElementsByClassName("ui-loot-image")[0].src = t;
  }
  J("mag-glass-white").src = "img/gui/mag-glass.svg";
  J("ui-minimize-img").src = "img/gui/minimize.svg";
}
class Ts {
  letructor(e, t, i, r, a, l, s, m, d, h, p, w) {
    this.IGwOt = e;
    this.VXjd = t;
    this.VfIn = i;
    this.Dgn = r;
    this.CNMLJ = a;
    this.nzyMgi = l;
    this.GhMxU = s;
    this.ixm = m;
    this.jLTvL = d;
    this.respawns = h;
    this.onJoin = p;
    this.onQuit = w;
    this.IGwOt = e;
    this.VXjd = t;
    this.ixm = m;
    this.VfIn = i;
    this.Dgn = r;
    this.CNMLJ = a;
    this.nzyMgi = l;
    this.GhMxU = s;
    this.jLTvL = d;
  }
  initialized = false;
  teamMode = Se.Solo;
  victoryMusic = null;
  Tjk = null;
  connecting = false;
  connected = false;
  REmWU;
  sJNwq;
  tBNPz;
  vsiSQZ;
  ozZpvi;
  osAxga;
  nQZXXa;
  sPHL;
  aNJCxT;
  qHU;
  ThkdV;
  rOI;
  qNNLG;
  PkR;
  stebk;
  vcXWlZ;
  WLV;
  mBuo;
  AYvJA;
  LpY;
  mOS;
  iKXqi;
  nMzLZ;
  ZFYgb;
  gxunU;
  jRakkk;
  RfKKmr;
  DjCbXw;
  men;
  kDxZ;
  yIJXNT;
  iIKhi;
  zLmmQ;
  RpDeXL;
  efnLi;
  cdPu;
  vZXKP;
  CFcvmV;
  chvM;
  sGQPbW;
  wRmKvB;
  seq;
  seqInFlight;
  seqSendTime;
  pings;
  debugPingTime;
  lastUpdateTime;
  updateIntervals;
  tryJoinGame(e, t, i, r, a) {
    if (!this.connecting && !this.connected && !this.initialized) {
      if (this.Tjk) {
        this.Tjk.onerror = function () {};
        this.Tjk.onopen = function () {};
        this.Tjk.onmessage = function () {};
        this.Tjk.onclose = function () {};
        this.Tjk.close();
        this.Tjk = null;
      }
      this.connecting = true;
      this.connected = false;
      try {
        this.Tjk = new WebSocket(e);
        this.Tjk.binaryType = "arraybuffer";
        this.Tjk.onerror = l => {
          this.Tjk?.close();
        };
        this.Tjk.onopen = () => {
          this.connecting = false;
          this.connected = true;
          let l = this.Dgn.get("playerName");
          let s = new br();
          s.protocol = R.protocolVersion;
          s.matchPriv = t;
          s.loadoutPriv = i;
          s.questPriv = r;
          s.name = l;
          s.useTouch = v.touch;
          s.isMobile = v.mobile || window.mobile;
          s.bot = false;
          s.loadout = this.Dgn.get("loadout");
          this.EIAjn(he.Join, s, 8192);
        };
        this.Tjk.onmessage = l => {
          let s = new Ht(l.data);
          while (true) {
            let m = s.deserializeMsgType();
            if (m == he.None) {
              break;
            }
            this.mUo(m, s.getStream());
          }
        };
        this.Tjk.onclose = () => {
          let l = this.mBuo?.displayingStats;
          let s = this.connecting;
          let m = this.connected;
          this.connecting = false;
          this.connected = false;
          if (s) {
            a();
          } else if (m && !this.men && !l) {
            let d = this.RfKKmr || "index-host-closed";
            this.onQuit(d);
          }
        };
      } catch (l) {
        console.error(l);
        this.connecting = false;
        this.connected = false;
        a();
      }
    }
  }
  init() {
    this.ZFYgb = this.IGwOt.renderer.type == ot.CANVAS;
    this.REmWU = new gs(this.CNMLJ, this.Dgn);
    this.sJNwq = new Xi();
    this.tBNPz = new ar(this, this.ZFYgb);
    this.vsiSQZ = new Ki(this.tBNPz);
    this.ozZpvi = new Ji();
    this.osAxga = new $i(this.ozZpvi);
    this.nQZXXa = new ir();
    this.sPHL = new Na();
    this.aNJCxT = new Ga();
    this.qHU = new os();
    this.ThkdV = new Ha();
    this.rOI = new is(this.VXjd);
    this.qNNLG = new Oa();
    this.PkR = new rr();
    this.stebk = new Fa();
    this.vcXWlZ = new $a();
    this.WLV = new va(this.ZFYgb);
    this.mBuo = new vs(this, this.VXjd, this.vsiSQZ, this.rOI, this.VfIn, this.ZFYgb, this.REmWU, this.nzyMgi, this.GhMxU);
    this.AYvJA = new Is(this.VfIn, this.nzyMgi);
    this.LpY = new ba(this.VXjd, this.mBuo, this.nQZXXa, this.sJNwq, this.osAxga);
    this.mOS = new ls();
    let e = {
      [ce.Player]: this.nQZXXa.playerPool,
      [ce.Obstacle]: this.osAxga.fBXVaI,
      [ce.Loot]: this.vcXWlZ.lootPool,
      [ce.DeadBody]: this.stebk.deadBodyPool,
      [ce.Building]: this.osAxga.fWZ,
      [ce.Structure]: this.osAxga.OYF,
      [ce.Decal]: this.ozZpvi.decalPool,
      [ce.Projectile]: this.qHU.projectilePool,
      [ce.Smoke]: this.PkR.fEtbJP,
      [ce.Airdrop]: this.qNNLG.airdropPool
    };
    this.iKXqi = new Ui();
    for (let i in e) {
      if (e.hasOwnProperty(i)) {
        this.iKXqi.wpv(i, e[i]);
      }
    }
    this.nMzLZ = new pe();
    let t = [this.osAxga.display.ground, this.tBNPz.layers[0], this.tBNPz.ground, this.tBNPz.layers[1], this.tBNPz.layers[2], this.tBNPz.layers[3], this.nMzLZ, this.WLV.gasRenderer.display, this.REmWU.container, this.LpY.container, this.mBuo.container, this.mBuo.DCc.container, this.LpY.indContainer];
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r) {
        r.interactiveChildren = false;
        this.IGwOt.stage.addChild(r);
      }
    }
    this.RfKKmr = "";
    this.DjCbXw = false;
    this.men = false;
    this.kDxZ = false;
    this.yIJXNT = 0;
    this.iIKhi = new Gt();
    this.zLmmQ = 0;
    this.RpDeXL = 0;
    this.gxunU = false;
    this.jRakkk = 0;
    this.efnLi = 0;
    this.cdPu = 0;
    this.vZXKP = null;
    this.CFcvmV = false;
    this.chvM = 1;
    this.sGQPbW = 1;
    this.wRmKvB = false;
    this.seq = 0;
    this.seqInFlight = false;
    this.seqSendTime = 0;
    this.pings = [];
    this.updateIntervals = [];
    this.lastUpdateTime = 0;
    this.debugPingTime = 0;
    this.sJNwq.RCZ(this.Dgn.get("screenShake"));
    this.sJNwq.OwZJE(this.Dgn.get("_interpolation"));
    this.nQZXXa.anonPlayerNames = this.Dgn.get("anonPlayerNames");
    this.initialized = true;
  }
  free() {
    if (this.Tjk) {
      this.Tjk.onmessage = function () {};
      this.Tjk.close();
      this.Tjk = null;
    }
    this.connecting = false;
    this.connected = false;
    if (this.initialized) {
      this.initialized = false;
      this.gxunU = false;
      this.jRakkk = 0;
      this.LpY.HJMxT();
      this.AYvJA.HJMxT();
      this.mBuo.HJMxT();
      this.WLV.HJMxT();
      this.qNNLG.HJMxT();
      this.rOI.HJMxT();
      this.osAxga.HJMxT();
      this.vsiSQZ.HJMxT();
      this.tBNPz.HJMxT();
      this.CNMLJ.HJMxT();
      this.VXjd.stopAll();
      while (this.IGwOt.stage.children.length > 0) {
        let e = this.IGwOt.stage.children[0];
        this.IGwOt.stage.removeChild(e);
        e.destroy({
          children: true
        });
      }
    }
  }
  warnPageReload() {
    return this.initialized && this.DjCbXw && !this.kDxZ && !this.mBuo.displayingStats;
  }
  update(e) {
    let t = this.PkR.nWpH;
    let i = {};
    if (this.DjCbXw) {
      this.zLmmQ += e;
    }
    this.nQZXXa.PEHQLt(e, this.cdPu, this.teamMode, this.tBNPz, this.vsiSQZ, this.sJNwq, this.osAxga, this.nzyMgi, this.VXjd, this.AYvJA, this.LpY.wheelKeyTriggered, this.mBuo.displayingStats, this.kDxZ);
    this.updateAmbience();
    this.sJNwq.aznZwb = n.copy(this.vZXKP.Hxqi);
    this.sJNwq.WYloD();
    let r = this.vZXKP.kEZUyv();
    let a = z.min(this.sJNwq.LCRnPO, this.sJNwq.gMqwV);
    let l = z.max(this.sJNwq.LCRnPO, this.sJNwq.gMqwV);
    let s = z.max(a * (16 / 9), l);
    this.sJNwq.chvM = s * 0.5 / (r * this.sJNwq.HrSNF);
    let m = this.vZXKP.zoomFast ? 3 : 2;
    let d = this.vZXKP.zoomFast ? 3 : 1.4;
    let h = this.sJNwq.chvM > this.sJNwq.HyIw ? m : d;
    this.sJNwq.HyIw = z.lerp(e * h, this.sJNwq.HyIw, this.sJNwq.chvM);
    this.VXjd.cameraPos = n.copy(this.sJNwq.aznZwb);
    if (this.CNMLJ.keyPressed(W.Escape)) {
      this.mBuo.toggleEscMenu();
    }
    if (this.nzyMgi.isBindPressed(A.ToggleMap) || this.CNMLJ.keyPressed(W.G) && !this.nzyMgi.isKeyBound(W.G)) {
      this.mBuo.displayMapLarge(false);
    }
    if (this.nzyMgi.isBindPressed(A.CycleUIMode)) {
      this.mBuo.cycleVisibilityMode();
    }
    if (this.nzyMgi.isBindPressed(A.HideUI) || this.CNMLJ.keyPressed(W.Escape) && !this.mBuo.hudVisible) {
      this.mBuo.cycleHud();
    }
    let p = this.vZXKP.aznZwb;
    let w = n.create(this.vZXKP.aznZwb.x + (this.CNMLJ.mousePos.x - this.sJNwq.LCRnPO * 0.5) / this.sJNwq.fVAy(), this.vZXKP.aznZwb.y + (this.sJNwq.gMqwV * 0.5 - this.CNMLJ.mousePos.y) / this.sJNwq.fVAy());
    let f = n.sub(w, p);
    let S = n.length(f);
    let x = S > 0.00001 ? n.div(f, S) : n.create(1, 0);
    if (this.LpY.wheelDisplayed) {
      S = this.iIKhi.toMouseLen;
      x = this.iIKhi.toMouseDir;
    }
    let y = new Gt();
    y.seq = this.seq;
    if (!this.kDxZ) {
      if (v.touch) {
        let _ = this.REmWU.getTouchMovement(this.sJNwq);
        let T = this.REmWU.getAimMovement(this.vZXKP, this.sJNwq);
        let V = n.copy(T.aimMovement.toAimDir);
        this.REmWU.turnDirTicker -= e;
        if (this.REmWU.moveDetected && !T.touched) {
          let Z = n.normalizeSafe(_.toMoveDir, n.create(1, 0));
          let O = this.REmWU.turnDirTicker < 0 ? Z : T.aimMovement.toAimDir;
          this.REmWU.setAimDir(O);
          V = O;
        }
        if (T.touched) {
          this.REmWU.turnDirTicker = this.REmWU.turnDirCooldown;
        }
        if (this.REmWU.moveDetected) {
          y.touchMoveDir = n.normalizeSafe(_.toMoveDir, n.create(1, 0));
          y.touchMoveLen = Math.round(z.clamp(_.toMoveLen, 0, 1) * 255);
        } else {
          y.touchMoveLen = 0;
        }
        y.touchMoveActive = true;
        let j = T.aimMovement.toAimLen;
        let q = z.clamp(j / this.REmWU.padPosRange, 0, 1) * R.player.throwableMaxMouseDist;
        y.toMouseLen = q;
        y.toMouseDir = V;
      } else {
        y.moveLeft = this.nzyMgi.isBindDown(A.MoveLeft) || this.CNMLJ.keyDown(W.Left) && !this.nzyMgi.isKeyBound(W.Left);
        y.moveRight = this.nzyMgi.isBindDown(A.MoveRight) || this.CNMLJ.keyDown(W.Right) && !this.nzyMgi.isKeyBound(W.Right);
        y.moveUp = this.nzyMgi.isBindDown(A.MoveUp) || this.CNMLJ.keyDown(W.Up) && !this.nzyMgi.isKeyBound(W.Up);
        y.moveDown = this.nzyMgi.isBindDown(A.MoveDown) || this.CNMLJ.keyDown(W.Down) && !this.nzyMgi.isKeyBound(W.Down);
        y.toMouseDir = n.copy(x);
        y.toMouseLen = S;
      }
      y.touchMoveDir = n.normalizeSafe(y.touchMoveDir, n.create(1, 0));
      y.touchMoveLen = z.clamp(y.touchMoveLen, 0, 255);
      y.toMouseDir = n.normalizeSafe(y.toMouseDir, n.create(1, 0));
      y.toMouseLen = z.clamp(y.toMouseLen, 0, He.MouseMaxDist);
      y.shootStart = this.nzyMgi.isBindPressed(A.Fire) || this.REmWU.shotDetected;
      y.shootHold = this.nzyMgi.isBindDown(A.Fire) || this.REmWU.shotDetected;
      y.portrait = this.sJNwq.LCRnPO < this.sJNwq.gMqwV;
      let D = [A.Reload, A.Revive, A.Use, A.Loot, A.Cancel, A.EquipPrimary, A.EquipSecondary, A.EquipThrowable, A.EquipMelee, A.EquipNextWeap, A.EquipPrevWeap, A.EquipLastWeap, A.EquipOtherGun, A.EquipPrevScope, A.EquipNextScope, A.StowWeapons];
      for (let _ = 0; _ < D.length; _++) {
        let T = D[_];
        if (this.nzyMgi.isBindPressed(T)) {
          y.addInput(T);
        }
      }
      if (this.nzyMgi.isBindPressed(A.Interact)) {
        let _ = [];
        let T = [A.Revive, A.Use, A.Loot];
        for (let V = 0; V < T.length; V++) {
          let j = T[V];
          if (!this.nzyMgi.getBind(j)) {
            _.push(j);
          }
        }
        if (_.length == T.length) {
          y.addInput(A.Interact);
        } else {
          for (let V = 0; V < _.length; V++) {
            y.addInput(_[V]);
          }
        }
      }
      if (this.nzyMgi.isBindPressed(A.SwapWeapSlots) || this.mBuo.swapWeapSlots) {
        y.addInput(A.SwapWeapSlots);
        this.vZXKP.gunSwitchCooldown = 0;
      }
      if (this.mBuo.reloadTouched) {
        y.addInput(A.Reload);
      }
      if (this.mBuo.interactionTouched) {
        y.addInput(A.Interact);
        y.addInput(A.Cancel);
      }
      for (let _ = 0; _ < this.AYvJA.uiEvents.length; _++) {
        let T = this.AYvJA.uiEvents[_];
        if (T.action == "use") {
          if (T.type == "weapon") {
            let j = {
              [Qe.Primary]: A.EquipPrimary,
              [Qe.Secondary]: A.EquipSecondary,
              [Qe.Melee]: A.EquipMelee,
              [Qe.Throwable]: A.EquipThrowable
            }[T.data];
            if (j) {
              y.addInput(j);
            }
          } else {
            y.useItem = T.data;
          }
        }
      }
      if (this.nzyMgi.isBindPressed(A.UseBandage)) {
        y.useItem = "bandage";
      } else if (this.nzyMgi.isBindPressed(A.UseHealthKit)) {
        y.useItem = "healthkit";
      } else if (this.nzyMgi.isBindPressed(A.UseSoda)) {
        y.useItem = "soda";
      } else if (this.nzyMgi.isBindPressed(A.UsePainkiller)) {
        y.useItem = "painkiller";
      }
      let L = false;
      for (let _ = 0; _ < this.AYvJA.uiEvents.length; _++) {
        let T = this.AYvJA.uiEvents[_];
        if (T.action == "drop") {
          let V = new kr();
          if (T.type == "weapon") {
            let j = T.data;
            let q = this.vZXKP.alkER.iomTK;
            V.item = q[j].type;
            V.weapIdx = j;
          } else if (T.type == "perk") {
            let j = T.data;
            let q = this.vZXKP.iDmhea.GVf;
            let Z = q.length > j ? q[j] : null;
            if (Z?.droppable) {
              V.item = Z.type;
            }
          } else {
            let j = T.data == "helmet" ? this.vZXKP.iDmhea.ODVGwj : T.data == "chest" ? this.vZXKP.iDmhea.psCic : T.data;
            V.item = j;
          }
          if (V.item != "") {
            this.EIAjn(he.DropItem, V, 128);
            if (V.item != "fists") {
              L = true;
            }
          }
        }
      }
      if (L) {
        this.VXjd.playSound("loot_drop_01", {
          channel: "ui"
        });
      }
      if (this.mBuo.roleSelected) {
        let _ = new vr();
        _.role = this.mBuo.roleSelected;
        this.EIAjn(he.PerkModeRoleSelect, _, 128);
        this.Dgn.set("perkModeRole", _.role);
      }
    }
    let C = this.mBuo.specBegin;
    let P = this.mBuo.specNext || this.kDxZ && this.CNMLJ.keyPressed(W.Right);
    let k = this.mBuo.specPrev || this.kDxZ && this.CNMLJ.keyPressed(W.Left);
    let b = this.CNMLJ.keyPressed(W.Right) || this.CNMLJ.keyPressed(W.Left);
    if (C || this.kDxZ && P || k) {
      let D = new _r();
      D.specBegin = C;
      D.specNext = P;
      D.specPrev = k;
      D.specForce = b;
      this.EIAjn(he.Spectate, D, 128);
    }
    this.mBuo.specBegin = false;
    this.mBuo.specNext = false;
    this.mBuo.specPrev = false;
    this.mBuo.reloadTouched = false;
    this.mBuo.interactionTouched = false;
    this.mBuo.swapWeapSlots = false;
    this.mBuo.roleSelected = "";
    let M = false;
    for (let D in y) {
      if (y.hasOwnProperty(D)) {
        if (D == "inputs") {
          M = y[D].length > 0;
        } else if (D == "toMouseDir" || D == "touchMoveDir") {
          let L = z.clamp(n.dot(y[D], this.iIKhi[D]), -1, 1);
          M = z.rad2deg(Math.acos(L)) > 0.1;
        } else if (D == "toMouseLen") {
          M = Math.abs(this.iIKhi[D] - y[D]) > 0.5;
        } else if (D == "shootStart") {
          M = y[D] || y[D] != this.iIKhi[D];
        } else if (this.iIKhi[D] != y[D]) {
          M = true;
        }
        if (M) {
          break;
        }
      }
    }
    this.yIJXNT -= e;
    if (M || this.yIJXNT < 0) {
      if (!this.seqInFlight) {
        this.seq = (this.seq + 1) % 256;
        this.seqSendTime = Date.now();
        this.seqInFlight = true;
        y.seq = this.seq;
      }
      this.EIAjn(he.Input, y, 128);
      this.yIJXNT = 1;
      this.iIKhi = y;
    }
    this.AYvJA.flushInput();
    this.osAxga.PEHQLt(e, this.vZXKP, this.nQZXXa, this.vsiSQZ, this.VXjd, this.ixm, this.tBNPz, this.sJNwq, t, i);
    this.vcXWlZ.PEHQLt(e, this.vZXKP, this.osAxga, this.VXjd, this.sJNwq, i);
    this.sPHL.PEHQLt(e, this.nQZXXa, this.osAxga, this.sJNwq, this.vZXKP, this.tBNPz, this.vsiSQZ, this.VXjd);
    this.aNJCxT.PEHQLt(e, this.nQZXXa, this.osAxga, this.sJNwq, this.vZXKP, this.tBNPz, this.vsiSQZ, this.VXjd);
    this.qHU.PEHQLt(e, this.vsiSQZ, this.VXjd, this.vZXKP, this.osAxga, this.tBNPz, this.sJNwq);
    this.ThkdV.PEHQLt(e, this.osAxga, this.nQZXXa, this.sJNwq, this.vsiSQZ, this.VXjd, i);
    this.qNNLG.PEHQLt(e, this.vZXKP, this.sJNwq, this.osAxga, this.vsiSQZ, this.tBNPz, this.VXjd);
    this.rOI.PEHQLt(e, this.sJNwq, this.vZXKP, this.osAxga, this.tBNPz);
    this.PkR.PEHQLt(e, this.sJNwq, this.vZXKP, this.osAxga, this.tBNPz);
    this.mOS.PEHQLt(e, this.cdPu, this.nQZXXa, this.vsiSQZ, this.VXjd);
    this.vsiSQZ.PEHQLt(e, this.sJNwq, i);
    this.stebk.PEHQLt(e, this.nQZXXa, this.vZXKP, this.osAxga, this.sJNwq, this.tBNPz);
    this.ozZpvi.PEHQLt(e, this.sJNwq, this.tBNPz, i);
    this.mBuo.PEHQLt(e, this.vZXKP, this.osAxga, this.WLV, this.vcXWlZ, this.nQZXXa, this.sJNwq, this.teamMode, this.osAxga.factionMode);
    this.AYvJA.PEHQLt(e, this.vZXKP, this.kDxZ, this.nQZXXa, this.vcXWlZ, this.osAxga, this.nzyMgi);
    this.LpY.PEHQLt(e, this.efnLi, this.vZXKP, this.teamMode, this.stebk, this.osAxga, this.tBNPz, this.CNMLJ, this.nzyMgi, this.kDxZ);
    this.REmWU.PEHQLt(e, this.vZXKP, this.osAxga, this.sJNwq, this.tBNPz);
    this.tBNPz.PEHQLt(e, this.sJNwq, this.osAxga, i);
    for (let D = 0; D < this.LpY.newPings.length; D++) {
      let L = this.LpY.newPings[D];
      let _ = new Ut();
      _.type = L.type;
      _.pos = L.pos;
      _.isPing = true;
      this.EIAjn(he.Emote, _, 128);
    }
    this.LpY.newPings = [];
    for (let D = 0; D < this.LpY.newEmotes.length; D++) {
      let L = this.LpY.newEmotes[D];
      let _ = new Ut();
      _.type = L.type;
      _.pos = L.pos;
      _.isPing = false;
      this.EIAjn(he.Emote, _, 128);
    }
    this.LpY.newEmotes = [];
    let E = Date.now();
    if (E > this.debugPingTime) {
      let D = function (j, q) {
        return (" ".repeat(q) + j).slice(-7);
      };
      this.debugPingTime = E + 20000;
      let L = this.pings.sort((j, q) => j - q);
      let _ = L.length;
      if (_ > 0) {
        let j = L[Math.floor(_ * 0.5)];
        let q = L[Math.floor(_ * 0.95)];
        let Z = L[_ - 1];
        console.log("Ping     min:", D(L[0].toFixed(2), 7), "med:", D(j.toFixed(2), 7), "p95:", D(q.toFixed(2), 7), "max:", D(Z.toFixed(2), 7));
      }
      this.pings = [];
      let T = this.updateIntervals.sort((j, q) => j - q);
      let V = T.length;
      if (V > 0) {
        let j = T[Math.floor(V * 0.5)];
        let q = T[Math.floor(V * 0.95)];
        let Z = T[V - 1];
        console.log("Interval min:", D(T[0].toFixed(2), 7), "med:", D(j.toFixed(2), 7), "p95:", D(q.toFixed(2), 7), "max:", D(Z.toFixed(2), 7));
      }
      this.updateIntervals = [];
    }
    this.lXaw(e, i);
  }
  lXaw(e, t) {
    let i = this.osAxga.mapLoaded ? this.osAxga.getMapDef().biome.colors.grass : 8433481;
    this.IGwOt.renderer.background.color = i;
    this.nQZXXa.lXaw(this.sJNwq, t);
    this.sPHL.lXaw(this.sJNwq, t);
    this.aNJCxT.lXaw(this.sJNwq);
    this.ozZpvi.lXaw(this.sJNwq, t, this.vZXKP.layer);
    this.osAxga.lXaw(this.sJNwq);
    this.WLV.lXaw(e, this.sJNwq);
    this.mBuo.lXaw(this.vZXKP.aznZwb, this.WLV, this.sJNwq, this.osAxga, this.rOI, t);
    this.LpY.lXaw(this.sJNwq);
    if (v.debug) {
      me.lXaw(this.sJNwq, this.nMzLZ);
    }
    me.flush();
  }
  updateAmbience() {
    let e = this.vZXKP.aznZwb;
    let t = 0;
    let i = 0;
    let r = 1;
    if (this.osAxga.isInOcean(e)) {
      t = 1;
      i = 0;
      r = 0;
    } else {
      let a = this.osAxga.distanceToShore(e);
      t = z.delerp(a, 50, 0);
      i = 0;
      for (let l = 0; l < this.osAxga.terrain.rivers.length; l++) {
        let s = this.osAxga.terrain?.rivers[l];
        let m = s.spline.getClosestTtoPoint(e);
        let d = s.spline.getPos(m);
        let h = n.length(n.sub(d, e));
        let p = s.waterWidth + 2;
        let w = z.delerp(h, 30 + p, p);
        let f = z.clamp(s.waterWidth / 8, 0.25, 1);
        i = z.max(w * f, i);
      }
      if (this.vZXKP.layer == 1) {
        i = 0;
      }
      r = 1;
    }
    this.ixm.getTrack("wind").weight = r;
    this.ixm.getTrack("river").weight = i;
    this.ixm.getTrack("waves").weight = t;
  }
  resize() {
    this.sJNwq.LCRnPO = v.screenWidth;
    this.sJNwq.gMqwV = v.screenHeight;
    this.osAxga.resize(this.IGwOt.renderer, this.ZFYgb);
    this.WLV.resize();
    this.mBuo.resize(this.osAxga, this.sJNwq);
    this.REmWU.resize();
    this.tBNPz.resize(this.osAxga, this.sJNwq);
  }
  xHwzsl(e) {
    let t = {
      audioManager: this.VXjd,
      renderer: this.tBNPz,
      particleBarn: this.vsiSQZ,
      map: this.osAxga,
      smokeBarn: this.PkR,
      decalBarn: this.ozZpvi
    };
    if (e.activePlayerIdDirty) {
      this.cdPu = e.activePlayerId;
    }
    for (let a = 0; a < e.playerInfos.length; a++) {
      this.nQZXXa.setPlayerInfo(e.playerInfos[a]);
    }
    for (let a = 0; a < e.deletedPlayerIds.length; a++) {
      let l = e.deletedPlayerIds[a];
      this.nQZXXa.deletePlayerInfo(l);
    }
    if (e.playerInfos.length > 0 || e.deletedPlayerIds.length > 0) {
      this.nQZXXa.recomputeTeamData();
    }
    if (e.playerStatusDirty) {
      let a = this.nQZXXa.getPlayerInfo(this.cdPu).teamId;
      this.nQZXXa.updatePlayerStatus(a, e.playerStatus, this.osAxga.factionMode);
    }
    if (e.groupStatusDirty) {
      let a = this.nQZXXa.getPlayerInfo(this.cdPu).groupId;
      this.nQZXXa.updateGroupStatus(a, e.groupStatus);
    }
    for (let a = 0; a < e.delObjIds.length; a++) {
      this.iKXqi.keZ(e.delObjIds[a]);
    }
    for (let a = 0; a < e.fullObjects.length; a++) {
      let l = e.fullObjects[a];
      this.iKXqi.Rgm(l.__type, l.__id, l, t);
    }
    for (let a = 0; a < e.partObjects.length; a++) {
      let l = e.partObjects[a];
      this.iKXqi.AXgHa(l.__id, l, t);
    }
    this.kDxZ = this.cdPu != this.efnLi;
    this.vZXKP = this.nQZXXa.getPlayerById(this.cdPu);
    this.vZXKP.wWgxC(e.activePlayerData, this.nQZXXa);
    if (e.activePlayerData.weapsDirty) {
      this.mBuo.weapsDirty = true;
    }
    if (this.kDxZ) {
      this.mBuo.setSpectateTarget(this.cdPu, this.efnLi, this.teamMode, this.nQZXXa);
      this.REmWU.hideAll();
    }
    this.vZXKP.layer = this.vZXKP.iDmhea.Rpch;
    this.tBNPz.setActiveLayer(this.vZXKP.layer);
    this.VXjd.activeLayer = this.vZXKP.layer;
    let i = this.vZXKP.isUnderground(this.osAxga);
    this.tBNPz.setUnderground(i);
    this.VXjd.underground = i;
    if (e.gasDirty) {
      this.WLV.setFullState(e.gasT, e.gasData, this.osAxga, this.mBuo);
    }
    if (e.gasTDirty) {
      this.WLV.setProgress(e.gasT);
    }
    for (let a = 0; a < e.bullets.length; a++) {
      let l = e.bullets[a];
      Ba(l, this.sPHL, this.aNJCxT, this.nQZXXa, this.tBNPz);
      if (l.shotFx) {
        this.mOS.addShot(l);
      }
    }
    for (let a = 0; a < e.explosions.length; a++) {
      let l = e.explosions[a];
      this.ThkdV.addExplosion(l.type, l.pos, l.layer);
    }
    for (let a = 0; a < e.emotes.length; a++) {
      let l = e.emotes[a];
      if (l.isPing) {
        this.LpY.addPing(l, this.osAxga.factionMode);
      } else {
        this.LpY.addEmote(l);
      }
    }
    this.rOI.updatePlanes(e.planes, this.osAxga);
    for (let a = 0; a < e.airstrikeZones.length; a++) {
      this.rOI.createAirstrikeZone(e.airstrikeZones[a]);
    }
    this.mBuo.updateMapIndicators(e.mapIndicators);
    if (e.killLeaderDirty) {
      let a = $.htmlEscape(this.nQZXXa.getPlayerName(e.killLeaderId, this.cdPu, true));
      this.mBuo.updateKillLeader(e.killLeaderId, a, e.killLeaderKills, this.osAxga.getMapDef().gameMode);
    }
    let r = Date.now();
    this.RpDeXL++;
    if (e.ack == this.seq && this.seqInFlight) {
      this.seqInFlight = false;
      let a = r - this.seqSendTime;
      this.pings.push(a);
    }
    if (this.lastUpdateTime > 0) {
      let a = r - this.lastUpdateTime;
      this.sJNwq.UUHe = a / 1000;
      this.updateIntervals.push(a);
    }
    this.lastUpdateTime = r;
  }
  mUo(e, t) {
    switch (e) {
      case he.Joined:
        {
          let i = new Or();
          i.deserialize(t);
          this.onJoin();
          this.teamMode = i.teamMode;
          this.efnLi = i.playerId;
          this.CFcvmV = true;
          this.LpY.updateEmoteWheel(i.emotes);
          if (!i.started) {
            this.mBuo.setWaitingForPlayers(true);
          }
          this.mBuo.removeAds();
          if (this.victoryMusic) {
            this.victoryMusic.stop();
            this.victoryMusic = null;
          }
          if (!document.hasFocus()) {
            this.VXjd.playSound("notification_start_01", {
              channel: "ui"
            });
          }
          if (this.Dgn.get("ENV") === "CrazyGames") {
            window.CrazyGames.SDK.game.gameplayStart();
          } else if (this.Dgn.get("ENV") === "POKI") {
            window.PokiSDK.gameplayStart();
          }
          break;
        }
      case he.Map:
        {
          let i = new Rr();
          i.deserialize(t);
          this.osAxga.loadMap(i, this.sJNwq, this.ZFYgb, this.vsiSQZ);
          this.jLTvL.loadMapAssets(this.osAxga.mapName);
          this.osAxga.renderMap(this.IGwOt.renderer, this.ZFYgb);
          this.nQZXXa.onMapLoad(this.osAxga);
          this.sPHL.onMapLoad(this.osAxga);
          this.vsiSQZ.onMapLoad(this.osAxga);
          this.mBuo.onMapLoad(this.osAxga, this.sJNwq);
          if (this.osAxga.perkMode) {
            let r = this.Dgn.get("perkModeRole");
            this.mBuo.setRoleMenuOptions(r, this.osAxga.getMapDef().gameMode.perkModeRoles);
            this.mBuo.setRoleMenuActive(true);
          } else {
            this.mBuo.setRoleMenuActive(false);
          }
          break;
        }
      case he.Update:
        {
          let i = new Er();
          i.deserialize(t, this.iKXqi);
          this.DjCbXw = true;
          this.xHwzsl(i);
          break;
        }
      case he.Kill:
        {
          let i = new Ar();
          i.deserialize(t);
          let r = i.itemSourceType || i.mapSourceType;
          let a = this.nQZXXa.getPlayerInfo(this.cdPu).teamId;
          let l = i.downed && !i.killed || i.damageType == R.DamageType.Gas || i.damageType == R.DamageType.Bleeding || i.damageType == R.DamageType.Airdrop;
          let s = this.nQZXXa.getPlayerInfo(i.targetId);
          let m = this.nQZXXa.getPlayerInfo(i.killCreditId);
          let d = l ? m : this.nQZXXa.getPlayerInfo(i.killerId);
          let h = this.nQZXXa.getPlayerName(s.playerId, this.cdPu, true);
          let p = this.nQZXXa.getPlayerName(m.playerId, this.cdPu, true);
          let w = this.nQZXXa.getPlayerName(d.playerId, this.cdPu, true);
          h = $.htmlEscape(h);
          p = $.htmlEscape(p);
          w = $.htmlEscape(w);
          if (i.killCreditId == this.cdPu) {
            let x = i.killerId == this.cdPu;
            let y = i.killerId == i.targetId || i.killCreditId == i.targetId;
            let C = this.AYvJA.getKillText(p, h, x, i.downed, i.killed, y, r, i.damageType, this.kDxZ);
            let P = i.killed && !y ? this.AYvJA.getKillCountText(i.killerKills) : "";
            this.AYvJA.displayKillMessage(C, P);
          } else if (i.targetId == this.cdPu && i.downed && !i.killed) {
            let x = this.AYvJA.getDownedText(p, h, r, i.damageType, this.kDxZ);
            this.AYvJA.displayKillMessage(x, "");
          }
          if (i.killCreditId == this.efnLi && i.killed) {
            this.mBuo.setLocalKills(i.killerKills);
          }
          let f = this.AYvJA.getKillFeedText(h, d.teamId ? w : "", r, i.damageType, i.downed && !i.killed);
          let S = this.AYvJA.getKillFeedColor(a, s.teamId, m.teamId, this.osAxga.factionMode);
          this.AYvJA.addKillFeedMessage(f, S);
          if (i.killed) {
            this.nQZXXa.addDeathEffect(i.targetId, i.killerId, r, this.VXjd, this.vsiSQZ);
          }
          if (i.damageType == R.DamageType.Player) {
            this.sPHL.createBulletHit(this.nQZXXa, i.targetId, this.VXjd);
          }
          break;
        }
      case he.RoleAnnouncement:
        {
          let i = new Lr();
          i.deserialize(t);
          let r = Oi[i.role];
          if (!r) {
            break;
          }
          let a = this.nQZXXa.getPlayerInfo(i.playerId);
          let l = $.htmlEscape(this.nQZXXa.getPlayerName(i.playerId, this.cdPu, true));
          if (i.assigned) {
            if (r.sound?.assign) {
              if (i.role == "kill_leader" && this.osAxga.getMapDef().gameMode.spookyKillSounds) {
                this.VXjd.playGroup("kill_leader_assigned", {
                  channel: "ui"
                });
              } else if (i.role == "kill_leader" || !this.osAxga.perkMode || this.efnLi == i.playerId) {
                this.VXjd.playSound(r.sound.assign, {
                  channel: "ui"
                });
              }
            }
            if (this.osAxga.perkMode && this.efnLi == i.playerId) {
              this.mBuo.setRoleMenuActive(false);
            }
            if (r.killFeed?.assign) {
              let s = this.AYvJA.getRoleAssignedKillFeedText(i.role, a.teamId, l);
              let m = this.AYvJA.getRoleKillFeedColor(i.role, a.teamId, this.nQZXXa);
              this.AYvJA.addKillFeedMessage(s, m);
            }
            if (r.announce && this.efnLi == i.playerId) {
              let s = this.AYvJA.getRoleAnnouncementText(i.role, a.teamId);
              this.mBuo.displayAnnouncement(s.toUpperCase());
            }
          } else if (i.killed) {
            if (r.killFeed?.dead) {
              let s = $.htmlEscape(this.nQZXXa.getPlayerName(i.killerId, this.cdPu, true));
              if (i.playerId == i.killerId) {
                s = "";
              }
              let m = this.AYvJA.getRoleKilledKillFeedText(i.role, a.teamId, s);
              let d = this.AYvJA.getRoleKillFeedColor(i.role, a.teamId, this.nQZXXa);
              this.AYvJA.addKillFeedMessage(m, d);
            }
            if (r.sound?.dead) {
              if (this.osAxga.getMapDef().gameMode.spookyKillSounds) {
                this.VXjd.playGroup("kill_leader_dead", {
                  channel: "ui"
                });
              } else {
                this.VXjd.playSound(r.sound.dead, {
                  channel: "ui"
                });
              }
            }
          }
          break;
        }
      case he.PlayerStats:
        {
          let i = new Dr();
          i.deserialize(t);
          this.mBuo.setLocalStats(i.playerStats);
          this.mBuo.showTeamAd(i.playerStats, this.AYvJA);
          break;
        }
      case he.Stats:
        {
          t.readString();
          break;
        }
      case he.GameOver:
        {
          let i = new Cr();
          i.deserialize(t);
          this.men = i.gameOver;
          let r = this.nQZXXa.getPlayerInfo(this.efnLi).teamId;
          for (let a = 0; a < i.playerStats.length; a++) {
            let l = i.playerStats[a];
            if (l.playerId == this.efnLi) {
              this.mBuo.setLocalStats(l);
              break;
            }
          }
          this.mBuo.showStats(i.playerStats, i.teamId, i.teamRank, i.winningTeamId, i.gameOver, r, this.teamMode, this.kDxZ, this.nQZXXa, this.VXjd, this.osAxga, this.AYvJA);
          if (r == i.winningTeamId) {
            this.victoryMusic = this.VXjd.playSound("menu_music", {
              channel: "music",
              delay: 1300,
              forceStart: true
            });
          }
          this.REmWU.hideAll();
          break;
        }
      case he.Pickup:
        {
          let i = new Pr();
          i.deserialize(t);
          if (i.type == Me.Success && i.item) {
            this.vZXKP.playItemPickupSound(i.item, this.VXjd);
            let r = B[i.item];
            if (r && r.type == "xp") {
              this.AYvJA.addRareLootMessage(i.item, true);
            }
          } else {
            this.AYvJA.displayPickupMessage(i.type);
          }
          break;
        }
      case he.UpdatePass:
        {
          new Tr().deserialize(t);
          this.gxunU = true;
          this.jRakkk = 0;
          break;
        }
      case he.AliveCounts:
        {
          let i = new Mr();
          i.deserialize(t);
          if (i.teamAliveCounts.length == 1) {
            this.mBuo.updatePlayersAlive(i.teamAliveCounts[0]);
          } else if (i.teamAliveCounts.length >= 2) {
            this.mBuo.updatePlayersAliveRed(i.teamAliveCounts[0]);
            this.mBuo.updatePlayersAliveBlue(i.teamAliveCounts[1]);
          }
          break;
        }
      case he.Disconnect:
        {
          let i = new Ir();
          i.deserialize(t);
          this.RfKKmr = i.reason;
        }
    }
  }
  EIAjn(e, t, i) {
    let r = i || 128;
    let a = new Ht(new ArrayBuffer(r));
    a.serializeMsg(e, t);
    this.mjJBh(a);
  }
  mjJBh(e) {
    if (this.Tjk && this.Tjk.readyState == this.Tjk.OPEN) {
      try {
        this.Tjk.send(e.getBuffer());
      } catch (t) {
        console.error("sendMessageException", t);
        this.Tjk.close();
      }
    }
  }
}
let Ps = [0, 49345, 49537, 320, 49921, 960, 640, 49729, 50689, 1728, 1920, 51009, 1280, 50625, 50305, 1088, 52225, 3264, 3456, 52545, 3840, 53185, 52865, 3648, 2560, 51905, 52097, 2880, 51457, 2496, 2176, 51265, 55297, 6336, 6528, 55617, 6912, 56257, 55937, 6720, 7680, 57025, 57217, 8000, 56577, 7616, 7296, 56385, 5120, 54465, 54657, 5440, 55041, 6080, 5760, 54849, 53761, 4800, 4992, 54081, 4352, 53697, 53377, 4160, 61441, 12480, 12672, 61761, 13056, 62401, 62081, 12864, 13824, 63169, 63361, 14144, 62721, 13760, 13440, 62529, 15360, 64705, 64897, 15680, 65281, 16320, 16000, 65089, 64001, 15040, 15232, 64321, 14592, 63937, 63617, 14400, 10240, 59585, 59777, 10560, 60161, 11200, 10880, 59969, 60929, 11968, 12160, 61249, 11520, 60865, 60545, 11328, 58369, 9408, 9600, 58689, 9984, 59329, 59009, 9792, 8704, 58049, 58241, 9024, 57601, 8640, 8320, 57409, 40961, 24768, 24960, 41281, 25344, 41921, 41601, 25152, 26112, 42689, 42881, 26432, 42241, 26048, 25728, 42049, 27648, 44225, 44417, 27968, 44801, 28608, 28288, 44609, 43521, 27328, 27520, 43841, 26880, 43457, 43137, 26688, 30720, 47297, 47489, 31040, 47873, 31680, 31360, 47681, 48641, 32448, 32640, 48961, 32000, 48577, 48257, 31808, 46081, 29888, 30080, 46401, 30464, 47041, 46721, 30272, 29184, 45761, 45953, 29504, 45313, 29120, 28800, 45121, 20480, 37057, 37249, 20800, 37633, 21440, 21120, 37441, 38401, 22208, 22400, 38721, 21760, 38337, 38017, 21568, 39937, 23744, 23936, 40257, 24320, 40897, 40577, 24128, 23040, 39617, 39809, 23360, 39169, 22976, 22656, 38977, 34817, 18624, 18816, 35137, 19200, 35777, 35457, 19008, 19968, 36545, 36737, 20288, 36097, 19904, 19584, 35905, 17408, 33985, 34177, 17728, 34561, 18368, 18048, 34369, 33281, 17088, 17280, 33601, 16640, 33217, 32897, 16448];
function ki(u) {
  let e = 0;
  for (let t = 0; t < u.length; t++) {
    let i = u[t];
    e = (Ps[(e ^ i) & 255] ^ e >> 8) & 65535;
  }
  return e;
}
function K(u, e) {
  return {
    name: u,
    defaultValue: e
  };
}
function oe(u) {
  return new $e(ve.Key, u);
}
function vi(u) {
  return new $e(ve.MouseButton, u);
}
function _i(u) {
  return new $e(ve.MouseWheel, u);
}
let Xe = {
  [A.MoveLeft]: K("Move Left", oe(W.A)),
  [A.MoveRight]: K("Move Right", oe(W.D)),
  [A.MoveUp]: K("Move Up", oe(W.W)),
  [A.MoveDown]: K("Move Down", oe(W.S)),
  [A.Fire]: K("Fire", vi(Tt.Left)),
  [A.Reload]: K("Reload", oe(W.R)),
  [A.Cancel]: K("Cancel", oe(W.X)),
  [A.Interact]: K("Interact", oe(W.F)),
  [A.Revive]: K("Revive", null),
  [A.Use]: K("Open/Use", null),
  [A.Loot]: K("Loot", null),
  [A.EquipPrimary]: K("Equip Primary", oe(W.One)),
  [A.EquipSecondary]: K("Equip Secondary", oe(W.Two)),
  [A.EquipMelee]: K("Equip Melee", oe(W.Three)),
  [A.EquipThrowable]: K("Equip Throwable", oe(W.Four)),
  [A.EquipNextWeap]: K("Equip Next Weapon", _i(Pt.Down)),
  [A.EquipPrevWeap]: K("Equip Previous Weapon", _i(Pt.Up)),
  [A.EquipLastWeap]: K("Equip Last Weapon", oe(W.Q)),
  [A.StowWeapons]: K("Stow Weapons", oe(W.E)),
  [A.EquipPrevScope]: K("Equip Previous Scope", null),
  [A.EquipNextScope]: K("Equip Next Scope", null),
  [A.UseBandage]: K("Use Bandage", oe(W.Seven)),
  [A.UseHealthKit]: K("Use Med Kit", oe(W.Eight)),
  [A.UseSoda]: K("Use Soda", oe(W.Nine)),
  [A.UsePainkiller]: K("Use Pills", oe(W.Zero)),
  [A.SwapWeapSlots]: K("Switch Gun Slots", oe(W.T)),
  [A.ToggleMap]: K("Toggle Map", oe(W.M)),
  [A.CycleUIMode]: K("Toggle Minimap", oe(W.V)),
  [A.EmoteMenu]: K("Emote Menu", vi(Tt.Right)),
  [A.TeamPingMenu]: K("Team Ping Hold", oe(W.C)),
  [A.EquipOtherGun]: K("Equip Other Gun", null),
  [A.Fullscreen]: K("Full Screen", oe(W.L)),
  [A.HideUI]: K("Hide UI", null),
  [A.TeamPingSingle]: K("Team Ping Menu", null)
};
class Cs {
  letructor(e, t) {
    this.input = e;
    this.config = t;
    this.input = e;
    this.config = t;
    this.loadBinds();
  }
  binds = [];
  boundKeys = {};
  menuHovered = false;
  toArray() {
    let e = new ArrayBuffer(this.binds.length * 2 + 1);
    let t = new Zt.BitStream(e);
    t.writeUint8(1);
    for (let l = 0; l < this.binds.length; l++) {
      let s = this.binds[l];
      let m = s ? s.type : 0;
      let d = s ? s.code : 0;
      t.writeBits(m & 3, 2);
      t.writeUint8(d & 255);
    }
    let i = new Uint8Array(e, 0, t.byteIndex);
    let r = ki(i);
    let a = new Uint8Array(i.length + 2);
    a.set(i);
    a[a.length - 2] = r >> 8 & 255;
    a[a.length - 1] = r & 255;
    return a;
  }
  fromArray(e) {
    let t = new Uint8Array(e);
    if (!t || t.length < 3) {
      return false;
    }
    let i = t[t.length - 2] << 8 | t[t.length - 1];
    t = t.slice(0, t.length - 2);
    if (ki(t) != i) {
      return false;
    }
    let r = new ArrayBuffer(t.length);
    let a = new Uint8Array(r);
    for (let m = 0; m < t.length; m++) {
      a[m] = t[m];
    }
    let l = new Zt.BitStream(r);
    let s = l.readUint8();
    this.clearAllBinds();
    for (let m = 0; l.length - l.index >= 10;) {
      let d = m++;
      let h = l.readBits(2);
      let p = l.readUint8();
      if (d >= 0 && d < A.Count && h != ve.None) {
        this.setBind(d, h != 0 ? new $e(h, p) : null);
      }
    }
    if (s < 1) {
      this.upgradeBinds(s);
      this.saveBinds();
    }
    return true;
  }
  toBase64() {
    return Xt.fromByteArray(this.toArray());
  }
  fromBase64(e) {
    let t = false;
    try {
      t = this.fromArray(Xt.toByteArray(e));
    } catch (i) {
      console.error("Error", i);
    }
    return t;
  }
  saveBinds() {
    this.config.set("binds", this.toBase64());
  }
  loadBinds() {
    if (!this.fromBase64(this.config.get("binds") || "")) {
      this.loadDefaultBinds();
      this.saveBinds();
    }
  }
  upgradeBinds(e) {
    let t = [];
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      let a = Xe[r].defaultValue;
      for (let l = 0; l < this.binds.length && !this.binds[l]?.equals(a); l++);
      this.setBind(r, a);
    }
  }
  clearAllBinds() {
    for (let e = 0; e < A.Count; e++) {
      this.binds[e] = null;
    }
    this.boundKeys = {};
  }
  setBind(e, t) {
    if (t) {
      for (let r = 0; r < this.binds.length; r++) {
        if (this.binds[r]?.equals(t)) {
          this.binds[r] = null;
        }
      }
    }
    let i = this.binds[e];
    if (i && i.type == ve.Key) {
      this.boundKeys[i.code] = null;
    }
    this.binds[e] = t;
    if (t && t.type == ve.Key) {
      this.boundKeys[t.code] = true;
    }
  }
  getBind(e) {
    return this.binds[e];
  }
  preventMenuBind(e) {
    return e && this.menuHovered && (e.type == 2 || e.type == 3);
  }
  isKeyBound(e) {
    return this.boundKeys[e];
  }
  isBindPressed(e) {
    let t = this.binds[e];
    return !this.preventMenuBind(t) && t && this.input.isInputValuePressed(t);
  }
  isBindReleased(e) {
    let t = this.binds[e];
    return !this.preventMenuBind(t) && t && this.input.isInputValueReleased(t);
  }
  isBindDown(e) {
    let t = this.binds[e];
    return !this.preventMenuBind(t) && t && this.input.isInputValueDown(t);
  }
  loadDefaultBinds() {
    this.clearAllBinds();
    let e = Object.keys(Xe);
    for (let t = 0; t < e.length; t++) {
      let i = e[t];
      let r = Xe[i];
      this.setBind(parseInt(i), r.defaultValue);
    }
  }
}
class Ds {
  letructor(e, t) {
    this.input = e;
    this.inputBinds = t;
    this.input = e;
    this.inputBinds = t;
    c(".js-btn-keybind-restore").on("click", () => {
      this.inputBinds.loadDefaultBinds();
      this.inputBinds.saveBinds();
      this.refresh();
    });
  }
  cancelBind() {
    this.input.captureNextInput(null);
  }
  refresh() {
    let e = Object.keys(Xe);
    let t = this.inputBinds.binds;
    let i = c(".js-keybind-list");
    i.empty();
    for (let r = 0; r < e.length; r++) {
      let a = e[r];
      let l = Xe[a];
      let s = t[a];
      let m = c("<a/>", {
        class: "btn-game-menu btn-darken btn-keybind-desc",
        text: l.name
      });
      let d = c("<div/>", {
        class: "btn-keybind-display",
        text: s ? s.toString() : ""
      });
      m.on("click", h => {
        let p = c(h.target);
        p.addClass("btn-keybind-desc-selected");
        this.input.captureNextInput((w, f) => {
          w.preventDefault();
          w.stopPropagation();
          let S = [W.Control, W.Shift, W.Alt, W.Windows, W.ContextMenu, W.F1, W.F2, W.F3, W.F4, W.F5, W.F6, W.F7, W.F8, W.F9, W.F10, W.F11, W.F12];
          if (f.type == ve.Key && S.includes(f.code)) {
            return false;
          }
          p.removeClass("btn-keybind-desc-selected");
          if (!f.equals(oe(W.Escape))) {
            let x = f;
            if (f.equals(oe(W.Backspace))) {
              x = null;
            }
            this.inputBinds.setBind(parseInt(a), x);
            this.inputBinds.saveBinds();
            this.refresh();
          }
          return true;
        });
      });
      i.append(c("<div/>", {
        class: "ui-keybind-container"
      }).append(m).append(d));
    }
    c("#keybind-link").html(this.inputBinds.toBase64());
  }
}
var yt = [{
  region: "na",
  zone: "na",
  url: "usr.mathsiscoolfun.com:8001",
  https: true
}, {
  region: "eu",
  zone: "eu",
  url: "eur.mathsiscoolfun.com:8001",
  https: true
}, {
  region: "asia",
  zone: "asia",
  url: "asr.mathsiscoolfun.com:8001",
  https: true
}, {
  region: "sa",
  zone: "sa",
  url: "sa.mathsiscoolfun.com:8001",
  https: true
}];
class Ls {
  ptcDataBuf = new ArrayBuffer(1);
  tests = yt.map(e => ({
    region: e.region,
    zone: e.zone,
    url: e.url,
    https: e.https,
    ping: 9999,
    active: false,
    complete: false,
    ws: null,
    sendDelay: 0,
    sendTime: 0,
    sendCount: 0,
    recvCount: 0,
    recvCountMax: 6,
    retryCount: 0,
    retryCountMax: 1
  }));
  testsStarted = 0;
  testsCompleted = 0;
  printSummary = true;
  start(e) {
    if ("WebSocket" in window) {
      let t = 0;
      for (let i = 0; i < this.tests.length; i++) {
        let r = this.tests[i];
        if (!r.active && !r.complete && e.includes(r.region)) {
          r.active = true;
          this.testsStarted++;
          t++;
        }
      }
      if (t > 0) {
        this.printSummary = true;
      }
    }
  }
  update(e) {
    let t = r => {
      r.active = false;
      r.complete = true;
      this.testsCompleted++;
    };
    let i = function (r) {
      if (r.ws) {
        r.ws.close();
        r.ws = null;
      }
      if (!r.complete) {
        if (r.retryCount++ >= r.retryCountMax) {
          t(r);
        }
      }
    };
    for (let r = 0; r < this.tests.length; r++) {
      let a = this.tests[r];
      if (!a.active) {
        return "continue";
      }
      if (!a.ws) {
        let l = new WebSocket(`ws${a.https ? "s" : ""}://${a.url}/ptc`);
        l.binaryType = "arraybuffer";
        l.onopen = function () {};
        l.onmessage = function (s) {
          let m = (Date.now() - a.sendTime) / 1000;
          a.ping = Math.min(a.ping, m);
          a.recvCount++;
          a.sendDelay = 0.125;
        };
        l.onerror = function (s) {
          i(a);
        };
        l.onclose = function () {
          i(a);
        };
        a.ws = l;
        a.sendDelay = 0;
        a.sendCount = 0;
        a.recvCount = 0;
      }
      if (a.ws.readyState == a.ws.OPEN) {
        a.sendDelay -= e;
        if (a.sendCount == a.recvCount && a.sendDelay < 0) {
          a.sendTime = Date.now();
          a.sendCount++;
          try {
            a.ws.send(this.ptcDataBuf);
          } catch {
            a.ws.close();
          }
        }
        if (a.recvCount >= a.recvCountMax) {
          t(a);
          a.ws.close();
        }
      }
    }
    if (this.printSummary && this.isComplete()) {
      let r = this.tests.sort((a, l) => a.ping - l.ping);
      console.log("Ping test results");
      console.log("----------------------------------------");
      for (let a = 0; a < r.length; a++) {
        let l = r[a];
        console.log("region", l.region, "zone  ", l.zone, "ping  ", l.ping);
      }
      this.printSummary = false;
    }
  }
  isComplete() {
    return this.testsCompleted == this.testsStarted && this.testsStarted > 0;
  }
  getRegionList() {
    let e = [];
    for (let t = 0; t < yt.length; t++) {
      let i = yt[t].region;
      if (!e.includes(i)) {
        e.push(i);
      }
    }
    return e;
  }
  getRegion() {
    this.tests.sort((e, t) => e.ping - t.ping);
    return this.tests[0].region;
  }
  getZones(e) {
    let t = this.tests.sort((r, a) => r.ping - a.ping);
    let i = [];
    for (let r = 0; r < t.length; r++) {
      let a = t[r];
      if (a.region == e) {
        i.push(a.zone);
      }
    }
    return i;
  }
}
let As = [{
  meta: {
    image: "loadout-0-100-71653988.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "part-aura-circle-01.img": {
      frame: {
        x: 508,
        y: 2,
        w: 284,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 284,
        h: 282
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "ping-map-pulse.img": {
      frame: {
        x: 2,
        y: 2,
        w: 502,
        h: 502
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 502,
        h: 502
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "part-shell-05.img": {
      frame: {
        x: 2,
        y: 508,
        w: 63,
        h: 260
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 63,
        h: 260
      },
      sourceSize: {
        w: 63,
        h: 260
      }
    },
    "emote-circle-outer.img": {
      frame: {
        x: 69,
        y: 508,
        w: 252,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 252,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "part-smoke-03.img": {
      frame: {
        x: 325,
        y: 508,
        w: 255,
        h: 251
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 255,
        h: 251
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "part-smoke-02.img": {
      frame: {
        x: 796,
        y: 2,
        w: 256,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 256,
        h: 250
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "gun-scarssr-01.img": {
      frame: {
        x: 796,
        y: 256,
        w: 62,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 62,
        h: 250
      },
      sourceSize: {
        w: 60,
        h: 248
      }
    },
    "gun-potato-cannon-01.img": {
      frame: {
        x: 862,
        y: 256,
        w: 58,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 58,
        h: 250
      },
      sourceSize: {
        w: 56,
        h: 248
      }
    },
    "gun-awc-02.img": {
      frame: {
        x: 924,
        y: 256,
        w: 47,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 47,
        h: 228
      },
      sourceSize: {
        w: 60,
        h: 236
      }
    },
    "gun-awc-01.img": {
      frame: {
        x: 975,
        y: 256,
        w: 47,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 47,
        h: 228
      },
      sourceSize: {
        w: 60,
        h: 236
      }
    },
    "gun-m249-top-01.img": {
      frame: {
        x: 796,
        y: 510,
        w: 38,
        h: 216
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 17,
        w: 38,
        h: 216
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-garand-01.img": {
      frame: {
        x: 838,
        y: 510,
        w: 34,
        h: 214
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 19,
        w: 34,
        h: 214
      },
      sourceSize: {
        w: 48,
        h: 232
      }
    },
    "gun-potato-smg-01.img": {
      frame: {
        x: 876,
        y: 510,
        w: 101,
        h: 212
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 37,
        w: 101,
        h: 212
      },
      sourceSize: {
        w: 176,
        h: 248
      }
    },
    "gun-usas-01.img": {
      frame: {
        x: 981,
        y: 510,
        w: 43,
        h: 210
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 23,
        w: 43,
        h: 210
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-vss-01.img": {
      frame: {
        x: 508,
        y: 288,
        w: 40,
        h: 210
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: -1,
        w: 40,
        h: 210
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "pad.img": {
      frame: {
        x: 552,
        y: 288,
        w: 208,
        h: 208
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 208,
        h: 208
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "gun-scorpion-01.img": {
      frame: {
        x: 584,
        y: 508,
        w: 41,
        h: 200
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 9,
        w: 41,
        h: 200
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "gun-pkp-top-01.img": {
      frame: {
        x: 629,
        y: 508,
        w: 36,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 39,
        w: 36,
        h: 194
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-grozas-01.img": {
      frame: {
        x: 669,
        y: 508,
        w: 40,
        h: 191
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 18,
        w: 40,
        h: 191
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "part-shell-02.img": {
      frame: {
        x: 713,
        y: 508,
        w: 63,
        h: 190
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 63,
        h: 190
      },
      sourceSize: {
        w: 63,
        h: 190
      }
    },
    "gun-m4a1-01.img": {
      frame: {
        x: 2,
        y: 772,
        w: 44,
        h: 189
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 44,
        h: 189
      },
      sourceSize: {
        w: 48,
        h: 196
      }
    },
    "gun-long-01.img": {
      frame: {
        x: 50,
        y: 772,
        w: 31,
        h: 186
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 31,
        h: 186
      },
      sourceSize: {
        w: 32,
        h: 188
      }
    },
    "part-shell-03.img": {
      frame: {
        x: 85,
        y: 772,
        w: 63,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 63,
        h: 180
      },
      sourceSize: {
        w: 63,
        h: 180
      }
    },
    "player-helmet-forest.img": {
      frame: {
        x: 152,
        y: 772,
        w: 150,
        h: 178
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 178
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "gun-saiga-01.img": {
      frame: {
        x: 306,
        y: 772,
        w: 40,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 40,
        h: 174
      },
      sourceSize: {
        w: 48,
        h: 196
      }
    },
    "player-wading-01.img": {
      frame: {
        x: 350,
        y: 772,
        w: 170,
        h: 170
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 170,
        h: 170
      },
      sourceSize: {
        w: 172,
        h: 172
      }
    },
    "gun-famas-01.img": {
      frame: {
        x: 524,
        y: 772,
        w: 38,
        h: 168
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 41,
        w: 38,
        h: 168
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "part-shell-04.img": {
      frame: {
        x: 566,
        y: 772,
        w: 55,
        h: 164
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 55,
        h: 164
      },
      sourceSize: {
        w: 55,
        h: 164
      }
    },
    "loot-melee-machete-taiga.img": {
      frame: {
        x: 625,
        y: 772,
        w: 44,
        h: 164
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 60,
        y: 3,
        w: 44,
        h: 164
      },
      sourceSize: {
        w: 168,
        h: 168
      }
    },
    "part-airdrop-03.img": {
      frame: {
        x: 673,
        y: 772,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "part-airdrop-02x.img": {
      frame: {
        x: 837,
        y: 772,
        w: 38,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 160
      },
      sourceSize: {
        w: 38,
        h: 160
      }
    },
    "part-airdrop-02.img": {
      frame: {
        x: 879,
        y: 772,
        w: 38,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 160
      },
      sourceSize: {
        w: 38,
        h: 160
      }
    },
    "proj-bomb-iron-01.img": {
      frame: {
        x: 921,
        y: 772,
        w: 66,
        h: 157
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 47,
        y: 2,
        w: 66,
        h: 157
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "proj-smoke-nopin.img": {
      frame: {
        x: 1056,
        y: 2,
        w: 152,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 152,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "proj-smoke-pin.img": {
      frame: {
        x: 1056,
        y: 161,
        w: 152,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 152,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-bonesaw-healer.img": {
      frame: {
        x: 1056,
        y: 320,
        w: 60,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 10,
        w: 60,
        h: 155
      },
      sourceSize: {
        w: 168,
        h: 168
      }
    },
    "loot-melee-bonesaw-rusted.img": {
      frame: {
        x: 1120,
        y: 320,
        w: 54,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 81,
        y: 22,
        w: 54,
        h: 155
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "loot-melee-kukri-sniper.img": {
      frame: {
        x: 1056,
        y: 479,
        w: 40,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 3,
        w: 40,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-kukri-trad.img": {
      frame: {
        x: 1100,
        y: 479,
        w: 40,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 3,
        w: 40,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-spade-assault.img": {
      frame: {
        x: 1144,
        y: 479,
        w: 54,
        h: 150
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 53,
        y: 5,
        w: 54,
        h: 150
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "gun-groza-01.img": {
      frame: {
        x: 1056,
        y: 638,
        w: 40,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 61,
        w: 40,
        h: 148
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "player-circle-base-01.img": {
      frame: {
        x: 1056,
        y: 790,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-circle-base-02.img": {
      frame: {
        x: 2,
        y: 965,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-armor-base-01.img": {
      frame: {
        x: 152,
        y: 965,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-helmet-moon.img": {
      frame: {
        x: 302,
        y: 965,
        w: 120,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 15,
        w: 120,
        h: 146
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "proj-smoke-nopin-nolever.img": {
      frame: {
        x: 1100,
        y: 638,
        w: 76,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 42,
        y: 7,
        w: 76,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-circle-outer-05.img": {
      frame: {
        x: 426,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "ping-border.img": {
      frame: {
        x: 574,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-circle-outer-02.img": {
      frame: {
        x: 722,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "loot-circle-outer-01.img": {
      frame: {
        x: 870,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "proj-mirv-nopin.img": {
      frame: {
        x: 1018,
        y: 965,
        w: 102,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 2,
        w: 102,
        h: 144
      },
      sourceSize: {
        w: 128,
        h: 148
      }
    },
    "proj-mirv-pin.img": {
      frame: {
        x: 1212,
        y: 2,
        w: 102,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 102,
        h: 144
      },
      sourceSize: {
        w: 128,
        h: 148
      }
    },
    "proj-mirv-nopin-nolever.img": {
      frame: {
        x: 1212,
        y: 150,
        w: 76,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 2,
        w: 76,
        h: 144
      },
      sourceSize: {
        w: 128,
        h: 148
      }
    },
    "gun-bugle-01.img": {
      frame: {
        x: 1212,
        y: 298,
        w: 64,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 89,
        w: 64,
        h: 143
      },
      sourceSize: {
        w: 96,
        h: 232
      }
    },
    "player-star.img": {
      frame: {
        x: 2,
        y: 1115,
        w: 148,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 148,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "star.img": {
      frame: {
        x: 154,
        y: 1115,
        w: 148,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 148,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-ripple-01.img": {
      frame: {
        x: 306,
        y: 1115,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 142,
        h: 142
      }
    },
    "part-plank-01.img": {
      frame: {
        x: 452,
        y: 1115,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-panel-01.img": {
      frame: {
        x: 598,
        y: 1115,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-woodchip-01.img": {
      frame: {
        x: 744,
        y: 1115,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "player-the-hunted.img": {
      frame: {
        x: 889,
        y: 1115,
        w: 140,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 140,
        h: 138
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-book-01.img": {
      frame: {
        x: 1033,
        y: 1115,
        w: 104,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 3,
        w: 104,
        h: 138
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-melee-crowbar-scout.img": {
      frame: {
        x: 1212,
        y: 445,
        w: 37,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 7,
        w: 37,
        h: 138
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-crowbar-recon.img": {
      frame: {
        x: 1253,
        y: 445,
        w: 37,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 7,
        w: 37,
        h: 138
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-helmet-last-man-01.img": {
      frame: {
        x: 1141,
        y: 1115,
        w: 139,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 20,
        w: 139,
        h: 136
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-last-man-02.img": {
      frame: {
        x: 1318,
        y: 2,
        w: 139,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 20,
        w: 139,
        h: 136
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-base-02.img": {
      frame: {
        x: 1318,
        y: 142,
        w: 136,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 136,
        h: 136
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-01.img": {
      frame: {
        x: 1318,
        y: 282,
        w: 136,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 136,
        h: 136
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "part-pot-01.img": {
      frame: {
        x: 1318,
        y: 422,
        w: 94,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 4,
        w: 94,
        h: 136
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "player-base-outfitParmaPrestige.img": {
      frame: {
        x: 1318,
        y: 562,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "player-base-outfitLumber.img": {
      frame: {
        x: 1318,
        y: 700,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitWheat.img": {
      frame: {
        x: 1318,
        y: 838,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitHeaven.img": {
      frame: {
        x: 1318,
        y: 976,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitTurkey.img": {
      frame: {
        x: 1318,
        y: 1114,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitDC.img": {
      frame: {
        x: 2,
        y: 1261,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitSpetsnaz.img": {
      frame: {
        x: 140,
        y: 1261,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "loot-circle-outer-04.img": {
      frame: {
        x: 278,
        y: 1261,
        w: 140,
        h: 133
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 140,
        h: 133
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "part-shell-01.img": {
      frame: {
        x: 1212,
        y: 587,
        w: 56,
        h: 133
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 133
      },
      sourceSize: {
        w: 56,
        h: 133
      }
    },
    "player-king-woods.img": {
      frame: {
        x: 422,
        y: 1261,
        w: 140,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 8,
        w: 140,
        h: 132
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "part-plate-01.img": {
      frame: {
        x: 566,
        y: 1261,
        w: 138,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 138,
        h: 132
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-melee-warhammer-tank.img": {
      frame: {
        x: 708,
        y: 1261,
        w: 255,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 18,
        w: 255,
        h: 130
      },
      sourceSize: {
        w: 264,
        h: 152
      }
    },
    "part-splat-02.img": {
      frame: {
        x: 967,
        y: 1261,
        w: 123,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 8,
        w: 123,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "gun-mp220-01.img": {
      frame: {
        x: 1416,
        y: 422,
        w: 40,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 40,
        h: 130
      },
      sourceSize: {
        w: 40,
        h: 128
      }
    },
    "flag-colombia.img": {
      frame: {
        x: 1094,
        y: 1261,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-croatia.img": {
      frame: {
        x: 1226,
        y: 1261,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-czech-republic.img": {
      frame: {
        x: 1461,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-denmark.img": {
      frame: {
        x: 1461,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-dominican-republic.img": {
      frame: {
        x: 1461,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-ecuador.img": {
      frame: {
        x: 1461,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-egypt.img": {
      frame: {
        x: 1461,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-estonia.img": {
      frame: {
        x: 1461,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-finland.img": {
      frame: {
        x: 1461,
        y: 794,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-france.img": {
      frame: {
        x: 1461,
        y: 926,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-georgia.img": {
      frame: {
        x: 1461,
        y: 1058,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-germany.img": {
      frame: {
        x: 1461,
        y: 1190,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-greece.img": {
      frame: {
        x: 2,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-guatemala.img": {
      frame: {
        x: 134,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-honduras.img": {
      frame: {
        x: 266,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-00.img": {
      frame: {
        x: 398,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-hungary.img": {
      frame: {
        x: 530,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-india.img": {
      frame: {
        x: 662,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-indonesia.img": {
      frame: {
        x: 794,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-israel.img": {
      frame: {
        x: 926,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-italy.img": {
      frame: {
        x: 1058,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-japan.img": {
      frame: {
        x: 1190,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-kazakhstan.img": {
      frame: {
        x: 1322,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-latvia.img": {
      frame: {
        x: 1454,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-lithuania.img": {
      frame: {
        x: 1593,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-malaysia.img": {
      frame: {
        x: 1593,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-mexico.img": {
      frame: {
        x: 1593,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-moldova.img": {
      frame: {
        x: 1593,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-morocco.img": {
      frame: {
        x: 1593,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-netherlands.img": {
      frame: {
        x: 1593,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-new-zealand.img": {
      frame: {
        x: 1593,
        y: 794,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-norway.img": {
      frame: {
        x: 1593,
        y: 926,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-peru.img": {
      frame: {
        x: 1593,
        y: 1058,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-philippines.img": {
      frame: {
        x: 1593,
        y: 1190,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-portugal.img": {
      frame: {
        x: 1593,
        y: 1322,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-republic-of-poland.img": {
      frame: {
        x: 2,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-romania.img": {
      frame: {
        x: 134,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-russia.img": {
      frame: {
        x: 266,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-serbia.img": {
      frame: {
        x: 398,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-singapore.img": {
      frame: {
        x: 530,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-slovakia.img": {
      frame: {
        x: 662,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-south-korea.img": {
      frame: {
        x: 794,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-spain.img": {
      frame: {
        x: 926,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-sweden.img": {
      frame: {
        x: 1058,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-switzerland.img": {
      frame: {
        x: 1190,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-taiwan.img": {
      frame: {
        x: 1322,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-thailand.img": {
      frame: {
        x: 1454,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-trinidad-and-tobago.img": {
      frame: {
        x: 1586,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-turkey.img": {
      frame: {
        x: 1725,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-ukraine.img": {
      frame: {
        x: 1725,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-united-arab-emirates.img": {
      frame: {
        x: 1725,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-united-kingdom.img": {
      frame: {
        x: 1725,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-united-states-of-america.img": {
      frame: {
        x: 1725,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-uruguay.img": {
      frame: {
        x: 1725,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-venezuela.img": {
      frame: {
        x: 1725,
        y: 794,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-vietnam.img": {
      frame: {
        x: 1725,
        y: 926,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-02.img": {
      frame: {
        x: 1725,
        y: 1058,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-hong-kong.img": {
      frame: {
        x: 1725,
        y: 1190,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-01.img": {
      frame: {
        x: 1725,
        y: 1322,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-angel-treat.img": {
      frame: {
        x: 1725,
        y: 1454,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-03.img": {
      frame: {
        x: 2,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-crosshair.img": {
      frame: {
        x: 134,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-ammo-box.img": {
      frame: {
        x: 266,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-albania.img": {
      frame: {
        x: 398,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-04.img": {
      frame: {
        x: 530,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-algeria.img": {
      frame: {
        x: 662,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-argentina.img": {
      frame: {
        x: 794,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-deagle-dual.img": {
      frame: {
        x: 926,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-australia.img": {
      frame: {
        x: 1058,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-austria.img": {
      frame: {
        x: 1190,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-azerbaijan.img": {
      frame: {
        x: 1322,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-belarus.img": {
      frame: {
        x: 1454,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m93r-dual.img": {
      frame: {
        x: 1586,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-belgium.img": {
      frame: {
        x: 1718,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-bolivia.img": {
      frame: {
        x: 1857,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-bosnia-and-herzegovina.img": {
      frame: {
        x: 1857,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-brazil.img": {
      frame: {
        x: 1857,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-canada.img": {
      frame: {
        x: 1857,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-chile.img": {
      frame: {
        x: 1857,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-china.img": {
      frame: {
        x: 1857,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-coming.img": {
      frame: {
        x: 1857,
        y: 794,
        w: 112,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 112,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 256
      }
    },
    "loot-weapon-flare-gun-dual.img": {
      frame: {
        x: 1857,
        y: 926,
        w: 110,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 110,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m93r.img": {
      frame: {
        x: 1857,
        y: 1058,
        w: 100,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 0,
        w: 100,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-helmet-potato.img": {
      frame: {
        x: 1857,
        y: 1190,
        w: 99,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 99,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-medic.img": {
      frame: {
        x: 1857,
        y: 1322,
        w: 97,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 97,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-lieutenant.img": {
      frame: {
        x: 1857,
        y: 1454,
        w: 97,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 97,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-leader.img": {
      frame: {
        x: 1857,
        y: 1586,
        w: 97,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 97,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "indicator.img": {
      frame: {
        x: 1212,
        y: 724,
        w: 90,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 0,
        w: 90,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-airdrop-04.img": {
      frame: {
        x: 1212,
        y: 856,
        w: 54,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 128
      },
      sourceSize: {
        w: 54,
        h: 128
      }
    },
    "ping-map-danger.img": {
      frame: {
        x: 1272,
        y: 587,
        w: 40,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 40,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-aoe-heal.img": {
      frame: {
        x: 2,
        y: 1795,
        w: 127,
        h: 127
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 127,
        h: 127
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-circle-outer-03.img": {
      frame: {
        x: 133,
        y: 1795,
        w: 146,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 146,
        h: 126
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "ping-team-danger.img": {
      frame: {
        x: 283,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-poo.img": {
      frame: {
        x: 413,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-unlock.img": {
      frame: {
        x: 543,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-airdrop.img": {
      frame: {
        x: 673,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-help.img": {
      frame: {
        x: 803,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-coming.img": {
      frame: {
        x: 933,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-airstrike.img": {
      frame: {
        x: 1063,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-imp-trick.img": {
      frame: {
        x: 1193,
        y: 1795,
        w: 124,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 124,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-thinking.img": {
      frame: {
        x: 1321,
        y: 1795,
        w: 124,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-grozas.img": {
      frame: {
        x: 1449,
        y: 1795,
        w: 122,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 122,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ot38-dual.img": {
      frame: {
        x: 1575,
        y: 1795,
        w: 121,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 121,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-colt45-dual.img": {
      frame: {
        x: 1700,
        y: 1795,
        w: 120,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 120,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mkg45.img": {
      frame: {
        x: 1824,
        y: 1795,
        w: 116,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 116,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m4a1.img": {
      frame: {
        x: 1989,
        y: 2,
        w: 116,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 116,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1014.img": {
      frame: {
        x: 1989,
        y: 132,
        w: 110,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 110,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-svd.img": {
      frame: {
        x: 1989,
        y: 262,
        w: 110,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 110,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-vss.img": {
      frame: {
        x: 1989,
        y: 392,
        w: 108,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 108,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ots38-dual.img": {
      frame: {
        x: 1989,
        y: 522,
        w: 105,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 1,
        w: 105,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-helmet-grenadier.img": {
      frame: {
        x: 1989,
        y: 652,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-bugler.img": {
      frame: {
        x: 1989,
        y: 782,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-recon.img": {
      frame: {
        x: 1989,
        y: 912,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-visor-scout.img": {
      frame: {
        x: 1989,
        y: 1042,
        w: 77,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 76,
        y: 25,
        w: 77,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "gun-deagle-01.img": {
      frame: {
        x: 1989,
        y: 1172,
        w: 42,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 107,
        w: 42,
        h: 126
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-med-01.img": {
      frame: {
        x: 2070,
        y: 1042,
        w: 30,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 30,
        h: 126
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "proj-strobe-unarmed.img": {
      frame: {
        x: 2,
        y: 1926,
        w: 147,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 25,
        w: 147,
        h: 125
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "star-red.img": {
      frame: {
        x: 153,
        y: 1926,
        w: 132,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 132,
        h: 125
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "star-blue.img": {
      frame: {
        x: 289,
        y: 1926,
        w: 132,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 132,
        h: 125
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "face-alien.img": {
      frame: {
        x: 425,
        y: 1926,
        w: 124,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "snowflake.img": {
      frame: {
        x: 1989,
        y: 1302,
        w: 114,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-dp28.img": {
      frame: {
        x: 1989,
        y: 1431,
        w: 114,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-boost-naturalize.img": {
      frame: {
        x: 1989,
        y: 1560,
        w: 94,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 2,
        w: 94,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-imp.img": {
      frame: {
        x: 553,
        y: 1926,
        w: 126,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 126,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-heart.img": {
      frame: {
        x: 683,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-sob.img": {
      frame: {
        x: 811,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-sad.img": {
      frame: {
        x: 939,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-upsidedown.img": {
      frame: {
        x: 1067,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-monocle.img": {
      frame: {
        x: 1195,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-joy.img": {
      frame: {
        x: 1323,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-log-01.img": {
      frame: {
        x: 1451,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-emote.img": {
      frame: {
        x: 1579,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-sunglass.img": {
      frame: {
        x: 1707,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-happy.img": {
      frame: {
        x: 1835,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-disappoint.img": {
      frame: {
        x: 1963,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-targeting.img": {
      frame: {
        x: 2109,
        y: 2,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-bandaged.img": {
      frame: {
        x: 2109,
        y: 130,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-angry.img": {
      frame: {
        x: 2109,
        y: 258,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-picasso.img": {
      frame: {
        x: 2109,
        y: 386,
        w: 122,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 122,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-splinter.img": {
      frame: {
        x: 2109,
        y: 514,
        w: 116,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 116,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "campfire.img": {
      frame: {
        x: 2109,
        y: 642,
        w: 116,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 116,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-an94.img": {
      frame: {
        x: 2109,
        y: 770,
        w: 114,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-pkp.img": {
      frame: {
        x: 2109,
        y: 898,
        w: 114,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1a1.img": {
      frame: {
        x: 2109,
        y: 1026,
        w: 113,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 113,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scorpion.img": {
      frame: {
        x: 2109,
        y: 1154,
        w: 113,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 113,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-potato-smg.img": {
      frame: {
        x: 2109,
        y: 1282,
        w: 111,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 111,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "reload.img": {
      frame: {
        x: 2109,
        y: 1410,
        w: 108,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 2,
        w: 108,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "trash.img": {
      frame: {
        x: 2109,
        y: 1538,
        w: 108,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 2,
        w: 108,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "thumbs-up.img": {
      frame: {
        x: 2109,
        y: 1666,
        w: 104,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 2,
        w: 104,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bullets.img": {
      frame: {
        x: 2109,
        y: 1794,
        w: 86,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 2,
        w: 86,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-splat-01.img": {
      frame: {
        x: 2,
        y: 2055,
        w: 126,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 126,
        h: 123
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-weapon-saiga.img": {
      frame: {
        x: 2109,
        y: 1922,
        w: 112,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 3,
        w: 112,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "tombstone.img": {
      frame: {
        x: 1989,
        y: 1689,
        w: 112,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 112,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m39.img": {
      frame: {
        x: 132,
        y: 2055,
        w: 108,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 3,
        w: 108,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "police.img": {
      frame: {
        x: 1212,
        y: 988,
        w: 100,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 2,
        w: 100,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-gotw.img": {
      frame: {
        x: 244,
        y: 2055,
        w: 128,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 128,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-leadership.img": {
      frame: {
        x: 376,
        y: 2055,
        w: 128,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 128,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-firepower.img": {
      frame: {
        x: 508,
        y: 2055,
        w: 126,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 126,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-bar.img": {
      frame: {
        x: 638,
        y: 2055,
        w: 126,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 126,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scarssr.img": {
      frame: {
        x: 768,
        y: 2055,
        w: 125,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 125,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "heart.img": {
      frame: {
        x: 897,
        y: 2055,
        w: 124,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 124,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "surviv.img": {
      frame: {
        x: 1025,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-hunted.img": {
      frame: {
        x: 1151,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "emote.img": {
      frame: {
        x: 1277,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-potato-cannon.img": {
      frame: {
        x: 1403,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mk12.img": {
      frame: {
        x: 1529,
        y: 2055,
        w: 114,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 3,
        w: 114,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "cupcake.img": {
      frame: {
        x: 1647,
        y: 2055,
        w: 108,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 3,
        w: 108,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "candy-corn.img": {
      frame: {
        x: 1759,
        y: 2055,
        w: 104,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 3,
        w: 104,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-tomoe.img": {
      frame: {
        x: 1867,
        y: 2055,
        w: 104,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 3,
        w: 104,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "snowman.img": {
      frame: {
        x: 1358,
        y: 1261,
        w: 96,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 3,
        w: 96,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-rare-potato.img": {
      frame: {
        x: 1975,
        y: 2055,
        w: 90,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 3,
        w: 90,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-smoke.img": {
      frame: {
        x: 1124,
        y: 965,
        w: 84,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 3,
        w: 84,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ice-cream.img": {
      frame: {
        x: 2035,
        y: 1172,
        w: 66,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 31,
        y: 3,
        w: 66,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-p30l-01.img": {
      frame: {
        x: 2199,
        y: 1794,
        w: 33,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 111,
        w: 33,
        h: 122
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "loadout-melee.img": {
      frame: {
        x: 2069,
        y: 2055,
        w: 123,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 123,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-awc.img": {
      frame: {
        x: 2237,
        y: 2,
        w: 122,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 6,
        w: 122,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-l86.img": {
      frame: {
        x: 2237,
        y: 127,
        w: 118,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 118,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m249.img": {
      frame: {
        x: 2237,
        y: 252,
        w: 116,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 4,
        w: 116,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-pin-02.img": {
      frame: {
        x: 2237,
        y: 377,
        w: 110,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 110,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-pin-01.img": {
      frame: {
        x: 2237,
        y: 502,
        w: 110,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 110,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-01.img": {
      frame: {
        x: 2237,
        y: 627,
        w: 109,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 109,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-02.img": {
      frame: {
        x: 2237,
        y: 752,
        w: 109,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 109,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-nolever-01.img": {
      frame: {
        x: 2237,
        y: 877,
        w: 90,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 90,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-nolever-02.img": {
      frame: {
        x: 2237,
        y: 1002,
        w: 90,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 90,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "chicken-dinner.img": {
      frame: {
        x: 2,
        y: 2182,
        w: 128,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 128,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-splat-03.img": {
      frame: {
        x: 134,
        y: 2182,
        w: 123,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 6,
        w: 123,
        h: 120
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-weapon-usas.img": {
      frame: {
        x: 2237,
        y: 1127,
        w: 122,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 122,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-chambered.img": {
      frame: {
        x: 2237,
        y: 1251,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "rainbow.img": {
      frame: {
        x: 2237,
        y: 1375,
        w: 119,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 119,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-qbb97.img": {
      frame: {
        x: 2237,
        y: 1499,
        w: 118,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 118,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ak.img": {
      frame: {
        x: 2237,
        y: 1623,
        w: 102,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 4,
        w: 102,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "egg.img": {
      frame: {
        x: 2237,
        y: 1747,
        w: 98,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 4,
        w: 98,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-colt45.img": {
      frame: {
        x: 2237,
        y: 1871,
        w: 96,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 4,
        w: 96,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ots38.img": {
      frame: {
        x: 2237,
        y: 1995,
        w: 81,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 4,
        w: 81,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-chest-02.img": {
      frame: {
        x: 261,
        y: 2182,
        w: 76,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 4,
        w: 76,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1911-dual.img": {
      frame: {
        x: 341,
        y: 2182,
        w: 128,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 128,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1100.img": {
      frame: {
        x: 473,
        y: 2182,
        w: 119,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 7,
        w: 119,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1911.img": {
      frame: {
        x: 596,
        y: 2182,
        w: 107,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 5,
        w: 107,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-hk416.img": {
      frame: {
        x: 707,
        y: 2182,
        w: 105,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 4,
        w: 105,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-potato-02.img": {
      frame: {
        x: 816,
        y: 2182,
        w: 94,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 4,
        w: 94,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-windwalk.img": {
      frame: {
        x: 914,
        y: 2182,
        w: 86,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 6,
        w: 86,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m9-dual.img": {
      frame: {
        x: 1004,
        y: 2182,
        w: 128,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 128,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "salt.img": {
      frame: {
        x: 1136,
        y: 2182,
        w: 124,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 124,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-sv98.img": {
      frame: {
        x: 1264,
        y: 2182,
        w: 121,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 121,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "skull.img": {
      frame: {
        x: 1389,
        y: 2182,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "donut.img": {
      frame: {
        x: 1513,
        y: 2182,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-kill-icon.img": {
      frame: {
        x: 1637,
        y: 2182,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-feather-01.img": {
      frame: {
        x: 1761,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-fabricate.img": {
      frame: {
        x: 1883,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-stump-01.img": {
      frame: {
        x: 2005,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-feather-02.img": {
      frame: {
        x: 2127,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-basic.img": {
      frame: {
        x: 2363,
        y: 2,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-chest-01.img": {
      frame: {
        x: 2363,
        y: 124,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "mag-glass.img": {
      frame: {
        x: 2363,
        y: 246,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-boost-basic.img": {
      frame: {
        x: 2363,
        y: 368,
        w: 116,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 5,
        w: 116,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-moon.img": {
      frame: {
        x: 2363,
        y: 490,
        w: 114,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 5,
        w: 114,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ump9.img": {
      frame: {
        x: 2363,
        y: 612,
        w: 114,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 5,
        w: 114,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-famas.img": {
      frame: {
        x: 2363,
        y: 734,
        w: 112,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 5,
        w: 112,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-vector45.img": {
      frame: {
        x: 2363,
        y: 856,
        w: 104,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 5,
        w: 104,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-04.img": {
      frame: {
        x: 2363,
        y: 978,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-01.img": {
      frame: {
        x: 2363,
        y: 1100,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-chest-03.img": {
      frame: {
        x: 2363,
        y: 1222,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m9.img": {
      frame: {
        x: 2363,
        y: 1344,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-02.img": {
      frame: {
        x: 2363,
        y: 1466,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-06.img": {
      frame: {
        x: 2363,
        y: 1588,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-03.img": {
      frame: {
        x: 2363,
        y: 1710,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-05.img": {
      frame: {
        x: 2363,
        y: 1832,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-00.img": {
      frame: {
        x: 2363,
        y: 1954,
        w: 90,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 5,
        w: 90,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-02.img": {
      frame: {
        x: 2363,
        y: 2076,
        w: 88,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 5,
        w: 88,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ok.img": {
      frame: {
        x: 2249,
        y: 2182,
        w: 84,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 5,
        w: 84,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-bayonet-rugged.img": {
      frame: {
        x: 2322,
        y: 1995,
        w: 36,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 5,
        w: 36,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "crosshair022.img": {
      frame: {
        x: 3033,
        y: 92,
        w: 12,
        h: 8
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 28,
        w: 12,
        h: 8
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-strobe-arming.img": {
      frame: {
        x: 2,
        y: 2306,
        w: 134,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 27,
        w: 134,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "proj-strobe-armed.img": {
      frame: {
        x: 140,
        y: 2306,
        w: 134,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 27,
        w: 134,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-perk-steelskin.img": {
      frame: {
        x: 278,
        y: 2306,
        w: 82,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 5,
        w: 82,
        h: 117
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-heart.img": {
      frame: {
        x: 364,
        y: 2306,
        w: 118,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 11,
        w: 118,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mosin.img": {
      frame: {
        x: 486,
        y: 2306,
        w: 118,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 6,
        w: 118,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m870.img": {
      frame: {
        x: 608,
        y: 2306,
        w: 117,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 117,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-06.img": {
      frame: {
        x: 729,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-04.img": {
      frame: {
        x: 849,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-05.img": {
      frame: {
        x: 969,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-spark-01.img": {
      frame: {
        x: 1089,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "part-spark-02.img": {
      frame: {
        x: 1209,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "gas.img": {
      frame: {
        x: 1329,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-heal.img": {
      frame: {
        x: 1449,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-03.img": {
      frame: {
        x: 1569,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "target.img": {
      frame: {
        x: 1689,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-boost.img": {
      frame: {
        x: 1809,
        y: 2306,
        w: 114,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 114,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flex.img": {
      frame: {
        x: 1927,
        y: 2306,
        w: 109,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 6,
        w: 109,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-bandage.img": {
      frame: {
        x: 2040,
        y: 2306,
        w: 106,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 6,
        w: 106,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "acorn.img": {
      frame: {
        x: 2150,
        y: 2306,
        w: 104,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 6,
        w: 104,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ghost-base.img": {
      frame: {
        x: 2258,
        y: 2306,
        w: 104,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 6,
        w: 104,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scar.img": {
      frame: {
        x: 2366,
        y: 2306,
        w: 104,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 6,
        w: 104,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-01.img": {
      frame: {
        x: 2485,
        y: 2,
        w: 94,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 6,
        w: 94,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-inspiration-red.img": {
      frame: {
        x: 2485,
        y: 122,
        w: 88,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 6,
        w: 88,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-inspiration-blue.img": {
      frame: {
        x: 2485,
        y: 242,
        w: 88,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 6,
        w: 88,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-flare-gun.img": {
      frame: {
        x: 2485,
        y: 362,
        w: 82,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 82,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-bowie-vintage.img": {
      frame: {
        x: 2485,
        y: 482,
        w: 42,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 6,
        w: 42,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-bowie-frontier.img": {
      frame: {
        x: 2531,
        y: 482,
        w: 42,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 6,
        w: 42,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-huntsman-burnished.img": {
      frame: {
        x: 2485,
        y: 602,
        w: 24,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 52,
        y: 6,
        w: 24,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-huntsman-rugged.img": {
      frame: {
        x: 2513,
        y: 602,
        w: 24,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 52,
        y: 6,
        w: 24,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "sleepy.img": {
      frame: {
        x: 2,
        y: 2427,
        w: 124,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 7,
        w: 124,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-bugle.img": {
      frame: {
        x: 130,
        y: 2427,
        w: 122,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 7,
        w: 122,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-boost-star.img": {
      frame: {
        x: 256,
        y: 2427,
        w: 120,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 120,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "chick.img": {
      frame: {
        x: 380,
        y: 2427,
        w: 114,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 114,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-garand.img": {
      frame: {
        x: 498,
        y: 2427,
        w: 112,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 112,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pumpkin.img": {
      frame: {
        x: 614,
        y: 2427,
        w: 106,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 7,
        w: 106,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-deagle.img": {
      frame: {
        x: 724,
        y: 2427,
        w: 104,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 7,
        w: 104,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-03.img": {
      frame: {
        x: 832,
        y: 2427,
        w: 104,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 7,
        w: 104,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-spas12.img": {
      frame: {
        x: 940,
        y: 2427,
        w: 96,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 7,
        w: 96,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mp5.img": {
      frame: {
        x: 1040,
        y: 2427,
        w: 96,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 7,
        w: 96,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "tap.img": {
      frame: {
        x: 1140,
        y: 2427,
        w: 96,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 7,
        w: 96,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ot38.img": {
      frame: {
        x: 2485,
        y: 722,
        w: 90,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 7,
        w: 90,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-tank.img": {
      frame: {
        x: 2485,
        y: 840,
        w: 73,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 84,
        y: 31,
        w: 73,
        h: 114
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "part-boost-shuriken.img": {
      frame: {
        x: 1240,
        y: 2427,
        w: 117,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 117,
        h: 113
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-04.img": {
      frame: {
        x: 1361,
        y: 2427,
        w: 115,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 115,
        h: 113
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-pan-black-side.img": {
      frame: {
        x: 2541,
        y: 602,
        w: 19,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 55,
        y: 7,
        w: 19,
        h: 113
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-p30l-dual.img": {
      frame: {
        x: 1480,
        y: 2427,
        w: 124,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 8,
        w: 124,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "cattle.img": {
      frame: {
        x: 1608,
        y: 2427,
        w: 118,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 8,
        w: 118,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitLumber.img": {
      frame: {
        x: 1730,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitKeyLime.img": {
      frame: {
        x: 1850,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitHeaven.img": {
      frame: {
        x: 1970,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDev.img": {
      frame: {
        x: 2090,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDesertCamo.img": {
      frame: {
        x: 2210,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDarkShirt.img": {
      frame: {
        x: 2330,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDarkGloves.img": {
      frame: {
        x: 2450,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitRoyalFortune.img": {
      frame: {
        x: 2583,
        y: 2,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitCobaltShell.img": {
      frame: {
        x: 2583,
        y: 118,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitWheat.img": {
      frame: {
        x: 2583,
        y: 234,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitCarbonFiber.img": {
      frame: {
        x: 2583,
        y: 350,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitCamo.img": {
      frame: {
        x: 2583,
        y: 466,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitBase.img": {
      frame: {
        x: 2583,
        y: 582,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitTurkey.img": {
      frame: {
        x: 2583,
        y: 698,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-01.img": {
      frame: {
        x: 2583,
        y: 814,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitRed.img": {
      frame: {
        x: 2583,
        y: 930,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitWoodland.img": {
      frame: {
        x: 2583,
        y: 1046,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitSpetsnaz.img": {
      frame: {
        x: 2583,
        y: 1162,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-blr.img": {
      frame: {
        x: 2583,
        y: 1278,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitWhite.img": {
      frame: {
        x: 2583,
        y: 1394,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitParmaPrestige.img": {
      frame: {
        x: 2583,
        y: 1510,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-outfit.img": {
      frame: {
        x: 2583,
        y: 1626,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitParma.img": {
      frame: {
        x: 2583,
        y: 1742,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitMod.img": {
      frame: {
        x: 2583,
        y: 1858,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-03.img": {
      frame: {
        x: 2583,
        y: 1974,
        w: 115,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 10,
        w: 115,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-12gauge.img": {
      frame: {
        x: 2583,
        y: 2090,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-50AE.img": {
      frame: {
        x: 2583,
        y: 2206,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-556mm.img": {
      frame: {
        x: 2583,
        y: 2322,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-308sub.img": {
      frame: {
        x: 2,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-45acp.img": {
      frame: {
        x: 119,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-762mm.img": {
      frame: {
        x: 236,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-broken-arrow.img": {
      frame: {
        x: 353,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 5,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-9mm.img": {
      frame: {
        x: 470,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-box.img": {
      frame: {
        x: 587,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-flare.img": {
      frame: {
        x: 704,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-vector.img": {
      frame: {
        x: 821,
        y: 2545,
        w: 109,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 8,
        w: 109,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-final-red.img": {
      frame: {
        x: 934,
        y: 2545,
        w: 104,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 104,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-final-blue.img": {
      frame: {
        x: 1042,
        y: 2545,
        w: 104,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 104,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-bone-01.img": {
      frame: {
        x: 1150,
        y: 2545,
        w: 102,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 10,
        w: 102,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-p30l.img": {
      frame: {
        x: 1256,
        y: 2545,
        w: 102,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 8,
        w: 102,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-field-medic.img": {
      frame: {
        x: 1362,
        y: 2545,
        w: 98,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 11,
        w: 98,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-mirv.img": {
      frame: {
        x: 2485,
        y: 958,
        w: 82,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 8,
        w: 82,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pineapple.img": {
      frame: {
        x: 2485,
        y: 1074,
        w: 68,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 1,
        w: 68,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-small-arms.img": {
      frame: {
        x: 1464,
        y: 2545,
        w: 107,
        h: 111
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 8,
        w: 107,
        h: 111
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-sniper.img": {
      frame: {
        x: 1575,
        y: 2545,
        w: 103,
        h: 111
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 32,
        w: 103,
        h: 111
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "logo-surviv.img": {
      frame: {
        x: 1682,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-storm.img": {
      frame: {
        x: 1814,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-twins.img": {
      frame: {
        x: 1946,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-meteor.img": {
      frame: {
        x: 2078,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-hydra.img": {
      frame: {
        x: 2210,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-hatchet.img": {
      frame: {
        x: 2342,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-egg.img": {
      frame: {
        x: 2474,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-crossing.img": {
      frame: {
        x: 2703,
        y: 2,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-conch.img": {
      frame: {
        x: 2703,
        y: 116,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-cloud.img": {
      frame: {
        x: 2703,
        y: 230,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "link.img": {
      frame: {
        x: 2703,
        y: 344,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-caduceus.img": {
      frame: {
        x: 2703,
        y: 458,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-swine.img": {
      frame: {
        x: 2703,
        y: 572,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-chrysanthemum.img": {
      frame: {
        x: 2703,
        y: 686,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-glock-dual.img": {
      frame: {
        x: 2703,
        y: 800,
        w: 122,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 9,
        w: 122,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scout.img": {
      frame: {
        x: 2703,
        y: 914,
        w: 118,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 9,
        w: 118,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-emote.img": {
      frame: {
        x: 2703,
        y: 1028,
        w: 112,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 10,
        w: 112,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-gui.img": {
      frame: {
        x: 2703,
        y: 1142,
        w: 112,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 10,
        w: 112,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-player-icon.img": {
      frame: {
        x: 2703,
        y: 1256,
        w: 112,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 9,
        w: 112,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-potato-02.img": {
      frame: {
        x: 2703,
        y: 1370,
        w: 94,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 9,
        w: 94,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-potato-01.img": {
      frame: {
        x: 2703,
        y: 1484,
        w: 94,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 9,
        w: 94,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-glock.img": {
      frame: {
        x: 2703,
        y: 1598,
        w: 90,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 9,
        w: 90,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-soda.img": {
      frame: {
        x: 2703,
        y: 1712,
        w: 60,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 9,
        w: 60,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "santa-hat.img": {
      frame: {
        x: 2703,
        y: 1826,
        w: 113,
        h: 109
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 7,
        w: 113,
        h: 109
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-model94.img": {
      frame: {
        x: 2703,
        y: 1939,
        w: 118,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 10,
        w: 118,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "danger.img": {
      frame: {
        x: 2703,
        y: 2051,
        w: 118,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 10,
        w: 118,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-explosive.img": {
      frame: {
        x: 2703,
        y: 2163,
        w: 110,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 10,
        w: 110,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-donut-01.img": {
      frame: {
        x: 2703,
        y: 2275,
        w: 110,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 10,
        w: 110,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-02.img": {
      frame: {
        x: 2703,
        y: 2387,
        w: 108,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 10,
        w: 108,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-02.img": {
      frame: {
        x: 2703,
        y: 2499,
        w: 105,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 105,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-01.img": {
      frame: {
        x: 2,
        y: 2661,
        w: 105,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 105,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "hide.img": {
      frame: {
        x: 111,
        y: 2661,
        w: 126,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 11,
        w: 126,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-01.img": {
      frame: {
        x: 241,
        y: 2661,
        w: 122,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 11,
        w: 122,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mp220.img": {
      frame: {
        x: 1989,
        y: 1816,
        w: 114,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 114,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-size.img": {
      frame: {
        x: 367,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-nothing.img": {
      frame: {
        x: 477,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-snowball-01.img": {
      frame: {
        x: 587,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-takedown.img": {
      frame: {
        x: 697,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "leek.img": {
      frame: {
        x: 807,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-snowball-02.img": {
      frame: {
        x: 917,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-assault.img": {
      frame: {
        x: 1027,
        y: 2661,
        w: 105,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 35,
        w: 105,
        h: 106
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "ping-map-airdrop.img": {
      frame: {
        x: 2485,
        y: 1190,
        w: 74,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 10,
        w: 74,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-healer.img": {
      frame: {
        x: 2485,
        y: 1300,
        w: 65,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 94,
        y: 35,
        w: 65,
        h: 106
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "loot-perk-flak-jacket.img": {
      frame: {
        x: 1136,
        y: 2661,
        w: 102,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 8,
        w: 102,
        h: 105
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "hamburger.img": {
      frame: {
        x: 1242,
        y: 2661,
        w: 128,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 12,
        w: 128,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-bonus-assault.img": {
      frame: {
        x: 1374,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-m9.img": {
      frame: {
        x: 1498,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-bonus-9mm.img": {
      frame: {
        x: 1622,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-12g.img": {
      frame: {
        x: 1746,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-bonus-45.img": {
      frame: {
        x: 1870,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-762.img": {
      frame: {
        x: 1994,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-556.img": {
      frame: {
        x: 2118,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-9mm.img": {
      frame: {
        x: 2242,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-healthkit.img": {
      frame: {
        x: 2363,
        y: 2198,
        w: 118,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 118,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-chatty.img": {
      frame: {
        x: 2366,
        y: 2661,
        w: 110,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 10,
        w: 110,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-glasses-01.img": {
      frame: {
        x: 2480,
        y: 2661,
        w: 104,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 104,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mac10.img": {
      frame: {
        x: 2588,
        y: 2661,
        w: 102,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 12,
        w: 102,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ribbon-red.img": {
      frame: {
        x: 2694,
        y: 2661,
        w: 98,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 22,
        w: 98,
        h: 104
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "ribbon-blue.img": {
      frame: {
        x: 2835,
        y: 2,
        w: 98,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 22,
        w: 98,
        h: 104
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "turkey-animal.img": {
      frame: {
        x: 2,
        y: 2773,
        w: 120,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 13,
        w: 120,
        h: 103
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "movement.img": {
      frame: {
        x: 2583,
        y: 2438,
        w: 104,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 104,
        h: 103
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-airstrike.img": {
      frame: {
        x: 2835,
        y: 110,
        w: 44,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 42,
        y: 13,
        w: 44,
        h: 103
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-helmet-01.img": {
      frame: {
        x: 126,
        y: 2773,
        w: 112,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 13,
        w: 112,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "eggplant.img": {
      frame: {
        x: 242,
        y: 2773,
        w: 106,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 13,
        w: 106,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-martyrdom.img": {
      frame: {
        x: 352,
        y: 2773,
        w: 106,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 13,
        w: 106,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-frag.img": {
      frame: {
        x: 462,
        y: 2773,
        w: 100,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 13,
        w: 100,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-help.img": {
      frame: {
        x: 566,
        y: 2773,
        w: 100,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 13,
        w: 100,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-potato.img": {
      frame: {
        x: 2835,
        y: 217,
        w: 92,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 13,
        w: 92,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "question.img": {
      frame: {
        x: 2835,
        y: 323,
        w: 68,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 13,
        w: 68,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-ots38-01.img": {
      frame: {
        x: 2883,
        y: 110,
        w: 36,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 131,
        w: 36,
        h: 102
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "loot-perk-scavenger.img": {
      frame: {
        x: 670,
        y: 2773,
        w: 108,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 14,
        w: 108,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "trunk.img": {
      frame: {
        x: 782,
        y: 2773,
        w: 106,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 14,
        w: 106,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-groza.img": {
      frame: {
        x: 892,
        y: 2773,
        w: 104,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 14,
        w: 104,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "crab.img": {
      frame: {
        x: 1000,
        y: 2773,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 14,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-demo.img": {
      frame: {
        x: 2835,
        y: 429,
        w: 66,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 85,
        y: 38,
        w: 66,
        h: 100
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "face-dab.img": {
      frame: {
        x: 1104,
        y: 2773,
        w: 144,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 23,
        w: 144,
        h: 98
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "baguette.img": {
      frame: {
        x: 2835,
        y: 533,
        w: 98,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 98,
        h: 98
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-short-01.img": {
      frame: {
        x: 2835,
        y: 635,
        w: 31,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 31,
        h: 98
      },
      sourceSize: {
        w: 32,
        h: 100
      }
    },
    "crosshair.img": {
      frame: {
        x: 2835,
        y: 737,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "loot-perk-endless-ammo.img": {
      frame: {
        x: 1252,
        y: 2773,
        w: 102,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 15,
        w: 102,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "potato.img": {
      frame: {
        x: 1358,
        y: 2773,
        w: 100,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 16,
        w: 100,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-compass-01.img": {
      frame: {
        x: 2835,
        y: 838,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-airdrop-01.img": {
      frame: {
        x: 2835,
        y: 938,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-airdrop-01x.img": {
      frame: {
        x: 2835,
        y: 1038,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "copy.img": {
      frame: {
        x: 2835,
        y: 1138,
        w: 88,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 16,
        w: 88,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "minimize.img": {
      frame: {
        x: 2835,
        y: 1238,
        w: 95,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 16,
        w: 95,
        h: 95
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-tree-climbing.img": {
      frame: {
        x: 2835,
        y: 1337,
        w: 94,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 16,
        w: 94,
        h: 95
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "skull-leader.img": {
      frame: {
        x: 2835,
        y: 1436,
        w: 90,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 90,
        h: 95
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "whale.img": {
      frame: {
        x: 1462,
        y: 2773,
        w: 118,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 17,
        w: 118,
        h: 94
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-pumpkin-01.img": {
      frame: {
        x: 1584,
        y: 2773,
        w: 106,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 17,
        w: 106,
        h: 94
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "fish.img": {
      frame: {
        x: 1694,
        y: 2773,
        w: 128,
        h: 92
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 18,
        w: 128,
        h: 92
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "teabag.img": {
      frame: {
        x: 1826,
        y: 2773,
        w: 107,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 19,
        w: 107,
        h: 91
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "forest.img": {
      frame: {
        x: 1937,
        y: 2773,
        w: 124,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 19,
        w: 124,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-super.img": {
      frame: {
        x: 2065,
        y: 2773,
        w: 124,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 19,
        w: 124,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-pill.img": {
      frame: {
        x: 2193,
        y: 2773,
        w: 118,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 19,
        w: 118,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "coconut.img": {
      frame: {
        x: 2315,
        y: 2773,
        w: 110,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 19,
        w: 110,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-strobe.img": {
      frame: {
        x: 2429,
        y: 2773,
        w: 103,
        h: 89
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 23,
        w: 103,
        h: 89
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-headshot.img": {
      frame: {
        x: 2536,
        y: 2773,
        w: 127,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 24,
        w: 127,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pilgrim-hat.img": {
      frame: {
        x: 2667,
        y: 2773,
        w: 118,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 118,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-flare-01.img": {
      frame: {
        x: 2835,
        y: 1535,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "loot-melee-pan-black.img": {
      frame: {
        x: 2789,
        y: 2773,
        w: 118,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 21,
        w: 118,
        h: 86
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-helmet-03.img": {
      frame: {
        x: 2937,
        y: 2,
        w: 112,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 21,
        w: 112,
        h: 86
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-mash-01.img": {
      frame: {
        x: 2,
        y: 2880,
        w: 160,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 85
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-snow-01.img": {
      frame: {
        x: 166,
        y: 2880,
        w: 160,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 85
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "ping-map-woods-king.img": {
      frame: {
        x: 2937,
        y: 92,
        w: 92,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 22,
        w: 92,
        h: 84
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "cog.img": {
      frame: {
        x: 2937,
        y: 180,
        w: 84,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 22,
        w: 84,
        h: 84
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-snowball.img": {
      frame: {
        x: 2937,
        y: 268,
        w: 84,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 22,
        w: 84,
        h: 84
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "eye.img": {
      frame: {
        x: 330,
        y: 2880,
        w: 126,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 23,
        w: 126,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-drain.img": {
      frame: {
        x: 460,
        y: 2880,
        w: 118,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 23,
        w: 118,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "chicken.img": {
      frame: {
        x: 2937,
        y: 356,
        w: 106,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 23,
        w: 106,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-snow-02.img": {
      frame: {
        x: 582,
        y: 2880,
        w: 145,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 145,
        h: 80
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-mash-02.img": {
      frame: {
        x: 731,
        y: 2880,
        w: 145,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 145,
        h: 80
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "audio-on.img": {
      frame: {
        x: 2937,
        y: 442,
        w: 92,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 24,
        w: 92,
        h: 80
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "audio-off.img": {
      frame: {
        x: 2937,
        y: 526,
        w: 92,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 24,
        w: 92,
        h: 80
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-fireaxe.img": {
      frame: {
        x: 880,
        y: 2880,
        w: 152,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 152,
        h: 78
      },
      sourceSize: {
        w: 152,
        h: 76
      }
    },
    "loot-weapon-fists.img": {
      frame: {
        x: 2937,
        y: 610,
        w: 74,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 25,
        w: 74,
        h: 78
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-unlock.img": {
      frame: {
        x: 2937,
        y: 692,
        w: 60,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 25,
        w: 60,
        h: 78
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-hook-silver.img": {
      frame: {
        x: 3001,
        y: 692,
        w: 42,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 25,
        w: 42,
        h: 78
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-helmet-02.img": {
      frame: {
        x: 1036,
        y: 2880,
        w: 118,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 26,
        w: 118,
        h: 76
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-mirv-mini-02.img": {
      frame: {
        x: 2937,
        y: 774,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 10,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "proj-mirv-mini-01.img": {
      frame: {
        x: 2937,
        y: 854,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 10,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "player-mash-03.img": {
      frame: {
        x: 1158,
        y: 2880,
        w: 149,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 149,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-snow-03.img": {
      frame: {
        x: 1311,
        y: 2880,
        w: 149,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 149,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-perk-scavenger_adv.img": {
      frame: {
        x: 1464,
        y: 2880,
        w: 118,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 27,
        w: 118,
        h: 74
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-hands-01.img": {
      frame: {
        x: 2937,
        y: 934,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 76,
        h: 76
      }
    },
    "player-hands-02.img": {
      frame: {
        x: 2937,
        y: 1012,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 76,
        h: 76
      }
    },
    "gg.img": {
      frame: {
        x: 1857,
        y: 1718,
        w: 114,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 28,
        w: 114,
        h: 72
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-dp28-top-01.img": {
      frame: {
        x: 2937,
        y: 1090,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-map-inner.img": {
      frame: {
        x: 2937,
        y: 1166,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "timer-background.img": {
      frame: {
        x: 2937,
        y: 1242,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-map-outer.img": {
      frame: {
        x: 2937,
        y: 1318,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "quit.img": {
      frame: {
        x: 2937,
        y: 1394,
        w: 68,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 28,
        w: 68,
        h: 72
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-patch-01.img": {
      frame: {
        x: 1725,
        y: 1586,
        w: 116,
        h: 71
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 1,
        w: 116,
        h: 71
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-patch-red.img": {
      frame: {
        x: 1593,
        y: 1454,
        w: 116,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 45,
        w: 116,
        h: 70
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "part-cloth-01.img": {
      frame: {
        x: 2937,
        y: 1470,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "ping-indicator.img": {
      frame: {
        x: 2937,
        y: 1544,
        w: 88,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 60,
        w: 88,
        h: 68
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-smoke-01.img": {
      frame: {
        x: 2937,
        y: 1616,
        w: 70,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 70,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "close.img": {
      frame: {
        x: 2937,
        y: 1688,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-snow-01.img": {
      frame: {
        x: 2937,
        y: 1760,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-frag-burst-01.img": {
      frame: {
        x: 2937,
        y: 1832,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-frag-burst-02.img": {
      frame: {
        x: 2937,
        y: 1902,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-strobe-01.img": {
      frame: {
        x: 2937,
        y: 1972,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-potato-01.img": {
      frame: {
        x: 2937,
        y: 2042,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "submit.img": {
      frame: {
        x: 2937,
        y: 2112,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-pulse-01.img": {
      frame: {
        x: 2937,
        y: 2182,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "checked.img": {
      frame: {
        x: 2937,
        y: 2252,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "resume.img": {
      frame: {
        x: 2937,
        y: 2322,
        w: 64,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 36,
        y: 31,
        w: 64,
        h: 66
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-self-revive.img": {
      frame: {
        x: 1461,
        y: 1322,
        w: 126,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 32,
        w: 126,
        h: 64
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-potato-smg-top-01.img": {
      frame: {
        x: 2937,
        y: 2392,
        w: 66,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 66,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "crosshair064.img": {
      frame: {
        x: 2937,
        y: 2460,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair001.img": {
      frame: {
        x: 2937,
        y: 2528,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "unlock.img": {
      frame: {
        x: 2937,
        y: 2596,
        w: 48,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "lock.img": {
      frame: {
        x: 2989,
        y: 2596,
        w: 48,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "keyboard.img": {
      frame: {
        x: 2937,
        y: 2664,
        w: 104,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 33,
        w: 104,
        h: 62
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-map-downed.img": {
      frame: {
        x: 2937,
        y: 2730,
        w: 72,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 72,
        h: 62
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "globe.img": {
      frame: {
        x: 2937,
        y: 2796,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair086.img": {
      frame: {
        x: 2870,
        y: 635,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair010.img": {
      frame: {
        x: 2835,
        y: 1627,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair007.img": {
      frame: {
        x: 2835,
        y: 1693,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-patch-02.img": {
      frame: {
        x: 1586,
        y: 2880,
        w: 116,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 1,
        w: 116,
        h: 60
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-patch-blue.img": {
      frame: {
        x: 1706,
        y: 2880,
        w: 116,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 50,
        w: 116,
        h: 60
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "crosshair080.img": {
      frame: {
        x: 2835,
        y: 1759,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair005.img": {
      frame: {
        x: 2835,
        y: 1823,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair094.img": {
      frame: {
        x: 2835,
        y: 1887,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair109.img": {
      frame: {
        x: 2835,
        y: 1951,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull-outlined.img": {
      frame: {
        x: 2835,
        y: 2015,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-stonehammer.img": {
      frame: {
        x: 1826,
        y: 2880,
        w: 150,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 3,
        w: 150,
        h: 58
      },
      sourceSize: {
        w: 148,
        h: 60
      }
    },
    "loot-melee-knuckles-heroic.img": {
      frame: {
        x: 2835,
        y: 2079,
        w: 92,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 35,
        w: 92,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-knuckles-rusted.img": {
      frame: {
        x: 2835,
        y: 2141,
        w: 92,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 35,
        w: 92,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-frag-pin-01.img": {
      frame: {
        x: 2835,
        y: 2203,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 35,
        y: 35,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-pin-part.img": {
      frame: {
        x: 2835,
        y: 2265,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 35,
        y: 35,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-woodaxe-bloody.img": {
      frame: {
        x: 1980,
        y: 2880,
        w: 150,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 56
      },
      sourceSize: {
        w: 148,
        h: 54
      }
    },
    "loot-melee-woodaxe.img": {
      frame: {
        x: 2134,
        y: 2880,
        w: 150,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 56
      },
      sourceSize: {
        w: 148,
        h: 54
      }
    },
    "crosshair027.img": {
      frame: {
        x: 2835,
        y: 2327,
        w: 57,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 57,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair124.img": {
      frame: {
        x: 2835,
        y: 2387,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull-team.img": {
      frame: {
        x: 2835,
        y: 2447,
        w: 48,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 4,
        w: 48,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-bullet-trail-03.img": {
      frame: {
        x: 3013,
        y: 1090,
        w: 35,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 35,
        h: 54
      },
      sourceSize: {
        w: 36,
        h: 56
      }
    },
    "dc.img": {
      frame: {
        x: 2835,
        y: 2507,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "down.img": {
      frame: {
        x: 2835,
        y: 2563,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-quarter.img": {
      frame: {
        x: 2835,
        y: 2619,
        w: 88,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 88,
        h: 51
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-quarter-highlight.img": {
      frame: {
        x: 2835,
        y: 2674,
        w: 88,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 88,
        h: 51
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-pkp-bot-01.img": {
      frame: {
        x: 2703,
        y: 2611,
        w: 78,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 78,
        h: 46
      },
      sourceSize: {
        w: 76,
        h: 44
      }
    },
    "crosshair177.img": {
      frame: {
        x: 2767,
        y: 1712,
        w: 56,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crown.img": {
      frame: {
        x: 2767,
        y: 1762,
        w: 54,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 9,
        w: 54,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-eighth-highlight.img": {
      frame: {
        x: 2485,
        y: 1410,
        w: 51,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 20,
        w: 51,
        h: 43
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-eighth.img": {
      frame: {
        x: 2485,
        y: 1457,
        w: 51,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 20,
        w: 51,
        h: 43
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pumpkin-play.img": {
      frame: {
        x: 3009,
        y: 1394,
        w: 40,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 40,
        h: 43
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "loot-melee-karambit-rugged.img": {
      frame: {
        x: 2237,
        y: 2119,
        w: 100,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 43,
        w: 100,
        h: 42
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-karambit-prismatic.img": {
      frame: {
        x: 584,
        y: 712,
        w: 100,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 43,
        w: 100,
        h: 42
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-karambit-drowned.img": {
      frame: {
        x: 688,
        y: 712,
        w: 100,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 43,
        w: 100,
        h: 42
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-m249-bot-01.img": {
      frame: {
        x: 2485,
        y: 1504,
        w: 74,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 74,
        h: 42
      },
      sourceSize: {
        w: 76,
        h: 44
      }
    },
    "crosshair158.img": {
      frame: {
        x: 2835,
        y: 2729,
        w: 62,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 12,
        w: 62,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-lever-01.img": {
      frame: {
        x: 2485,
        y: 1550,
        w: 48,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 44,
        w: 48,
        h: 40
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "crosshair101.img": {
      frame: {
        x: 3007,
        y: 1832,
        w: 42,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 8,
        w: 42,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair102.img": {
      frame: {
        x: 3007,
        y: 1902,
        w: 42,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 8,
        w: 42,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-katana-demo.img": {
      frame: {
        x: 796,
        y: 730,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "loot-melee-katana-rusted.img": {
      frame: {
        x: 2288,
        y: 2880,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "loot-melee-katana-orchid.img": {
      frame: {
        x: 2518,
        y: 2880,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "loot-melee-katana.img": {
      frame: {
        x: 2748,
        y: 2880,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "hatchet.img": {
      frame: {
        x: 3005,
        y: 2322,
        w: 44,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 44,
        h: 38
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "crosshair045.img": {
      frame: {
        x: 3011,
        y: 1470,
        w: 38,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 13,
        w: 38,
        h: 38
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-feet-01.img": {
      frame: {
        x: 3015,
        y: 610,
        w: 26,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 26,
        h: 38
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "player-feet-02.img": {
      frame: {
        x: 3015,
        y: 934,
        w: 26,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 26,
        h: 38
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "loot-melee-naginata.img": {
      frame: {
        x: 2,
        y: 2969,
        w: 345,
        h: 37
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 14,
        w: 345,
        h: 37
      },
      sourceSize: {
        w: 350,
        h: 54
      }
    },
    "crosshair184.img": {
      frame: {
        x: 3011,
        y: 1616,
        w: 37,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 14,
        w: 37,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair040.img": {
      frame: {
        x: 3009,
        y: 1688,
        w: 37,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 14,
        w: 37,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-burst-03.img": {
      frame: {
        x: 3013,
        y: 1166,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-bullet-trail-02.img": {
      frame: {
        x: 3013,
        y: 1242,
        w: 35,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 35,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "crosshair038.img": {
      frame: {
        x: 3015,
        y: 652,
        w: 33,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 16,
        w: 33,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair000.img": {
      frame: {
        x: 3015,
        y: 976,
        w: 33,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 16,
        w: 33,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "dot.img": {
      frame: {
        x: 3015,
        y: 1012,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "crosshair173.img": {
      frame: {
        x: 3015,
        y: 1048,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair181.img": {
      frame: {
        x: 3013,
        y: 1206,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-qbb97-bot-01.img": {
      frame: {
        x: 2870,
        y: 701,
        w: 62,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 30
      },
      sourceSize: {
        w: 64,
        h: 32
      }
    },
    "ping-part-circle-auto-highlight.img": {
      frame: {
        x: 3013,
        y: 1282,
        w: 29,
        h: 29
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 29,
        h: 29
      },
      sourceSize: {
        w: 29,
        h: 29
      }
    },
    "ping-part-circle-auto.img": {
      frame: {
        x: 3013,
        y: 1318,
        w: 28,
        h: 28
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 28
      },
      sourceSize: {
        w: 28,
        h: 28
      }
    },
    "ping-part-circle-highlight.img": {
      frame: {
        x: 3013,
        y: 1350,
        w: 28,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 50,
        w: 28,
        h: 28
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-circle.img": {
      frame: {
        x: 3011,
        y: 1512,
        w: 28,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 50,
        w: 28,
        h: 28
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-circle-auto-outer.img": {
      frame: {
        x: 3011,
        y: 1656,
        w: 28,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 28,
        h: 26
      },
      sourceSize: {
        w: 28,
        h: 28
      }
    },
    "crosshair125.img": {
      frame: {
        x: 3025,
        y: 180,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 20,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bayonet-woodland.img": {
      frame: {
        x: 1270,
        y: 856,
        w: 36,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 5,
        w: 36,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    }
  }
}];
let Es = [{
  meta: {
    image: "shared-0-100-8b417e22.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-police-floor-01.img": {
      frame: {
        x: 1438,
        y: 2,
        w: 2112,
        h: 1568
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 2112,
        h: 1568
      },
      sourceSize: {
        w: 2112,
        h: 1568
      }
    },
    "map-building-bathhouse-basement-01e.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1432,
        h: 1592
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1432,
        h: 1592
      },
      sourceSize: {
        w: 1432,
        h: 1592
      }
    },
    "map-building-mansion-floor-01b.img": {
      frame: {
        x: 2,
        y: 1598,
        w: 1825,
        h: 1218
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 1825,
        h: 1218
      },
      sourceSize: {
        w: 1826,
        h: 1218
      }
    },
    "map-building-barn-floor-01.img": {
      frame: {
        x: 1831,
        y: 1598,
        w: 1600,
        h: 1088
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1600,
        h: 1088
      },
      sourceSize: {
        w: 1600,
        h: 1088
      }
    },
    "map-building-police-ceiling-02.img": {
      frame: {
        x: 3554,
        y: 2,
        w: 530,
        h: 1080
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 530,
        h: 1080
      },
      sourceSize: {
        w: 530,
        h: 1082
      }
    },
    "map-building-cabin-floor.img": {
      frame: {
        x: 2,
        y: 2820,
        w: 1216,
        h: 992
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1216,
        h: 992
      },
      sourceSize: {
        w: 1216,
        h: 992
      }
    },
    "map-building-bathhouse-basement-01b.img": {
      frame: {
        x: 1222,
        y: 2820,
        w: 1304,
        h: 918
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1304,
        h: 918
      },
      sourceSize: {
        w: 1304,
        h: 920
      }
    },
    "map-building-bank-ceiling-02.img": {
      frame: {
        x: 2530,
        y: 2820,
        w: 556,
        h: 888
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 50,
        w: 556,
        h: 888
      },
      sourceSize: {
        w: 556,
        h: 940
      }
    },
    "map-bunker-conch-compartment-floor-01a.img": {
      frame: {
        x: 3090,
        y: 2820,
        w: 942,
        h: 880
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 0,
        w: 942,
        h: 880
      },
      sourceSize: {
        w: 992,
        h: 880
      }
    },
    "map-building-hut-floor-02.img": {
      frame: {
        x: 3554,
        y: 1086,
        w: 130,
        h: 767
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 130,
        h: 767
      },
      sourceSize: {
        w: 136,
        h: 768
      }
    },
    "map-building-container-open-floor.img": {
      frame: {
        x: 3688,
        y: 1086,
        w: 180,
        h: 684
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 180,
        h: 684
      },
      sourceSize: {
        w: 180,
        h: 692
      }
    },
    "map-building-dock-floor-01b.img": {
      frame: {
        x: 3872,
        y: 1086,
        w: 162,
        h: 662
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 162,
        h: 662
      },
      sourceSize: {
        w: 162,
        h: 664
      }
    },
    "map-wall-18.img": {
      frame: {
        x: 4038,
        y: 1086,
        w: 32,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 576
      },
      sourceSize: {
        w: 32,
        h: 576
      }
    },
    "map-bunker-conch-compartment-ceiling-01.img": {
      frame: {
        x: 3554,
        y: 1857,
        w: 488,
        h: 560
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 488,
        h: 560
      },
      sourceSize: {
        w: 488,
        h: 560
      }
    },
    "map-club-bar-01.img": {
      frame: {
        x: 3435,
        y: 1598,
        w: 54,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 480
      },
      sourceSize: {
        w: 54,
        h: 480
      }
    },
    "map-wall-14.img": {
      frame: {
        x: 4046,
        y: 1857,
        w: 32,
        h: 448
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 448
      },
      sourceSize: {
        w: 32,
        h: 448
      }
    },
    "map-wall-14-rounded.img": {
      frame: {
        x: 3493,
        y: 1598,
        w: 32,
        h: 448
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 448
      },
      sourceSize: {
        w: 32,
        h: 448
      }
    },
    "map-wall-13-rounded.img": {
      frame: {
        x: 3435,
        y: 2082,
        w: 32,
        h: 416
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 416
      },
      sourceSize: {
        w: 32,
        h: 416
      }
    },
    "map-wall-13.img": {
      frame: {
        x: 3471,
        y: 2082,
        w: 32,
        h: 416
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 416
      },
      sourceSize: {
        w: 32,
        h: 416
      }
    },
    "map-building-hut-ceiling-02.img": {
      frame: {
        x: 3554,
        y: 2421,
        w: 378,
        h: 393
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 378,
        h: 393
      },
      sourceSize: {
        w: 408,
        h: 408
      }
    },
    "map-wall-glass-12-2.img": {
      frame: {
        x: 3936,
        y: 2421,
        w: 64,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 384
      },
      sourceSize: {
        w: 64,
        h: 384
      }
    },
    "map-wall-12.img": {
      frame: {
        x: 4004,
        y: 2421,
        w: 32,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 384
      },
      sourceSize: {
        w: 32,
        h: 384
      }
    },
    "map-wall-glass-12.img": {
      frame: {
        x: 4040,
        y: 2421,
        w: 32,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 384
      },
      sourceSize: {
        w: 32,
        h: 384
      }
    },
    "map-wall-12-rounded.img": {
      frame: {
        x: 3507,
        y: 2082,
        w: 32,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 384
      },
      sourceSize: {
        w: 32,
        h: 384
      }
    },
    "map-wall-11-rounded.img": {
      frame: {
        x: 4036,
        y: 2820,
        w: 32,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 352
      },
      sourceSize: {
        w: 32,
        h: 352
      }
    },
    "map-wall-11.img": {
      frame: {
        x: 4036,
        y: 3176,
        w: 32,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 352
      },
      sourceSize: {
        w: 32,
        h: 352
      }
    },
    "map-stone-03.img": {
      frame: {
        x: 2,
        y: 3816,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-tree-03.img": {
      frame: {
        x: 282,
        y: 3816,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-07su.img": {
      frame: {
        x: 542,
        y: 3816,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-wall-08-rounded.img": {
      frame: {
        x: 802,
        y: 3816,
        w: 32,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 256
      },
      sourceSize: {
        w: 32,
        h: 256
      }
    },
    "map-bunker-conch-floor-01.img": {
      frame: {
        x: 838,
        y: 3816,
        w: 580,
        h: 252
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 2,
        w: 580,
        h: 252
      },
      sourceSize: {
        w: 600,
        h: 256
      }
    },
    "map-building-club-ceiling-01b.img": {
      frame: {
        x: 1422,
        y: 3816,
        w: 177,
        h: 242
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 177,
        h: 242
      },
      sourceSize: {
        w: 178,
        h: 242
      }
    },
    "map-wall-shack-right.img": {
      frame: {
        x: 1603,
        y: 3816,
        w: 24,
        h: 241
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 24,
        h: 241
      },
      sourceSize: {
        w: 24,
        h: 242
      }
    },
    "map-pipes-03.img": {
      frame: {
        x: 1631,
        y: 3816,
        w: 684,
        h: 236
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 684,
        h: 236
      },
      sourceSize: {
        w: 684,
        h: 236
      }
    },
    "map-hut-res-01.img": {
      frame: {
        x: 2319,
        y: 3816,
        w: 236,
        h: 236
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 130,
        y: 136,
        w: 236,
        h: 236
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-chute-01.img": {
      frame: {
        x: 2559,
        y: 3816,
        w: 232,
        h: 232
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 232,
        h: 232
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-mansion-cellar-01b.img": {
      frame: {
        x: 2795,
        y: 3816,
        w: 225,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 225,
        h: 230
      },
      sourceSize: {
        w: 226,
        h: 230
      }
    },
    "map-bunker-generic-ceiling-01.img": {
      frame: {
        x: 3024,
        y: 3816,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-building-mansion-floor-01c.img": {
      frame: {
        x: 3220,
        y: 3816,
        w: 225,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 225,
        h: 228
      },
      sourceSize: {
        w: 226,
        h: 228
      }
    },
    "map-building-club-floor-01a.img": {
      frame: {
        x: 3449,
        y: 3816,
        w: 225,
        h: 226
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 225,
        h: 226
      },
      sourceSize: {
        w: 226,
        h: 226
      }
    },
    "map-building-saferoom-floor.img": {
      frame: {
        x: 3678,
        y: 3816,
        w: 352,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 224
      },
      sourceSize: {
        w: 352,
        h: 224
      }
    },
    "map-wall-07.img": {
      frame: {
        x: 4034,
        y: 3816,
        w: 32,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 224
      },
      sourceSize: {
        w: 32,
        h: 224
      }
    },
    "part-wedge-01.img": {
      frame: {
        x: 3435,
        y: 2502,
        w: 55,
        h: 170
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 170
      },
      sourceSize: {
        w: 63,
        h: 180
      }
    },
    "proj-wedge-01.img": {
      frame: {
        x: 3494,
        y: 2502,
        w: 55,
        h: 170
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 170
      },
      sourceSize: {
        w: 63,
        h: 180
      }
    },
    "map-wall-04-cobalt.img": {
      frame: {
        x: 4036,
        y: 3532,
        w: 40,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 160
      },
      sourceSize: {
        w: 40,
        h: 160
      }
    },
    "pass-level-bg.img": {
      frame: {
        x: 1831,
        y: 2690,
        w: 146,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 146,
        h: 126
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "pass.img": {
      frame: {
        x: 1981,
        y: 2690,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-helmet-marksman.img": {
      frame: {
        x: 2111,
        y: 2690,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "map-wall-outhouse-bot.img": {
      frame: {
        x: 3348,
        y: 3712,
        w: 72,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 24
      },
      sourceSize: {
        w: 72,
        h: 24
      }
    },
    "map-crate-05.img": {
      frame: {
        x: 2338,
        y: 2690,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 124,
        h: 124
      }
    },
    "map-toilet-01.img": {
      frame: {
        x: 2466,
        y: 2690,
        w: 97,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 2,
        w: 97,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-toilet-02.img": {
      frame: {
        x: 2567,
        y: 2690,
        w: 97,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 2,
        w: 97,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-hotw.img": {
      frame: {
        x: 2668,
        y: 2690,
        w: 106,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 3,
        w: 106,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-decal-oil-01.img": {
      frame: {
        x: 2778,
        y: 2690,
        w: 86,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 3,
        w: 86,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-vat-res.img": {
      frame: {
        x: 2868,
        y: 2690,
        w: 108,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 11,
        w: 108,
        h: 121
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-case-chrys-01.img": {
      frame: {
        x: 2980,
        y: 2690,
        w: 156,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 120
      },
      sourceSize: {
        w: 156,
        h: 120
      }
    },
    "map-case-ring-01.img": {
      frame: {
        x: 3140,
        y: 2690,
        w: 156,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 120
      },
      sourceSize: {
        w: 156,
        h: 120
      }
    },
    "map-decal-initiative.img": {
      frame: {
        x: 3300,
        y: 2690,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-halloween-mystery.img": {
      frame: {
        x: 3424,
        y: 2690,
        w: 106,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 2,
        w: 106,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-building-house-window-res-01.img": {
      frame: {
        x: 4046,
        y: 2309,
        w: 32,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 104
      },
      sourceSize: {
        w: 32,
        h: 104
      }
    },
    "map-wall-02-5-rounded.img": {
      frame: {
        x: 4038,
        y: 1666,
        w: 32,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 80
      },
      sourceSize: {
        w: 32,
        h: 80
      }
    },
    "map-towelrack-01.img": {
      frame: {
        x: 3688,
        y: 1774,
        w: 192,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 192,
        h: 76
      },
      sourceSize: {
        w: 192,
        h: 96
      }
    },
    "map-deposit-box-02.img": {
      frame: {
        x: 3884,
        y: 1774,
        w: 160,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 74
      }
    },
    "map-potato-res.img": {
      frame: {
        x: 1222,
        y: 3742,
        w: 56,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 15,
        w: 56,
        h: 66
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-fire-ext-01.img": {
      frame: {
        x: 1282,
        y: 3742,
        w: 83,
        h: 65
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 83,
        h: 65
      },
      sourceSize: {
        w: 84,
        h: 70
      }
    },
    "map-bookshelf-01.img": {
      frame: {
        x: 1369,
        y: 3742,
        w: 224,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 64
      },
      sourceSize: {
        w: 224,
        h: 64
      }
    },
    "map-bookshelf-02.img": {
      frame: {
        x: 1597,
        y: 3742,
        w: 224,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 64
      },
      sourceSize: {
        w: 224,
        h: 64
      }
    },
    "map-building-porch-01.img": {
      frame: {
        x: 1825,
        y: 3742,
        w: 128,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 64
      },
      sourceSize: {
        w: 128,
        h: 64
      }
    },
    "map-column-01.img": {
      frame: {
        x: 1957,
        y: 3742,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair160.img": {
      frame: {
        x: 2025,
        y: 3742,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-wall-02.img": {
      frame: {
        x: 4048,
        y: 1774,
        w: 32,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 64
      },
      sourceSize: {
        w: 32,
        h: 64
      }
    },
    "map-wall-02-rounded.img": {
      frame: {
        x: 2093,
        y: 3742,
        w: 32,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 64
      },
      sourceSize: {
        w: 32,
        h: 64
      }
    },
    "crosshair136.img": {
      frame: {
        x: 2129,
        y: 3742,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-sledgehammer.img": {
      frame: {
        x: 2195,
        y: 3742,
        w: 150,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 60
      },
      sourceSize: {
        w: 148,
        h: 58
      }
    },
    "crosshair118.img": {
      frame: {
        x: 2349,
        y: 3742,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-bush-res-02.img": {
      frame: {
        x: 2413,
        y: 3742,
        w: 59,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 42,
        y: 45,
        w: 59,
        h: 60
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bathhouse-pool-01.img": {
      frame: {
        x: 2476,
        y: 3742,
        w: 36,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 60
      },
      sourceSize: {
        w: 36,
        h: 60
      }
    },
    "map-screen-res-01.img": {
      frame: {
        x: 2516,
        y: 3742,
        w: 116,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 116,
        h: 58
      },
      sourceSize: {
        w: 124,
        h: 58
      }
    },
    "map-drawers-res.img": {
      frame: {
        x: 2636,
        y: 3742,
        w: 93,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 5,
        w: 93,
        h: 57
      },
      sourceSize: {
        w: 96,
        h: 64
      }
    },
    "map-fire-ext-res.img": {
      frame: {
        x: 2733,
        y: 3742,
        w: 46,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 36,
        y: 8,
        w: 46,
        h: 56
      },
      sourceSize: {
        w: 84,
        h: 70
      }
    },
    "map-decal-oil-05.img": {
      frame: {
        x: 2783,
        y: 3742,
        w: 34,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 4,
        w: 34,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-gun-mount-04.img": {
      frame: {
        x: 2821,
        y: 3742,
        w: 128,
        h: 55
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 55
      },
      sourceSize: {
        w: 128,
        h: 56
      }
    },
    "map-barrel-res-03.img": {
      frame: {
        x: 2953,
        y: 3742,
        w: 76,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 86,
        w: 76,
        h: 52
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-woodpile-res-01.img": {
      frame: {
        x: 3033,
        y: 3742,
        w: 72,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 22,
        w: 72,
        h: 52
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-candle-01.img": {
      frame: {
        x: 3109,
        y: 3742,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 52,
        h: 52
      }
    },
    "map-locker-03.img": {
      frame: {
        x: 3163,
        y: 3742,
        w: 96,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 49
      },
      sourceSize: {
        w: 96,
        h: 50
      }
    },
    "map-locker-02.img": {
      frame: {
        x: 3263,
        y: 3742,
        w: 96,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 49
      },
      sourceSize: {
        w: 96,
        h: 50
      }
    },
    "map-locker-01.img": {
      frame: {
        x: 3363,
        y: 3742,
        w: 96,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 49
      },
      sourceSize: {
        w: 96,
        h: 50
      }
    },
    "map-screen-01.img": {
      frame: {
        x: 3463,
        y: 3742,
        w: 256,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 48
      },
      sourceSize: {
        w: 256,
        h: 48
      }
    },
    "map-gun-mount-05.img": {
      frame: {
        x: 3723,
        y: 3742,
        w: 144,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 56
      }
    },
    "map-gun-mount-01.img": {
      frame: {
        x: 3871,
        y: 3742,
        w: 144,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 56
      }
    },
    "map-decal-oil-04.img": {
      frame: {
        x: 4019,
        y: 3742,
        w: 54,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 8,
        w: 54,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-wall-shack-top.img": {
      frame: {
        x: 2530,
        y: 3712,
        w: 360,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 24
      },
      sourceSize: {
        w: 360,
        h: 24
      }
    },
    "map-wall-shack-bot.img": {
      frame: {
        x: 2894,
        y: 3712,
        w: 242,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 242,
        h: 24
      },
      sourceSize: {
        w: 242,
        h: 24
      }
    },
    "map-wall-outhouse-top.img": {
      frame: {
        x: 3140,
        y: 3712,
        w: 204,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 204,
        h: 24
      },
      sourceSize: {
        w: 204,
        h: 24
      }
    },
    "proj-martyrdom-01.img": {
      frame: {
        x: 2210,
        y: 2690,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    }
  }
}, {
  meta: {
    image: "shared-1-100-b0df365a.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-house-floor-02.img": {
      frame: {
        x: 1448,
        y: 2,
        w: 960,
        h: 864
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 864
      },
      sourceSize: {
        w: 960,
        h: 864
      }
    },
    "map-building-club-floor-01c.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1442,
        h: 866
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1442,
        h: 866
      },
      sourceSize: {
        w: 1442,
        h: 866
      }
    },
    "map-building-house-floor-01.img": {
      frame: {
        x: 2,
        y: 872,
        w: 960,
        h: 864
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 864
      },
      sourceSize: {
        w: 960,
        h: 864
      }
    },
    "map-building-bank-floor-01.img": {
      frame: {
        x: 2,
        y: 1740,
        w: 1696,
        h: 802
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1696,
        h: 802
      },
      sourceSize: {
        w: 1696,
        h: 802
      }
    },
    "map-building-mansion-cellar-01a.img": {
      frame: {
        x: 966,
        y: 872,
        w: 865,
        h: 801
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 865,
        h: 801
      },
      sourceSize: {
        w: 866,
        h: 802
      }
    },
    "map-building-warehouse-floor-01.img": {
      frame: {
        x: 2412,
        y: 2,
        w: 1000,
        h: 800
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1000,
        h: 800
      },
      sourceSize: {
        w: 1000,
        h: 800
      }
    },
    "map-building-mansion-ceiling.img": {
      frame: {
        x: 2412,
        y: 806,
        w: 912,
        h: 800
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 912,
        h: 800
      },
      sourceSize: {
        w: 1024,
        h: 864
      }
    },
    "map-building-warehouse-floor-02.img": {
      frame: {
        x: 2412,
        y: 1610,
        w: 880,
        h: 800
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 880,
        h: 800
      },
      sourceSize: {
        w: 880,
        h: 800
      }
    },
    "map-building-shilo-floor-01.img": {
      frame: {
        x: 2,
        y: 2546,
        w: 960,
        h: 768
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 768
      },
      sourceSize: {
        w: 960,
        h: 768
      }
    },
    "map-building-shilo-ceiling-01.img": {
      frame: {
        x: 966,
        y: 2546,
        w: 960,
        h: 768
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 768
      },
      sourceSize: {
        w: 960,
        h: 768
      }
    },
    "map-building-bathhouse-sideroom-02.img": {
      frame: {
        x: 1930,
        y: 2546,
        w: 1110,
        h: 727
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 1110,
        h: 727
      },
      sourceSize: {
        w: 1112,
        h: 729
      }
    },
    "map-building-bridge-lg-floor.img": {
      frame: {
        x: 2,
        y: 3318,
        w: 1011,
        h: 704
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 1011,
        h: 704
      },
      sourceSize: {
        w: 1012,
        h: 708
      }
    },
    "map-bunker-egg-chamber-floor-01a.img": {
      frame: {
        x: 1017,
        y: 3318,
        w: 726,
        h: 698
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 726,
        h: 698
      },
      sourceSize: {
        w: 738,
        h: 706
      }
    },
    "map-bunker-storm-chamber-floor-01a.img": {
      frame: {
        x: 1747,
        y: 3318,
        w: 1268,
        h: 696
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 1268,
        h: 696
      },
      sourceSize: {
        w: 1280,
        h: 704
      }
    },
    "map-building-police-floor-02.img": {
      frame: {
        x: 1702,
        y: 1740,
        w: 609,
        h: 640
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 65,
        w: 609,
        h: 640
      },
      sourceSize: {
        w: 610,
        h: 1570
      }
    },
    "map-building-bank-ceiling-01.img": {
      frame: {
        x: 1835,
        y: 872,
        w: 505,
        h: 552
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 48,
        w: 505,
        h: 552
      },
      sourceSize: {
        w: 505,
        h: 600
      }
    },
    "map-building-bathhouse-sideroom-01.img": {
      frame: {
        x: 3416,
        y: 2,
        w: 536,
        h: 536
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 536,
        h: 536
      },
      sourceSize: {
        w: 536,
        h: 536
      }
    },
    "map-building-container-floor-01.img": {
      frame: {
        x: 3416,
        y: 542,
        w: 180,
        h: 531
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 531
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-tree-08f.img": {
      frame: {
        x: 3416,
        y: 1077,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-tree-08su.img": {
      frame: {
        x: 3416,
        y: 1591,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-silo-01.img": {
      frame: {
        x: 3416,
        y: 2105,
        w: 504,
        h: 502
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 504,
        h: 502
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-building-club-floor-01e.img": {
      frame: {
        x: 3416,
        y: 2611,
        w: 353,
        h: 482
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 482
      },
      sourceSize: {
        w: 354,
        h: 482
      }
    },
    "map-building-police-ceiling-03.img": {
      frame: {
        x: 3416,
        y: 3097,
        w: 504,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 504,
        h: 480
      },
      sourceSize: {
        w: 504,
        h: 480
      }
    },
    "map-building-barn-basement-floor-02.img": {
      frame: {
        x: 3019,
        y: 3318,
        w: 374,
        h: 468
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 374,
        h: 468
      },
      sourceSize: {
        w: 376,
        h: 472
      }
    },
    "map-building-club-ceiling-01c.img": {
      frame: {
        x: 3416,
        y: 3581,
        w: 400,
        h: 433
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 400,
        h: 433
      },
      sourceSize: {
        w: 402,
        h: 434
      }
    },
    "map-building-barn-basement-stairs.img": {
      frame: {
        x: 3600,
        y: 542,
        w: 288,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 384
      },
      sourceSize: {
        w: 288,
        h: 384
      }
    },
    "map-building-panicroom-floor.img": {
      frame: {
        x: 3044,
        y: 2546,
        w: 288,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 384
      },
      sourceSize: {
        w: 288,
        h: 384
      }
    },
    "map-decal-club-02.img": {
      frame: {
        x: 3773,
        y: 2611,
        w: 100,
        h: 358
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 100,
        h: 358
      },
      sourceSize: {
        w: 104,
        h: 360
      }
    },
    "map-pipes-04.img": {
      frame: {
        x: 3820,
        y: 3581,
        w: 88,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 88,
        h: 352
      },
      sourceSize: {
        w: 88,
        h: 352
      }
    },
    "map-building-vault-ceiling.img": {
      frame: {
        x: 3044,
        y: 2934,
        w: 321,
        h: 337
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 321,
        h: 337
      },
      sourceSize: {
        w: 432,
        h: 337
      }
    },
    "map-saloon-bar-01.img": {
      frame: {
        x: 3892,
        y: 542,
        w: 54,
        h: 324
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 324
      },
      sourceSize: {
        w: 54,
        h: 324
      }
    },
    "map-wall-10-rounded.img": {
      frame: {
        x: 3877,
        y: 2611,
        w: 32,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 320
      },
      sourceSize: {
        w: 32,
        h: 320
      }
    },
    "map-wall-10.img": {
      frame: {
        x: 3913,
        y: 2611,
        w: 32,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 320
      },
      sourceSize: {
        w: 32,
        h: 320
      }
    },
    "map-wall-glass-10.img": {
      frame: {
        x: 3912,
        y: 3581,
        w: 32,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 320
      },
      sourceSize: {
        w: 32,
        h: 320
      }
    },
    "map-pipes-01.img": {
      frame: {
        x: 3296,
        y: 1610,
        w: 90,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 288
      },
      sourceSize: {
        w: 90,
        h: 288
      }
    },
    "map-wall-09-rounded.img": {
      frame: {
        x: 3328,
        y: 806,
        w: 32,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 288
      },
      sourceSize: {
        w: 32,
        h: 288
      }
    },
    "map-wall-09.img": {
      frame: {
        x: 3364,
        y: 806,
        w: 32,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 288
      },
      sourceSize: {
        w: 32,
        h: 288
      }
    },
    "map-wall-glass-9.img": {
      frame: {
        x: 3328,
        y: 1098,
        w: 32,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 288
      },
      sourceSize: {
        w: 32,
        h: 288
      }
    },
    "map-building-saferoom-ceiling.img": {
      frame: {
        x: 1835,
        y: 1428,
        w: 352,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 224
      },
      sourceSize: {
        w: 352,
        h: 224
      }
    },
    "map-building-outhouse-ceiling.img": {
      frame: {
        x: 3019,
        y: 3790,
        w: 272,
        h: 224
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 272,
        h: 224
      },
      sourceSize: {
        w: 400,
        h: 316
      }
    },
    "map-door-02.img": {
      frame: {
        x: 3296,
        y: 1902,
        w: 80,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 224
      },
      sourceSize: {
        w: 80,
        h: 224
      }
    },
    "map-wall-07-rounded.img": {
      frame: {
        x: 3364,
        y: 1098,
        w: 32,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 224
      },
      sourceSize: {
        w: 32,
        h: 224
      }
    },
    "map-wall-shack-left.img": {
      frame: {
        x: 3924,
        y: 2105,
        w: 24,
        h: 222
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 222
      },
      sourceSize: {
        w: 24,
        h: 222
      }
    },
    "map-bed-02.img": {
      frame: {
        x: 2191,
        y: 1428,
        w: 176,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 176,
        h: 216
      },
      sourceSize: {
        w: 176,
        h: 216
      }
    },
    "map-bed-01.img": {
      frame: {
        x: 3296,
        y: 2130,
        w: 96,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 216
      },
      sourceSize: {
        w: 96,
        h: 216
      }
    },
    "map-wall-outhouse-side.img": {
      frame: {
        x: 3924,
        y: 2331,
        w: 24,
        h: 198
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 198
      },
      sourceSize: {
        w: 24,
        h: 198
      }
    },
    "map-pipes-05.img": {
      frame: {
        x: 2315,
        y: 1740,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 192
      }
    },
    "map-wall-06-rounded.img": {
      frame: {
        x: 3328,
        y: 1390,
        w: 32,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 192
      },
      sourceSize: {
        w: 32,
        h: 192
      }
    },
    "map-wall-06.img": {
      frame: {
        x: 3364,
        y: 1390,
        w: 32,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 192
      },
      sourceSize: {
        w: 32,
        h: 192
      }
    },
    "role-assault.img": {
      frame: {
        x: 3956,
        y: 2,
        w: 130,
        h: 166
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 166
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-healer.img": {
      frame: {
        x: 3956,
        y: 172,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-tank.img": {
      frame: {
        x: 3956,
        y: 338,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-sniper.img": {
      frame: {
        x: 3956,
        y: 504,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-demo.img": {
      frame: {
        x: 3956,
        y: 670,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-scout.img": {
      frame: {
        x: 3956,
        y: 836,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "map-wall-04-stone.img": {
      frame: {
        x: 3956,
        y: 1002,
        w: 40,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 160
      },
      sourceSize: {
        w: 40,
        h: 160
      }
    },
    "map-wall-05.img": {
      frame: {
        x: 4000,
        y: 1002,
        w: 32,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 160
      },
      sourceSize: {
        w: 32,
        h: 160
      }
    },
    "map-wall-05-rounded.img": {
      frame: {
        x: 4036,
        y: 1002,
        w: 32,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 160
      },
      sourceSize: {
        w: 32,
        h: 160
      }
    },
    "map-bed-res-01.img": {
      frame: {
        x: 3956,
        y: 1166,
        w: 89,
        h: 158
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 16,
        w: 89,
        h: 158
      },
      sourceSize: {
        w: 96,
        h: 192
      }
    },
    "map-bed-res-02.img": {
      frame: {
        x: 3956,
        y: 1328,
        w: 89,
        h: 158
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 16,
        w: 89,
        h: 158
      },
      sourceSize: {
        w: 96,
        h: 192
      }
    },
    "map-wheel-01.img": {
      frame: {
        x: 1702,
        y: 2384,
        w: 312,
        h: 156
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 312,
        h: 156
      },
      sourceSize: {
        w: 312,
        h: 156
      }
    },
    "map-crate-res-03.img": {
      frame: {
        x: 2018,
        y: 2384,
        w: 216,
        h: 154
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 216,
        h: 154
      },
      sourceSize: {
        w: 216,
        h: 156
      }
    },
    "map-crate-11.img": {
      frame: {
        x: 2238,
        y: 2384,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-sandbags-02.img": {
      frame: {
        x: 3956,
        y: 1490,
        w: 114,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 1,
        w: 114,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-bush-07.img": {
      frame: {
        x: 3600,
        y: 930,
        w: 135,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 135,
        h: 143
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-stone-01.img": {
      frame: {
        x: 3739,
        y: 930,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-door-slot-02.img": {
      frame: {
        x: 3956,
        y: 1640,
        w: 38,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 136
      },
      sourceSize: {
        w: 38,
        h: 136
      }
    },
    "map-door-slot-01.img": {
      frame: {
        x: 3998,
        y: 1640,
        w: 38,
        h: 134
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 134
      },
      sourceSize: {
        w: 38,
        h: 134
      }
    },
    "map-switch-02.img": {
      frame: {
        x: 1462,
        y: 1677,
        w: 30,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 32
      },
      sourceSize: {
        w: 30,
        h: 34
      }
    },
    "map-bush-07x.img": {
      frame: {
        x: 3956,
        y: 1914,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-stone-res-06.img": {
      frame: {
        x: 2412,
        y: 2414,
        w: 288,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 128
      },
      sourceSize: {
        w: 288,
        h: 128
      }
    },
    "map-stairs-broken-01.img": {
      frame: {
        x: 2704,
        y: 2414,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-table-01.img": {
      frame: {
        x: 2868,
        y: 2414,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-vat-01.img": {
      frame: {
        x: 3956,
        y: 2048,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bathhouse-column-01.img": {
      frame: {
        x: 3956,
        y: 2180,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-note-02.img": {
      frame: {
        x: 3956,
        y: 2312,
        w: 90,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 0,
        w: 90,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-note-01.img": {
      frame: {
        x: 3956,
        y: 2444,
        w: 86,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 86,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-door-04.img": {
      frame: {
        x: 3956,
        y: 2576,
        w: 54,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 128
      },
      sourceSize: {
        w: 54,
        h: 128
      }
    },
    "map-wall-04-rounded.img": {
      frame: {
        x: 4049,
        y: 1166,
        w: 32,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-wall-04.img": {
      frame: {
        x: 4049,
        y: 1328,
        w: 32,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-door-01.img": {
      frame: {
        x: 4040,
        y: 1640,
        w: 24,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 128
      },
      sourceSize: {
        w: 24,
        h: 128
      }
    },
    "map-door-05.img": {
      frame: {
        x: 4050,
        y: 2312,
        w: 24,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 128
      },
      sourceSize: {
        w: 24,
        h: 128
      }
    },
    "map-barrel-res-02.img": {
      frame: {
        x: 3956,
        y: 2708,
        w: 130,
        h: 127
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 130,
        h: 127
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-weapon-m9-cursed.img": {
      frame: {
        x: 3956,
        y: 2839,
        w: 98,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 4,
        w: 98,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "timer.img": {
      frame: {
        x: 3956,
        y: 2963,
        w: 128,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 128,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-chimney-01.img": {
      frame: {
        x: 3956,
        y: 3085,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-stone-res-01.img": {
      frame: {
        x: 3956,
        y: 3207,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "player-medic.img": {
      frame: {
        x: 3956,
        y: 3329,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 13,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-squash-01.img": {
      frame: {
        x: 3956,
        y: 3451,
        w: 124,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 124,
        h: 116
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-stone-res-04.img": {
      frame: {
        x: 3956,
        y: 3571,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-case-flare-res-01.img": {
      frame: {
        x: 3956,
        y: 3691,
        w: 128,
        h: 115
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 128,
        h: 115
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-case-hatchet-res-01.img": {
      frame: {
        x: 3956,
        y: 3810,
        w: 128,
        h: 115
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 128,
        h: 115
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-perk-inspiration.img": {
      frame: {
        x: 3773,
        y: 2973,
        w: 114,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 5,
        w: 114,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-building-boarded-window-01.img": {
      frame: {
        x: 4014,
        y: 2576,
        w: 44,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 44,
        h: 113
      },
      sourceSize: {
        w: 48,
        h: 128
      }
    },
    "map-case-basement-01.img": {
      frame: {
        x: 3032,
        y: 2414,
        w: 148,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 112
      },
      sourceSize: {
        w: 148,
        h: 112
      }
    },
    "map-tree-09.img": {
      frame: {
        x: 3184,
        y: 2414,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-04.img": {
      frame: {
        x: 3300,
        y: 2414,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "loot-perk-final-bugle.img": {
      frame: {
        x: 3295,
        y: 3790,
        w: 104,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 4,
        w: 104,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-door-03.img": {
      frame: {
        x: 4046,
        y: 2444,
        w: 32,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 112
      },
      sourceSize: {
        w: 32,
        h: 112
      }
    },
    "map-bollard-01.img": {
      frame: {
        x: 3295,
        y: 3906,
        w: 112,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 18,
        w: 112,
        h: 108
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-building-bank-window-01.img": {
      frame: {
        x: 3885,
        y: 930,
        w: 56,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 104
      },
      sourceSize: {
        w: 56,
        h: 104
      }
    },
    "map-building-house-window-01.img": {
      frame: {
        x: 3891,
        y: 2973,
        w: 32,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 104
      },
      sourceSize: {
        w: 32,
        h: 104
      }
    },
    "map-decal-oil-02.img": {
      frame: {
        x: 2315,
        y: 1936,
        w: 90,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 14,
        w: 90,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-toilet-03.img": {
      frame: {
        x: 2315,
        y: 2040,
        w: 66,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 1,
        w: 66,
        h: 98
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-toilet-04.img": {
      frame: {
        x: 2315,
        y: 2142,
        w: 66,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 1,
        w: 66,
        h: 98
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-recorder-01.img": {
      frame: {
        x: 2344,
        y: 872,
        w: 64,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 96
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-recorder-02.img": {
      frame: {
        x: 2344,
        y: 972,
        w: 64,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 96
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-wall-03-rounded.img": {
      frame: {
        x: 3380,
        y: 1902,
        w: 32,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 96
      },
      sourceSize: {
        w: 32,
        h: 96
      }
    },
    "map-wall-03.img": {
      frame: {
        x: 3380,
        y: 2002,
        w: 32,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 96
      },
      sourceSize: {
        w: 32,
        h: 96
      }
    },
    "map-toilet-res-02.img": {
      frame: {
        x: 2315,
        y: 2244,
        w: 80,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 17,
        w: 80,
        h: 94
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-oven-01.img": {
      frame: {
        x: 3956,
        y: 3929,
        w: 108,
        h: 93
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 93
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-saloon-bar-02.img": {
      frame: {
        x: 2344,
        y: 1072,
        w: 54,
        h: 92
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 92
      },
      sourceSize: {
        w: 54,
        h: 92
      }
    },
    "map-recorder-03.img": {
      frame: {
        x: 2344,
        y: 1168,
        w: 48,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 80
      },
      sourceSize: {
        w: 48,
        h: 80
      }
    },
    "map-recorder-04.img": {
      frame: {
        x: 2344,
        y: 1252,
        w: 48,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 80
      },
      sourceSize: {
        w: 48,
        h: 80
      }
    },
    "map-power-box-01.img": {
      frame: {
        x: 3820,
        y: 3937,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-res-01.img": {
      frame: {
        x: 3892,
        y: 870,
        w: 52,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 48,
        w: 52,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "crosshair098.img": {
      frame: {
        x: 3896,
        y: 3937,
        w: 56,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-tree-res-01.img": {
      frame: {
        x: 3364,
        y: 1326,
        w: 48,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 48,
        h: 46
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bush-res-04.img": {
      frame: {
        x: 3296,
        y: 2350,
        w: 47,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 47,
        h: 46
      },
      sourceSize: {
        w: 54,
        h: 54
      }
    },
    "map-gun-mount-02.img": {
      frame: {
        x: 966,
        y: 1677,
        w: 128,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 44
      },
      sourceSize: {
        w: 128,
        h: 56
      }
    },
    "map-gun-mount-03.img": {
      frame: {
        x: 1098,
        y: 1677,
        w: 128,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 44
      },
      sourceSize: {
        w: 128,
        h: 56
      }
    },
    "map-decal-flyer-01.img": {
      frame: {
        x: 3347,
        y: 2350,
        w: 36,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 36,
        h: 44
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-building-bank-window-res-01.img": {
      frame: {
        x: 2344,
        y: 1336,
        w: 44,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 55,
        w: 44,
        h: 43
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "cobalt.img": {
      frame: {
        x: 1230,
        y: 1677,
        w: 42,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 42,
        h: 42
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "crosshair051.img": {
      frame: {
        x: 2344,
        y: 1383,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-barrel-04.img": {
      frame: {
        x: 1276,
        y: 1677,
        w: 89,
        h: 35
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 89,
        h: 35
      },
      sourceSize: {
        w: 89,
        h: 35
      }
    },
    "map-barrel-03.img": {
      frame: {
        x: 1369,
        y: 1677,
        w: 89,
        h: 35
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 89,
        h: 35
      },
      sourceSize: {
        w: 89,
        h: 35
      }
    },
    "map-bottle-04.img": {
      frame: {
        x: 3885,
        y: 1038,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-switch-03.img": {
      frame: {
        x: 3877,
        y: 2935,
        w: 30,
        h: 34
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 34
      },
      sourceSize: {
        w: 30,
        h: 34
      }
    },
    "map-switch-01.img": {
      frame: {
        x: 3911,
        y: 2935,
        w: 30,
        h: 34
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 34
      },
      sourceSize: {
        w: 30,
        h: 34
      }
    },
    "crosshair176.img": {
      frame: {
        x: 2371,
        y: 1428,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-bottle-01.img": {
      frame: {
        x: 2371,
        y: 1464,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bottle-02.img": {
      frame: {
        x: 2371,
        y: 1500,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-wall-01-rounded.img": {
      frame: {
        x: 2371,
        y: 1536,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bottle-05.img": {
      frame: {
        x: 2371,
        y: 1572,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bottle-03.img": {
      frame: {
        x: 2371,
        y: 1608,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bush-01f.img": {
      frame: {
        x: 3956,
        y: 1780,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    }
  }
}, {
  meta: {
    image: "shared-2-100-55e4ae31.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-barn-ceiling-01.img": {
      frame: {
        x: 726,
        y: 2,
        w: 1200,
        h: 624
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1200,
        h: 624
      },
      sourceSize: {
        w: 1200,
        h: 624
      }
    },
    "map-building-house-ceiling.img": {
      frame: {
        x: 2,
        y: 2,
        w: 720,
        h: 648
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 648
      },
      sourceSize: {
        w: 720,
        h: 648
      }
    },
    "map-building-teahouse-ceiling-01.img": {
      frame: {
        x: 2,
        y: 654,
        w: 934,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 16,
        w: 934,
        h: 608
      },
      sourceSize: {
        w: 960,
        h: 640
      }
    },
    "map-building-club-ceiling-01a.img": {
      frame: {
        x: 940,
        y: 654,
        w: 737,
        h: 593
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 737,
        h: 593
      },
      sourceSize: {
        w: 738,
        h: 594
      }
    },
    "map-building-club-floor-01g.img": {
      frame: {
        x: 2,
        y: 1266,
        w: 800,
        h: 578
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 800,
        h: 578
      },
      sourceSize: {
        w: 802,
        h: 578
      }
    },
    "map-building-cabin-ceiling-01a.img": {
      frame: {
        x: 806,
        y: 1266,
        w: 912,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 912,
        h: 576
      },
      sourceSize: {
        w: 912,
        h: 576
      }
    },
    "map-building-teahouse-floor-01.img": {
      frame: {
        x: 1930,
        y: 2,
        w: 896,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 896,
        h: 576
      },
      sourceSize: {
        w: 896,
        h: 576
      }
    },
    "map-building-bridge-lg-ceiling.img": {
      frame: {
        x: 2,
        y: 1848,
        w: 1088,
        h: 544
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 1088,
        h: 544
      },
      sourceSize: {
        w: 1088,
        h: 576
      }
    },
    "map-building-police-ceiling-01.img": {
      frame: {
        x: 1094,
        y: 1848,
        w: 1008,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1008,
        h: 480
      },
      sourceSize: {
        w: 1008,
        h: 480
      }
    },
    "map-building-barn-basement-floor-01.img": {
      frame: {
        x: 1930,
        y: 582,
        w: 662,
        h: 468
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 662,
        h: 468
      },
      sourceSize: {
        w: 664,
        h: 472
      }
    },
    "map-building-bank-floor-02.img": {
      frame: {
        x: 1930,
        y: 1054,
        w: 864,
        h: 448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 448
      },
      sourceSize: {
        w: 1088,
        h: 448
      }
    },
    "map-building-hut-floor-01.img": {
      frame: {
        x: 2106,
        y: 1848,
        w: 448,
        h: 448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 448,
        h: 448
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-building-warehouse-ceiling-01.img": {
      frame: {
        x: 2830,
        y: 2,
        w: 832,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 832,
        h: 432
      },
      sourceSize: {
        w: 832,
        h: 432
      }
    },
    "map-building-warehouse-ceiling-02.img": {
      frame: {
        x: 2830,
        y: 438,
        w: 720,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 432
      },
      sourceSize: {
        w: 720,
        h: 432
      }
    },
    "map-bunker-conch-compartment-floor-01b.img": {
      frame: {
        x: 2830,
        y: 874,
        w: 400,
        h: 430
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 430
      },
      sourceSize: {
        w: 400,
        h: 448
      }
    },
    "map-bunker-conch-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 2396,
        w: 1239,
        h: 408
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 28,
        w: 1239,
        h: 408
      },
      sourceSize: {
        w: 1306,
        h: 464
      }
    },
    "map-building-shack-floor-03.img": {
      frame: {
        x: 2830,
        y: 1308,
        w: 568,
        h: 408
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 568,
        h: 408
      },
      sourceSize: {
        w: 576,
        h: 448
      }
    },
    "map-building-hut-ceiling-03.img": {
      frame: {
        x: 3234,
        y: 874,
        w: 378,
        h: 393
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 378,
        h: 393
      },
      sourceSize: {
        w: 408,
        h: 408
      }
    },
    "map-building-hut-ceiling-01.img": {
      frame: {
        x: 2830,
        y: 1720,
        w: 378,
        h: 393
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 378,
        h: 393
      },
      sourceSize: {
        w: 408,
        h: 408
      }
    },
    "map-building-panicroom-ceiling.img": {
      frame: {
        x: 3212,
        y: 1720,
        w: 288,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 384
      },
      sourceSize: {
        w: 288,
        h: 384
      }
    },
    "map-bunker-conch-chamber-floor-01.img": {
      frame: {
        x: 1245,
        y: 2396,
        w: 1393,
        h: 382
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 43,
        w: 1393,
        h: 382
      },
      sourceSize: {
        w: 1520,
        h: 432
      }
    },
    "map-bunker-storm-floor-02.img": {
      frame: {
        x: 2642,
        y: 2396,
        w: 320,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 380
      },
      sourceSize: {
        w: 320,
        h: 384
      }
    },
    "map-building-container-open-ceiling-01.img": {
      frame: {
        x: 3402,
        y: 1308,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 156,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 692
      }
    },
    "map-building-container-ceiling-01.img": {
      frame: {
        x: 2596,
        y: 582,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-container-ceiling-05.img": {
      frame: {
        x: 1681,
        y: 654,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-container-ceiling-03.img": {
      frame: {
        x: 1722,
        y: 1266,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-container-ceiling-02.img": {
      frame: {
        x: 2558,
        y: 1848,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-bridge-md-floor.img": {
      frame: {
        x: 2,
        y: 2808,
        w: 896,
        h: 368
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 896,
        h: 368
      },
      sourceSize: {
        w: 896,
        h: 368
      }
    },
    "map-building-bank-ceiling-03.img": {
      frame: {
        x: 2966,
        y: 2396,
        w: 216,
        h: 360
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 192,
        w: 216,
        h: 360
      },
      sourceSize: {
        w: 216,
        h: 552
      }
    },
    "map-building-bathhouse-basement-01c.img": {
      frame: {
        x: 902,
        y: 2808,
        w: 566,
        h: 342
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 566,
        h: 342
      },
      sourceSize: {
        w: 567,
        h: 343
      }
    },
    "map-building-bathhouse-sideroom-ceiling-02.img": {
      frame: {
        x: 1930,
        y: 1506,
        w: 512,
        h: 336
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 336
      },
      sourceSize: {
        w: 512,
        h: 336
      }
    },
    "map-building-shack-floor-01.img": {
      frame: {
        x: 3186,
        y: 2396,
        w: 381,
        h: 320
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 20,
        w: 381,
        h: 320
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-building-shack-floor-02.img": {
      frame: {
        x: 2446,
        y: 1506,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-building-mansion-floor-01a.img": {
      frame: {
        x: 1472,
        y: 2808,
        w: 802,
        h: 317
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 802,
        h: 317
      },
      sourceSize: {
        w: 802,
        h: 322
      }
    },
    "map-building-outhouse-floor.img": {
      frame: {
        x: 2278,
        y: 2808,
        w: 240,
        h: 308
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 80,
        y: 4,
        w: 240,
        h: 308
      },
      sourceSize: {
        w: 400,
        h: 316
      }
    },
    "map-bunker-storm-chamber-ceiling-01.img": {
      frame: {
        x: 2522,
        y: 2808,
        w: 592,
        h: 304
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 112,
        w: 592,
        h: 304
      },
      sourceSize: {
        w: 592,
        h: 416
      }
    },
    "map-bunker-egg-chamber-ceiling-01.img": {
      frame: {
        x: 3118,
        y: 2808,
        w: 320,
        h: 304
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 144,
        w: 320,
        h: 304
      },
      sourceSize: {
        w: 320,
        h: 448
      }
    },
    "map-building-bathhouse-basement-01a.img": {
      frame: {
        x: 2,
        y: 3180,
        w: 225,
        h: 290
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 225,
        h: 290
      },
      sourceSize: {
        w: 226,
        h: 290
      }
    },
    "map-building-club-floor-01h.img": {
      frame: {
        x: 231,
        y: 3180,
        w: 321,
        h: 289
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 321,
        h: 289
      },
      sourceSize: {
        w: 322,
        h: 290
      }
    },
    "map-building-shack-ceiling-03.img": {
      frame: {
        x: 556,
        y: 3180,
        w: 408,
        h: 288
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 0,
        w: 408,
        h: 288
      },
      sourceSize: {
        w: 432,
        h: 336
      }
    },
    "map-bunker-generic-floor-01.img": {
      frame: {
        x: 968,
        y: 3180,
        w: 295,
        h: 281
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 0,
        w: 295,
        h: 281
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-generic-floor-02.img": {
      frame: {
        x: 1267,
        y: 3180,
        w: 295,
        h: 281
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 0,
        w: 295,
        h: 281
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-building-bathhouse-sideroom-ceiling-01.img": {
      frame: {
        x: 2830,
        y: 2117,
        w: 256,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 224
      },
      sourceSize: {
        w: 256,
        h: 224
      }
    },
    "map-building-teahouse-res-01.img": {
      frame: {
        x: 3090,
        y: 2117,
        w: 282,
        h: 208
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 115,
        y: 152,
        w: 282,
        h: 208
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-building-shack-ceiling-01.img": {
      frame: {
        x: 1566,
        y: 3180,
        w: 315,
        h: 207
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 315,
        h: 207
      },
      sourceSize: {
        w: 315,
        h: 255
      }
    },
    "map-vat-02.img": {
      frame: {
        x: 3376,
        y: 2117,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-stone-res-02.img": {
      frame: {
        x: 1681,
        y: 1038,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-building-club-floor-01d.img": {
      frame: {
        x: 1885,
        y: 3180,
        w: 322,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 322,
        h: 193
      },
      sourceSize: {
        w: 322,
        h: 194
      }
    },
    "map-building-bathhouse-basement-01d.img": {
      frame: {
        x: 2211,
        y: 3180,
        w: 258,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 258,
        h: 193
      },
      sourceSize: {
        w: 258,
        h: 194
      }
    },
    "map-building-club-floor-01b.img": {
      frame: {
        x: 3442,
        y: 2808,
        w: 194,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 194,
        h: 193
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-conch-chamber-ceiling-01.img": {
      frame: {
        x: 2473,
        y: 3180,
        w: 496,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 496,
        h: 192
      },
      sourceSize: {
        w: 496,
        h: 192
      }
    },
    "map-building-barn-basement-ceiling-01.img": {
      frame: {
        x: 2973,
        y: 3180,
        w: 304,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 304,
        h: 192
      },
      sourceSize: {
        w: 304,
        h: 208
      }
    },
    "map-building-crossing-bathroom-ceiling.img": {
      frame: {
        x: 3281,
        y: 3180,
        w: 288,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 192
      },
      sourceSize: {
        w: 288,
        h: 192
      }
    },
    "map-building-shack-ceiling-02.img": {
      frame: {
        x: 3666,
        y: 2,
        w: 240,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 192
      },
      sourceSize: {
        w: 240,
        h: 240
      }
    },
    "map-hedgehog-01.img": {
      frame: {
        x: 3666,
        y: 198,
        w: 192,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 192
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-building-barn-basement-ceiling-02.img": {
      frame: {
        x: 3666,
        y: 394,
        w: 164,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 164,
        h: 192
      },
      sourceSize: {
        w: 164,
        h: 208
      }
    },
    "map-building-mansion-floor-01d.img": {
      frame: {
        x: 2,
        y: 3474,
        w: 1090,
        h: 186
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1090,
        h: 186
      },
      sourceSize: {
        w: 1090,
        h: 194
      }
    },
    "map-shack-res-01.img": {
      frame: {
        x: 1096,
        y: 3474,
        w: 305,
        h: 181
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 60,
        y: 49,
        w: 305,
        h: 181
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-bunker-conch-ceiling-01.img": {
      frame: {
        x: 1405,
        y: 3474,
        w: 380,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 380,
        h: 180
      },
      sourceSize: {
        w: 380,
        h: 180
      }
    },
    "map-bunker-egg-chamber-floor-01b.img": {
      frame: {
        x: 3666,
        y: 590,
        w: 192,
        h: 179
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 192,
        h: 179
      },
      sourceSize: {
        w: 194,
        h: 180
      }
    },
    "map-smoke-res.img": {
      frame: {
        x: 3666,
        y: 773,
        w: 170,
        h: 178
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 47,
        y: 39,
        w: 170,
        h: 178
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-storm-chamber-floor-01b.img": {
      frame: {
        x: 3666,
        y: 955,
        w: 192,
        h: 177
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 192,
        h: 177
      },
      sourceSize: {
        w: 194,
        h: 178
      }
    },
    "map-bunker-conch-chamber-ceiling-02.img": {
      frame: {
        x: 1789,
        y: 3474,
        w: 488,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 488,
        h: 176
      },
      sourceSize: {
        w: 488,
        h: 176
      }
    },
    "map-shack-res-02.img": {
      frame: {
        x: 3666,
        y: 1136,
        w: 220,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 100,
        y: 69,
        w: 220,
        h: 176
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-shack-res-03.img": {
      frame: {
        x: 3666,
        y: 1316,
        w: 220,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 100,
        y: 69,
        w: 220,
        h: 176
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-building-club-vault-ceiling.img": {
      frame: {
        x: 3666,
        y: 1496,
        w: 160,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 176
      },
      sourceSize: {
        w: 160,
        h: 176
      }
    },
    "map-pipes-02.img": {
      frame: {
        x: 3666,
        y: 1676,
        w: 236,
        h: 172
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 236,
        h: 172
      },
      sourceSize: {
        w: 238,
        h: 172
      }
    },
    "map-snow-07.img": {
      frame: {
        x: 2281,
        y: 3474,
        w: 496,
        h: 168
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 12,
        w: 496,
        h: 168
      },
      sourceSize: {
        w: 512,
        h: 192
      }
    },
    "map-crate-04.img": {
      frame: {
        x: 3666,
        y: 1852,
        w: 164,
        h: 164
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 164,
        h: 164
      },
      sourceSize: {
        w: 164,
        h: 164
      }
    },
    "map-stove-01.img": {
      frame: {
        x: 3666,
        y: 2020,
        w: 208,
        h: 161
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 208,
        h: 161
      },
      sourceSize: {
        w: 224,
        h: 176
      }
    },
    "map-table-02.img": {
      frame: {
        x: 2781,
        y: 3474,
        w: 288,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 160
      },
      sourceSize: {
        w: 288,
        h: 160
      }
    },
    "map-airdrop-02.img": {
      frame: {
        x: 3666,
        y: 2185,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-dock-floor-01a.img": {
      frame: {
        x: 3666,
        y: 2349,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 162
      }
    },
    "map-airdrop-01.img": {
      frame: {
        x: 3666,
        y: 2513,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-table-03.img": {
      frame: {
        x: 3666,
        y: 2677,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-wheel-03.img": {
      frame: {
        x: 3073,
        y: 3474,
        w: 312,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 312,
        h: 149
      },
      sourceSize: {
        w: 312,
        h: 156
      }
    },
    "map-wheel-02.img": {
      frame: {
        x: 3389,
        y: 3474,
        w: 297,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 297,
        h: 149
      },
      sourceSize: {
        w: 312,
        h: 156
      }
    },
    "map-crate-10.img": {
      frame: {
        x: 3666,
        y: 2841,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-sandbags-01.img": {
      frame: {
        x: 2,
        y: 3664,
        w: 256,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 256,
        h: 146
      },
      sourceSize: {
        w: 256,
        h: 148
      }
    },
    "map-building-cabin-ceiling-01b.img": {
      frame: {
        x: 3504,
        y: 2016,
        w: 148,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 74
      },
      sourceSize: {
        w: 148,
        h: 76
      }
    },
    "map-crate-14a.img": {
      frame: {
        x: 3666,
        y: 2993,
        w: 156,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 144
      },
      sourceSize: {
        w: 156,
        h: 144
      }
    },
    "map-crate-14.img": {
      frame: {
        x: 3666,
        y: 3141,
        w: 156,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 144
      },
      sourceSize: {
        w: 156,
        h: 144
      }
    },
    "map-crate-09.img": {
      frame: {
        x: 3666,
        y: 3289,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-circle-outer-06.img": {
      frame: {
        x: 3504,
        y: 1720,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "pass-unlock-type-bg.img": {
      frame: {
        x: 3504,
        y: 1868,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "map-stone-05.img": {
      frame: {
        x: 1722,
        y: 1650,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "pass-unlock-bg.img": {
      frame: {
        x: 3690,
        y: 3474,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "map-stone-04.img": {
      frame: {
        x: 682,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-08.img": {
      frame: {
        x: 830,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-07.img": {
      frame: {
        x: 978,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-01.img": {
      frame: {
        x: 1126,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02.img": {
      frame: {
        x: 1274,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02sv.img": {
      frame: {
        x: 1422,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-03.img": {
      frame: {
        x: 1570,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-barrel-01.img": {
      frame: {
        x: 1718,
        y: 3664,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-barrel-02.img": {
      frame: {
        x: 1864,
        y: 3664,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-vent-02.img": {
      frame: {
        x: 2010,
        y: 3664,
        w: 132,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 132,
        h: 134
      },
      sourceSize: {
        w: 136,
        h: 136
      }
    },
    "map-bunker-vent-03.img": {
      frame: {
        x: 2146,
        y: 3664,
        w: 132,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 132,
        h: 134
      },
      sourceSize: {
        w: 136,
        h: 136
      }
    },
    "map-outhouse-res.img": {
      frame: {
        x: 2282,
        y: 3664,
        w: 150,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 125,
        y: 42,
        w: 150,
        h: 132
      },
      sourceSize: {
        w: 400,
        h: 312
      }
    },
    "map-table-res.img": {
      frame: {
        x: 2436,
        y: 3664,
        w: 131,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 131,
        h: 132
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-building-club-floor-01f.img": {
      frame: {
        x: 2571,
        y: 3664,
        w: 194,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 194,
        h: 130
      },
      sourceSize: {
        w: 194,
        h: 130
      }
    },
    "map-building-mansion-cellar-01c.img": {
      frame: {
        x: 2769,
        y: 3664,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 354,
        h: 130
      }
    },
    "map-crate-res-01.img": {
      frame: {
        x: 3127,
        y: 3664,
        w: 138,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 9,
        w: 138,
        h: 129
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-control-panel-01.img": {
      frame: {
        x: 3269,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-control-panel-04.img": {
      frame: {
        x: 3417,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-control-panel-05.img": {
      frame: {
        x: 3565,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-control-panel-02.img": {
      frame: {
        x: 3713,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-case-deagle-02.img": {
      frame: {
        x: 3910,
        y: 2,
        w: 144,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 108
      },
      sourceSize: {
        w: 144,
        h: 108
      }
    },
    "map-case-deagle-01.img": {
      frame: {
        x: 3910,
        y: 114,
        w: 144,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 108
      },
      sourceSize: {
        w: 144,
        h: 108
      }
    },
    "news.img": {
      frame: {
        x: 3910,
        y: 226,
        w: 110,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 10,
        w: 110,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-crate-20.img": {
      frame: {
        x: 3910,
        y: 338,
        w: 108,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 108
      },
      sourceSize: {
        w: 108,
        h: 108
      }
    },
    "loot-perk-turkey_shoot.img": {
      frame: {
        x: 3910,
        y: 450,
        w: 102,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 102,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-toilet-res-01.img": {
      frame: {
        x: 3910,
        y: 562,
        w: 98,
        h: 107
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 7,
        w: 98,
        h: 107
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-decal-club-01.img": {
      frame: {
        x: 3910,
        y: 673,
        w: 100,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 116,
        w: 100,
        h: 105
      },
      sourceSize: {
        w: 104,
        h: 360
      }
    },
    "map-stove-02.img": {
      frame: {
        x: 3910,
        y: 782,
        w: 98,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 98,
        h: 105
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "emote-medical-healthkit.img": {
      frame: {
        x: 3910,
        y: 891,
        w: 118,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 118,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-01sv.img": {
      frame: {
        x: 3910,
        y: 999,
        w: 108,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 12,
        w: 108,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-case-flare-01.img": {
      frame: {
        x: 3910,
        y: 1107,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-case-hatchet-01.img": {
      frame: {
        x: 3910,
        y: 1213,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-chest-01.img": {
      frame: {
        x: 3910,
        y: 1319,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-chest-02.img": {
      frame: {
        x: 3910,
        y: 1425,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-chest-03.img": {
      frame: {
        x: 3910,
        y: 1531,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "part-takedown-01.img": {
      frame: {
        x: 3910,
        y: 1637,
        w: 126,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 13,
        w: 126,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-grill-01.img": {
      frame: {
        x: 3910,
        y: 1743,
        w: 120,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 13,
        w: 120,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-crate-06.img": {
      frame: {
        x: 3442,
        y: 3005,
        w: 164,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 164,
        h: 100
      },
      sourceSize: {
        w: 164,
        h: 100
      }
    },
    "map-couch-01.img": {
      frame: {
        x: 2,
        y: 3814,
        w: 288,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 96
      },
      sourceSize: {
        w: 288,
        h: 96
      }
    },
    "map-couch-02.img": {
      frame: {
        x: 294,
        y: 3814,
        w: 192,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 96
      },
      sourceSize: {
        w: 192,
        h: 96
      }
    },
    "map-woodpile-01.img": {
      frame: {
        x: 3910,
        y: 1849,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bathrocks-01.img": {
      frame: {
        x: 3910,
        y: 1949,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-couch-03.img": {
      frame: {
        x: 3910,
        y: 2049,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-control-panel-06.img": {
      frame: {
        x: 490,
        y: 3814,
        w: 192,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 94
      },
      sourceSize: {
        w: 192,
        h: 94
      }
    },
    "map-vending-soda-01.img": {
      frame: {
        x: 3910,
        y: 2149,
        w: 108,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 94
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-refrigerator-01.img": {
      frame: {
        x: 3910,
        y: 2247,
        w: 108,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 94
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-tree-res-02.img": {
      frame: {
        x: 3910,
        y: 2345,
        w: 96,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 96,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-control-panel-03.img": {
      frame: {
        x: 3910,
        y: 2443,
        w: 96,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 94
      }
    },
    "map-pot-03.img": {
      frame: {
        x: 3910,
        y: 2541,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-04.img": {
      frame: {
        x: 3910,
        y: 2639,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-02.img": {
      frame: {
        x: 3910,
        y: 2737,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-05.img": {
      frame: {
        x: 3910,
        y: 2835,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-01.img": {
      frame: {
        x: 3910,
        y: 2933,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-decal-oil-03.img": {
      frame: {
        x: 3910,
        y: 3031,
        w: 89,
        h: 92
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 18,
        w: 89,
        h: 92
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-drawers-01.img": {
      frame: {
        x: 686,
        y: 3814,
        w: 160,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 90
      },
      sourceSize: {
        w: 160,
        h: 90
      }
    },
    "map-drawers-02.img": {
      frame: {
        x: 850,
        y: 3814,
        w: 160,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 90
      },
      sourceSize: {
        w: 160,
        h: 90
      }
    },
    "map-stand-01.img": {
      frame: {
        x: 3910,
        y: 3127,
        w: 80,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 90
      },
      sourceSize: {
        w: 80,
        h: 90
      }
    },
    "map-crate-mil-04.img": {
      frame: {
        x: 1014,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-03.img": {
      frame: {
        x: 1190,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-02.img": {
      frame: {
        x: 1366,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-01.img": {
      frame: {
        x: 1542,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-05.img": {
      frame: {
        x: 1718,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-building-teahouse-floor-02.img": {
      frame: {
        x: 3910,
        y: 3221,
        w: 128,
        h: 88
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 88
      }
    },
    "map-decal-oil-06.img": {
      frame: {
        x: 3910,
        y: 3313,
        w: 94,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 21,
        w: 94,
        h: 86
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-couch-res-01.img": {
      frame: {
        x: 3910,
        y: 3403,
        w: 79,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 5,
        w: 79,
        h: 86
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bunker-vent-01.img": {
      frame: {
        x: 3910,
        y: 3493,
        w: 82,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 82,
        h: 84
      },
      sourceSize: {
        w: 84,
        h: 84
      }
    },
    "map-vending-res.img": {
      frame: {
        x: 3910,
        y: 3581,
        w: 93,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 5,
        w: 93,
        h: 82
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-squash-res-01.img": {
      frame: {
        x: 3910,
        y: 3667,
        w: 84,
        h: 81
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 84,
        h: 81
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-res-01.img": {
      frame: {
        x: 3818,
        y: 2841,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-piano-01.img": {
      frame: {
        x: 1894,
        y: 3814,
        w: 240,
        h: 75
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 75
      },
      sourceSize: {
        w: 240,
        h: 75
      }
    },
    "map-deposit-box-01.img": {
      frame: {
        x: 2596,
        y: 966,
        w: 160,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 74
      }
    },
    "map-building-barn-ceiling-02.img": {
      frame: {
        x: 262,
        y: 3664,
        w: 416,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 416,
        h: 144
      },
      sourceSize: {
        w: 416,
        h: 144
      }
    }
  }
}];
let Rs = [{
  meta: {
    image: "halloween-0-100-cd0fab16.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 1
  },
  frames: {
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 710,
        y: 2,
        w: 704,
        h: 704
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 704
      },
      sourceSize: {
        w: 704,
        h: 704
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 704,
        h: 1344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 1344
      },
      sourceSize: {
        w: 704,
        h: 1376
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 710,
        y: 710,
        w: 320,
        h: 544
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 544
      },
      sourceSize: {
        w: 320,
        h: 544
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 1418,
        y: 2,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-tree-08sp.img": {
      frame: {
        x: 1418,
        y: 516,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 2,
        y: 1350,
        w: 489,
        h: 480
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 17,
        w: 489,
        h: 480
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 1034,
        y: 710,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 1418,
        y: 1030,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-07sp.img": {
      frame: {
        x: 495,
        y: 1350,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 1678,
        y: 1030,
        w: 192,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 256
      },
      sourceSize: {
        w: 192,
        h: 256
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 1034,
        y: 1034,
        w: 190,
        h: 188
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 190,
        h: 188
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-airdrop-01h.img": {
      frame: {
        x: 1228,
        y: 1034,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bush-res-06.img": {
      frame: {
        x: 1874,
        y: 1030,
        w: 50,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 47,
        y: 48,
        w: 50,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-web-01.img": {
      frame: {
        x: 919,
        y: 1350,
        w: 152,
        h: 158
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 152,
        h: 158
      },
      sourceSize: {
        w: 152,
        h: 160
      }
    },
    "map-crate-11h.img": {
      frame: {
        x: 1075,
        y: 1350,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 1225,
        y: 1350,
        w: 135,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 135,
        h: 143
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-pumpkin-02.img": {
      frame: {
        x: 1364,
        y: 1350,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-pumpkin-01.img": {
      frame: {
        x: 1508,
        y: 1350,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-pumpkin-res-01.img": {
      frame: {
        x: 1652,
        y: 1350,
        w: 135,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 8,
        w: 135,
        h: 132
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-tree-04h.img": {
      frame: {
        x: 1791,
        y: 1350,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-pumpkin-03.img": {
      frame: {
        x: 495,
        y: 1610,
        w: 95,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 25,
        w: 95,
        h: 97
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-airdrop-01h.img": {
      frame: {
        x: 710,
        y: 1258,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pumpkin-res-03.img": {
      frame: {
        x: 802,
        y: 1258,
        w: 86,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 9,
        w: 86,
        h: 82
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-airdrop-02h.img": {
      frame: {
        x: 892,
        y: 1258,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-02h.img": {
      frame: {
        x: 755,
        y: 1350,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    }
  }
}];
let Os = [{
  meta: {
    image: "snow-0-100-23291c9e.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 710,
        y: 1454,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1514,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2472,
        y: 2,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 2,
        y: 2256,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 742,
        y: 2256,
        w: 832,
        h: 642
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 642
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 2472,
        y: 744,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 1578,
        y: 2256,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2916,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 2472,
        y: 1388,
        w: 400,
        h: 624
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 624
      },
      sourceSize: {
        w: 400,
        h: 624
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 936,
        y: 2916,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 2876,
        y: 1388,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 3108,
        y: 1388,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 1701,
        y: 869,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1854,
        y: 1454,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1854,
        y: 1826,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 2212,
        y: 1454,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 2350,
        y: 2256,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2674,
        y: 2256,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1804,
        y: 2916,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2350,
        y: 2604,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 2240,
        y: 2916,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 2178,
        y: 1826,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 3030,
        y: 2256,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 2802,
        y: 2604,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2644,
        y: 2916,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 1804,
        y: 3224,
        w: 254,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 254,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 2062,
        y: 3224,
        w: 250,
        h: 248
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 250,
        h: 248
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-chute-01x.img": {
      frame: {
        x: 2472,
        y: 2016,
        w: 232,
        h: 232
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 232,
        h: 232
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 2708,
        y: 2016,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 3622,
        y: 1008,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 13,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3036,
        y: 2016,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3100,
        y: 2016,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-snow-02.img": {
      frame: {
        x: 2316,
        y: 3224,
        w: 208,
        h: 208
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 24,
        w: 208,
        h: 208
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 2528,
        y: 3224,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 2732,
        y: 3224,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 2936,
        y: 3224,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3000,
        y: 2916,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 3182,
        y: 2,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-snow-03.img": {
      frame: {
        x: 3182,
        y: 186,
        w: 312,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 8,
        w: 312,
        h: 176
      },
      sourceSize: {
        w: 360,
        h: 192
      }
    },
    "map-snow-01.img": {
      frame: {
        x: 3182,
        y: 366,
        w: 212,
        h: 173
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 41,
        w: 212,
        h: 173
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 3398,
        y: 366,
        w: 288,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 160
      },
      sourceSize: {
        w: 288,
        h: 160
      }
    },
    "map-airdrop-01x.img": {
      frame: {
        x: 3498,
        y: 186,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 3182,
        y: 543,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-airdrop-02x.img": {
      frame: {
        x: 3346,
        y: 543,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 3510,
        y: 543,
        w: 152,
        h: 152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 152,
        h: 152
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 3182,
        y: 707,
        w: 151,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 151,
        h: 149
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 3337,
        y: 707,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 3501,
        y: 707,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 3182,
        y: 860,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 3330,
        y: 860,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 3410,
        y: 860,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 3182,
        y: 1008,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 3540,
        y: 860,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-snow-06.img": {
      frame: {
        x: 3346,
        y: 1008,
        w: 178,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 178,
        h: 112
      },
      sourceSize: {
        w: 192,
        h: 128
      }
    },
    "map-snow-05.img": {
      frame: {
        x: 3528,
        y: 1008,
        w: 90,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 12,
        w: 90,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 3182,
        y: 1140,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 3326,
        y: 1140,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-snow-04.img": {
      frame: {
        x: 3430,
        y: 1140,
        w: 100,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 15,
        w: 100,
        h: 98
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 3182,
        y: 1246,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 3410,
        y: 1246,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 3534,
        y: 1140,
        w: 82,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 82,
        h: 74
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 2872,
        y: 2016,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    }
  }
}];
let Bs = [{
  meta: {
    image: "faction-0-100-99af9e64.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-bridge-xlg-floor.img": {
      frame: {
        x: 1302,
        y: 2,
        w: 2464,
        h: 960
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 2464,
        h: 960
      },
      sourceSize: {
        w: 2464,
        h: 960
      }
    },
    "map-complex-warehouse-floor-04.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1296,
        h: 2048
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1296,
        h: 2048
      },
      sourceSize: {
        w: 1296,
        h: 2048
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 1302,
        y: 966,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 2073,
        y: 966,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 2877,
        y: 966,
        w: 832,
        h: 641
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 641
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 2,
        y: 2054,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 774,
        y: 2054,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1708,
        y: 2054,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1940,
        y: 2054,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 2004,
        y: 2054,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 2362,
        y: 2054,
        w: 400,
        h: 314
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 400,
        h: 314
      },
      sourceSize: {
        w: 404,
        h: 316
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2766,
        y: 2054,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-statue-01.img": {
      frame: {
        x: 3122,
        y: 2054,
        w: 282,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 67,
        w: 282,
        h: 282
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2686,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-stone-03f.img": {
      frame: {
        x: 3408,
        y: 2054,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 454,
        y: 2686,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 602,
        y: 2686,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 750,
        y: 2686,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 898,
        y: 2686,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-airdrop-04.img": {
      frame: {
        x: 1254,
        y: 2686,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 3457,
        y: 1611,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-crate-13.img": {
      frame: {
        x: 1774,
        y: 2686,
        w: 240,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 240
      },
      sourceSize: {
        w: 240,
        h: 240
      }
    },
    "map-crate-12.img": {
      frame: {
        x: 2018,
        y: 2686,
        w: 240,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 240
      },
      sourceSize: {
        w: 240,
        h: 240
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 2262,
        y: 2686,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 2426,
        y: 2686,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3688,
        y: 2054,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 2590,
        y: 2686,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-stone-res-02f.img": {
      frame: {
        x: 1302,
        y: 1833,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1506,
        y: 1833,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 1622,
        y: 1833,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 2138,
        y: 1833,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 2302,
        y: 1833,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 2450,
        y: 1833,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-statue-top-02.img": {
      frame: {
        x: 2598,
        y: 1833,
        w: 279,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 131,
        y: 133,
        w: 279,
        h: 142
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-statue-top-01.img": {
      frame: {
        x: 2881,
        y: 1833,
        w: 279,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 131,
        y: 133,
        w: 279,
        h: 142
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 3164,
        y: 1833,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-chest-03f.img": {
      frame: {
        x: 2877,
        y: 1611,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 3021,
        y: 1611,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 3125,
        y: 1611,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 3229,
        y: 1611,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-airdrop-03.img": {
      frame: {
        x: 1514,
        y: 2686,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    }
  }
}];
let Ns = [{
  meta: {
    image: "desert-0-100-9f8523dd.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-complex-warehouse-floor-05.img": {
      frame: {
        x: 1318,
        y: 2,
        w: 522,
        h: 932
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1008,
        w: 522,
        h: 932
      },
      sourceSize: {
        w: 1296,
        h: 2048
      }
    },
    "map-building-saloon-floor-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1312,
        h: 1312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1312,
        h: 1312
      },
      sourceSize: {
        w: 1312,
        h: 1312
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 1844,
        y: 2,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 2,
        y: 1318,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-building-saloon-cellar-01.img": {
      frame: {
        x: 806,
        y: 1318,
        w: 1056,
        h: 672
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1056,
        h: 672
      },
      sourceSize: {
        w: 1056,
        h: 672
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 2615,
        y: 2,
        w: 832,
        h: 642
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 642
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 2615,
        y: 648,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2094,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-building-saloon-ceiling-01.img": {
      frame: {
        x: 2615,
        y: 1280,
        w: 625,
        h: 624
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 625,
        h: 624
      },
      sourceSize: {
        w: 656,
        h: 656
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 1866,
        y: 1318,
        w: 400,
        h: 624
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 624
      },
      sourceSize: {
        w: 400,
        h: 624
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 2270,
        y: 1318,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-bunker-statue-chamber-floor-01.img": {
      frame: {
        x: 936,
        y: 2094,
        w: 250,
        h: 541
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 32,
        w: 250,
        h: 541
      },
      sourceSize: {
        w: 256,
        h: 576
      }
    },
    "map-tree-05c.img": {
      frame: {
        x: 1190,
        y: 2094,
        w: 470,
        h: 492
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 10,
        w: 470,
        h: 492
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1844,
        y: 869,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2202,
        y: 869,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-statue-03.img": {
      frame: {
        x: 1318,
        y: 938,
        w: 288,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 67,
        w: 288,
        h: 282
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-statue-04.img": {
      frame: {
        x: 1664,
        y: 2094,
        w: 288,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 67,
        w: 288,
        h: 282
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1956,
        y: 2094,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-stone-03b.img": {
      frame: {
        x: 2408,
        y: 2094,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 3244,
        y: 1280,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2688,
        y: 2094,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-tree-06.img": {
      frame: {
        x: 3044,
        y: 2094,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bush-res-05.img": {
      frame: {
        x: 3387,
        y: 648,
        w: 56,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 47,
        w: 56,
        h: 50
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1610,
        y: 938,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3304,
        y: 2094,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 2615,
        y: 1908,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-building-saloon-ceiling-02.img": {
      frame: {
        x: 3131,
        y: 1908,
        w: 192,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 160
      },
      sourceSize: {
        w: 192,
        h: 160
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1664,
        y: 2380,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 1828,
        y: 2380,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 1976,
        y: 2380,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-18.img": {
      frame: {
        x: 2124,
        y: 2380,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-05.img": {
      frame: {
        x: 2272,
        y: 2380,
        w: 140,
        h: 139
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 139
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 3327,
        y: 1908,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-building-archway-ceiling-01.img": {
      frame: {
        x: 2416,
        y: 2380,
        w: 672,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 672,
        h: 128
      },
      sourceSize: {
        w: 672,
        h: 128
      }
    },
    "map-stone-06.img": {
      frame: {
        x: 3092,
        y: 2380,
        w: 288,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 128
      },
      sourceSize: {
        w: 288,
        h: 128
      }
    },
    "map-stone-res-01b.img": {
      frame: {
        x: 2,
        y: 2724,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-case-meteor-res-01.img": {
      frame: {
        x: 124,
        y: 2724,
        w: 128,
        h: 115
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 128,
        h: 115
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-chest-03d.img": {
      frame: {
        x: 3244,
        y: 1790,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-case-meteor-01.img": {
      frame: {
        x: 256,
        y: 2724,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 2502,
        y: 1318,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 806,
        y: 1994,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1034,
        y: 1994,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-archway-res-01.img": {
      frame: {
        x: 1318,
        y: 1224,
        w: 359,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 359,
        h: 90
      },
      sourceSize: {
        w: 360,
        h: 96
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1681,
        y: 1224,
        w: 82,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 82,
        h: 74
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3244,
        y: 1556,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    }
  }
}];
let js = [{
  meta: {
    image: "gradient-0-100-51ab76b6.png",
    size: {
      w: 1024,
      h: 1024
    },
    scale: 1
  },
  frames: {
    "map-barrel-res-01.img": {
      frame: {
        x: 238,
        y: 2,
        w: 226,
        h: 216
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 21,
        w: 226,
        h: 216
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-club-gradient-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 232,
        h: 256
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 10,
        w: 232,
        h: 256
      },
      sourceSize: {
        w: 292,
        h: 280
      }
    },
    "map-building-mansion-gradient-01.img": {
      frame: {
        x: 2,
        y: 262,
        w: 232,
        h: 202
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 9,
        w: 232,
        h: 202
      },
      sourceSize: {
        w: 248,
        h: 220
      }
    },
    "map-plane-01.img": {
      frame: {
        x: 238,
        y: 262,
        w: 180,
        h: 201
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 38,
        y: 11,
        w: 180,
        h: 201
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-plane-02.img": {
      frame: {
        x: 468,
        y: 2,
        w: 84,
        h: 169
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 86,
        y: 2,
        w: 84,
        h: 169
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bush-04cb.img": {
      frame: {
        x: 272,
        y: 468,
        w: 136,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 136,
        h: 128
      },
      sourceSize: {
        w: 150,
        h: 150
      }
    },
    "map-bush-01cb.img": {
      frame: {
        x: 556,
        y: 158,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-light-01.img": {
      frame: {
        x: 556,
        y: 304,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-04.img": {
      frame: {
        x: 2,
        y: 468,
        w: 136,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 9,
        w: 136,
        h: 130
      },
      sourceSize: {
        w: 150,
        h: 150
      }
    },
    "map-bush-01.img": {
      frame: {
        x: 142,
        y: 468,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-03.img": {
      frame: {
        x: 556,
        y: 2,
        w: 148,
        h: 152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 148,
        h: 152
      },
      sourceSize: {
        w: 152,
        h: 152
      }
    }
  }
}];
let qs = [{
  meta: {
    image: "savannah-0-100-35753cd3.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 1
  },
  frames: {
    "map-tree-12.img": {
      frame: {
        x: 66,
        y: 2,
        w: 508,
        h: 508
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 508,
        h: 508
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-stone-07.img": {
      frame: {
        x: 578,
        y: 2,
        w: 504,
        h: 506
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 504,
        h: 506
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-stone-res-07.img": {
      frame: {
        x: 2,
        y: 534,
        w: 410,
        h: 412
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 410,
        h: 412
      },
      sourceSize: {
        w: 420,
        h: 420
      }
    },
    "map-building-perch-ceiling.img": {
      frame: {
        x: 416,
        y: 534,
        w: 363,
        h: 345
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 23,
        w: 363,
        h: 345
      },
      sourceSize: {
        w: 400,
        h: 384
      }
    },
    "map-building-perch-floor.img": {
      frame: {
        x: 1086,
        y: 2,
        w: 400,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 320
      },
      sourceSize: {
        w: 400,
        h: 320
      }
    },
    "map-tree-03sv.img": {
      frame: {
        x: 1086,
        y: 326,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-wall-08-grassy.img": {
      frame: {
        x: 1346,
        y: 326,
        w: 45,
        h: 256
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 45,
        h: 256
      },
      sourceSize: {
        w: 64,
        h: 256
      }
    },
    "map-wall-08-grassy-res.img": {
      frame: {
        x: 1395,
        y: 326,
        w: 20,
        h: 252
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 2,
        w: 20,
        h: 252
      },
      sourceSize: {
        w: 64,
        h: 256
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1086,
        y: 586,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1250,
        y: 586,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1419,
        y: 326,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bush-res-01sv.img": {
      frame: {
        x: 1398,
        y: 820,
        w: 44,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 55,
        w: 44,
        h: 34
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-brush-01sv.img": {
      frame: {
        x: 783,
        y: 534,
        w: 186,
        h: 184
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 186,
        h: 184
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-brush-02sv.img": {
      frame: {
        x: 2,
        y: 950,
        w: 182,
        h: 182
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 182,
        h: 182
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-perch-res-01.img": {
      frame: {
        x: 783,
        y: 722,
        w: 176,
        h: 156
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 50,
        w: 176,
        h: 156
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-crate-21.img": {
      frame: {
        x: 188,
        y: 950,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-01sv.img": {
      frame: {
        x: 336,
        y: 950,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-propane-01.img": {
      frame: {
        x: 1086,
        y: 820,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-wall-03-grassy.img": {
      frame: {
        x: 1186,
        y: 820,
        w: 34,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 0,
        w: 34,
        h: 96
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-wall-03-grassy-res.img": {
      frame: {
        x: 1224,
        y: 820,
        w: 21,
        h: 92
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 2,
        w: 21,
        h: 92
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-tree-res-12.img": {
      frame: {
        x: 1249,
        y: 820,
        w: 79,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 13,
        w: 79,
        h: 70
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-brush-res-02sv.img": {
      frame: {
        x: 1332,
        y: 820,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 17,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1414,
        y: 586,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    }
  }
}];
let Fs = [{
  meta: {
    image: "main-0-100-075ad988.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 1504,
        h: 928
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1504,
        h: 928
      },
      sourceSize: {
        w: 1504,
        h: 928
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 773,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 1481,
        y: 1454,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 2285,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2321,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 712,
        y: 2321,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 1452,
        y: 2321,
        w: 832,
        h: 641
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 641
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 2288,
        y: 2321,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 3209,
        y: 2,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 3063,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 936,
        y: 3063,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 3209,
        y: 634,
        w: 318,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 318,
        h: 608
      },
      sourceSize: {
        w: 320,
        h: 608
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 3531,
        y: 634,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 3763,
        y: 634,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 3209,
        y: 1246,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 1757,
        w: 720,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 496
      },
      sourceSize: {
        w: 720,
        h: 496
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 2257,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 3567,
        y: 2257,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 1804,
        y: 3063,
        w: 1828,
        h: 352
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1828,
        h: 352
      },
      sourceSize: {
        w: 1830,
        h: 354
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 3209,
        y: 2629,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 3405,
        y: 2629,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1701,
        y: 934,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 2025,
        y: 934,
        w: 400,
        h: 314
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 400,
        h: 314
      },
      sourceSize: {
        w: 404,
        h: 316
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2429,
        y: 934,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1454,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 2609,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1762,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 2785,
        y: 934,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 3729,
        y: 2629,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 3061,
        y: 1454,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 2996,
        y: 2321,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 3636,
        y: 3063,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2,
        y: 3693,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 358,
        y: 3693,
        w: 704,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 320,
        w: 704,
        h: 253
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 1804,
        y: 3419,
        w: 704,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 323,
        w: 704,
        h: 250
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 2512,
        y: 3419,
        w: 1136,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1136,
        h: 240
      },
      sourceSize: {
        w: 1136,
        h: 240
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 2996,
        y: 2597,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3652,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 3816,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3916,
        y: 1246,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3916,
        y: 1474,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1066,
        y: 3693,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1270,
        y: 3693,
        w: 574,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 574,
        h: 194
      },
      sourceSize: {
        w: 610,
        h: 194
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1848,
        y: 3693,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 2045,
        y: 3693,
        w: 192,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 192,
        h: 193
      },
      sourceSize: {
        w: 230,
        h: 194
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 942,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 1701,
        y: 1258,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 2217,
        y: 1258,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 3891,
        y: 2257,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 3877,
        y: 2629,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 3877,
        y: 2733,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 2381,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 634,
        w: 128,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 304
      },
      sourceSize: {
        w: 128,
        h: 304
      }
    }
  }
}];
let Vs = [{
  meta: {
    image: "potato-0-100-9e6e65b1.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 1504,
        h: 928
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1504,
        h: 928
      },
      sourceSize: {
        w: 1504,
        h: 928
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 773,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 1481,
        y: 1454,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 2285,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2321,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 712,
        y: 2321,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 1452,
        y: 2321,
        w: 832,
        h: 641
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 641
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 2288,
        y: 2321,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 3209,
        y: 2,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 3063,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 936,
        y: 3063,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 3209,
        y: 634,
        w: 318,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 318,
        h: 608
      },
      sourceSize: {
        w: 320,
        h: 608
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 3531,
        y: 634,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 3763,
        y: 634,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 3209,
        y: 1246,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 1757,
        w: 720,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 496
      },
      sourceSize: {
        w: 720,
        h: 496
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 2257,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 3567,
        y: 2257,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 1804,
        y: 3063,
        w: 1828,
        h: 352
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1828,
        h: 352
      },
      sourceSize: {
        w: 1830,
        h: 354
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 3209,
        y: 2629,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 3405,
        y: 2629,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1701,
        y: 934,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 2025,
        y: 934,
        w: 400,
        h: 314
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 400,
        h: 314
      },
      sourceSize: {
        w: 404,
        h: 316
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2429,
        y: 934,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1454,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 634,
        w: 128,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 304
      },
      sourceSize: {
        w: 128,
        h: 304
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1762,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-potato-03.img": {
      frame: {
        x: 3891,
        y: 2482,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 3729,
        y: 2629,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 3061,
        y: 1454,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 2996,
        y: 2321,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 3636,
        y: 3063,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2,
        y: 3693,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 358,
        y: 3693,
        w: 704,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 320,
        w: 704,
        h: 253
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 1804,
        y: 3419,
        w: 704,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 323,
        w: 704,
        h: 250
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 2512,
        y: 3419,
        w: 1136,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1136,
        h: 240
      },
      sourceSize: {
        w: 1136,
        h: 240
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 2996,
        y: 2597,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 3652,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3816,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3916,
        y: 1246,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3916,
        y: 1474,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1066,
        y: 3693,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1270,
        y: 3693,
        w: 574,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 574,
        h: 194
      },
      sourceSize: {
        w: 610,
        h: 194
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1848,
        y: 3693,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 2045,
        y: 3693,
        w: 192,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 192,
        h: 193
      },
      sourceSize: {
        w: 230,
        h: 194
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 942,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 1701,
        y: 1258,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 2217,
        y: 1258,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 3891,
        y: 2257,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 3877,
        y: 2629,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 3877,
        y: 2733,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 2381,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 2609,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-potato-res-01.img": {
      frame: {
        x: 3891,
        y: 2395,
        w: 85,
        h: 83
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 29,
        y: 36,
        w: 85,
        h: 83
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-potato-01.img": {
      frame: {
        x: 3763,
        y: 1166,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-potato-02.img": {
      frame: {
        x: 3839,
        y: 1166,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 2785,
        y: 934,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    }
  }
}];
let Zs = [{
  meta: {
    image: "woods-0-100-49fced28.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-hatchet-compartment-floor-01.img": {
      frame: {
        x: 710,
        y: 2,
        w: 1184,
        h: 924
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1184,
        h: 924
      },
      sourceSize: {
        w: 1184,
        h: 928
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 704,
        h: 1344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 1344
      },
      sourceSize: {
        w: 704,
        h: 1376
      }
    },
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 1898,
        y: 2,
        w: 704,
        h: 704
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 704
      },
      sourceSize: {
        w: 704,
        h: 704
      }
    },
    "map-bunker-hatchet-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1350,
        w: 728,
        h: 696
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 728,
        h: 696
      },
      sourceSize: {
        w: 738,
        h: 706
      }
    },
    "map-bunker-hatchet-compartment-floor-02c.img": {
      frame: {
        x: 734,
        y: 1350,
        w: 254,
        h: 654
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 254,
        h: 654
      },
      sourceSize: {
        w: 258,
        h: 674
      }
    },
    "map-building-pavilion-ceiling-01.img": {
      frame: {
        x: 1898,
        y: 710,
        w: 623,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 16,
        w: 623,
        h: 608
      },
      sourceSize: {
        w: 640,
        h: 640
      }
    },
    "map-bunker-hatchet-compartment-floor-02a.img": {
      frame: {
        x: 992,
        y: 1350,
        w: 898,
        h: 590
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 898,
        h: 590
      },
      sourceSize: {
        w: 898,
        h: 594
      }
    },
    "map-building-pavilion-floor-01.img": {
      frame: {
        x: 1894,
        y: 1350,
        w: 576,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 576,
        h: 576
      },
      sourceSize: {
        w: 576,
        h: 576
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2050,
        w: 320,
        h: 544
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 544
      },
      sourceSize: {
        w: 320,
        h: 544
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 326,
        y: 2050,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-hatchet-compartment-floor-03b.img": {
      frame: {
        x: 842,
        y: 2050,
        w: 732,
        h: 508
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 732,
        h: 508
      },
      sourceSize: {
        w: 738,
        h: 514
      }
    },
    "map-bunker-hatchet-compartment-floor-03d.img": {
      frame: {
        x: 1578,
        y: 2050,
        w: 380,
        h: 508
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 22,
        w: 380,
        h: 508
      },
      sourceSize: {
        w: 386,
        h: 530
      }
    },
    "map-bunker-hatchet-compartment-ceiling-02.img": {
      frame: {
        x: 1962,
        y: 2050,
        w: 512,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 496
      },
      sourceSize: {
        w: 512,
        h: 496
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 2606,
        y: 2,
        w: 489,
        h: 480
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 17,
        w: 489,
        h: 480
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-hatchet-compartment-ceiling-01.img": {
      frame: {
        x: 710,
        y: 930,
        w: 512,
        h: 400
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 400
      },
      sourceSize: {
        w: 512,
        h: 400
      }
    },
    "map-bunker-hatchet-chamber-floor-01c.img": {
      frame: {
        x: 2606,
        y: 486,
        w: 226,
        h: 367
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 226,
        h: 367
      },
      sourceSize: {
        w: 226,
        h: 385
      }
    },
    "map-bunker-hatchet-compartment-floor-02b.img": {
      frame: {
        x: 2,
        y: 2598,
        w: 670,
        h: 322
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 670,
        h: 322
      },
      sourceSize: {
        w: 690,
        h: 322
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 2606,
        y: 857,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-bunker-hatchet-compartment-ceiling-03.img": {
      frame: {
        x: 1226,
        y: 930,
        w: 608,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 608,
        h: 304
      },
      sourceSize: {
        w: 608,
        h: 304
      }
    },
    "map-bunker-hatchet-chamber-ceiling-01.img": {
      frame: {
        x: 2606,
        y: 1181,
        w: 416,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 416,
        h: 304
      },
      sourceSize: {
        w: 416,
        h: 304
      }
    },
    "map-bunker-hatchet-compartment-floor-03c.img": {
      frame: {
        x: 2836,
        y: 486,
        w: 193,
        h: 278
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 22,
        w: 193,
        h: 278
      },
      sourceSize: {
        w: 193,
        h: 306
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 2606,
        y: 1489,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 2930,
        y: 857,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 2606,
        y: 1765,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 2886,
        y: 1489,
        w: 192,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 256
      },
      sourceSize: {
        w: 192,
        h: 256
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 2606,
        y: 2025,
        w: 254,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 254,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 2606,
        y: 2283,
        w: 250,
        h: 248
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 250,
        h: 248
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-woodpile-res-02.img": {
      frame: {
        x: 2864,
        y: 2217,
        w: 121,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 121,
        h: 56
      },
      sourceSize: {
        w: 128,
        h: 64
      }
    },
    "map-bunker-hatchet-compartment-floor-02d.img": {
      frame: {
        x: 1054,
        y: 2598,
        w: 378,
        h: 210
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 0,
        w: 378,
        h: 210
      },
      sourceSize: {
        w: 401,
        h: 210
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 2866,
        y: 1765,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-woodpile-02.img": {
      frame: {
        x: 1436,
        y: 2598,
        w: 384,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 192
      },
      sourceSize: {
        w: 384,
        h: 192
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 2864,
        y: 2025,
        w: 190,
        h: 188
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 190,
        h: 188
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-building-pavilion-res-01.img": {
      frame: {
        x: 2860,
        y: 2283,
        w: 178,
        h: 188
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 167,
        y: 162,
        w: 178,
        h: 188
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-hatchet-chamber-floor-01b.img": {
      frame: {
        x: 1824,
        y: 2598,
        w: 192,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 192,
        h: 176
      },
      sourceSize: {
        w: 194,
        h: 177
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 2020,
        y: 2598,
        w: 288,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 160
      },
      sourceSize: {
        w: 288,
        h: 160
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 2312,
        y: 2598,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 2476,
        y: 2598,
        w: 152,
        h: 152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 152,
        h: 152
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 2632,
        y: 2598,
        w: 151,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 151,
        h: 149
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 2787,
        y: 2598,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-crate-19.img": {
      frame: {
        x: 2939,
        y: 2598,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 2,
        y: 2924,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 150,
        y: 2924,
        w: 135,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 135,
        h: 143
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 2525,
        y: 710,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 2474,
        y: 1350,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 289,
        y: 2924,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 2474,
        y: 1484,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-tree-switch-03.img": {
      frame: {
        x: 2474,
        y: 1606,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-switch-04.img": {
      frame: {
        x: 2474,
        y: 1722,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-switch-01.img": {
      frame: {
        x: 2478,
        y: 2050,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-switch-02.img": {
      frame: {
        x: 2478,
        y: 2166,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 453,
        y: 2924,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 2478,
        y: 2282,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 2836,
        y: 768,
        w: 82,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 82,
        h: 74
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 2922,
        y: 768,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 13,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bunker-hatchet-compartment-floor-03a.img": {
      frame: {
        x: 676,
        y: 2598,
        w: 374,
        h: 226
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 374,
        h: 226
      },
      sourceSize: {
        w: 386,
        h: 226
      }
    }
  }
}];
let Xs = [{
  meta: {
    image: "cobalt-0-100-c45e6f2b.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-twins-chamber-floor-01.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 1472,
        h: 1152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 96,
        y: 128,
        w: 1472,
        h: 1152
      },
      sourceSize: {
        w: 1664,
        h: 1408
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 1504,
        h: 928
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1504,
        h: 928
      },
      sourceSize: {
        w: 1504,
        h: 928
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 1510,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 2218,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2386,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 712,
        y: 2386,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1452,
        y: 2386,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 2160,
        y: 2386,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 2558,
        y: 1454,
        w: 318,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 318,
        h: 608
      },
      sourceSize: {
        w: 320,
        h: 608
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 2880,
        y: 1454,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 3177,
        y: 2,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 2,
        y: 3128,
        w: 720,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 496
      },
      sourceSize: {
        w: 720,
        h: 496
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 513,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 726,
        y: 3128,
        w: 1828,
        h: 352
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1828,
        h: 352
      },
      sourceSize: {
        w: 1830,
        h: 354
      }
    },
    "map-bunker-twins-chamber-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 877,
        w: 512,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 352
      },
      sourceSize: {
        w: 512,
        h: 352
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 3501,
        y: 513,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 1233,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 3501,
        y: 1233,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 1581,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 3697,
        y: 513,
        w: 128,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 304
      },
      sourceSize: {
        w: 128,
        h: 304
      }
    },
    "map-stone-03cb.img": {
      frame: {
        x: 3177,
        y: 1889,
        w: 278,
        h: 278
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 278,
        h: 278
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 3459,
        y: 1889,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 3177,
        y: 2171,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 1701,
        y: 1158,
        w: 704,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 320,
        w: 704,
        h: 253
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-tree-03cb.img": {
      frame: {
        x: 3613,
        y: 1581,
        w: 254,
        h: 252
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 254,
        h: 252
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 2409,
        y: 1158,
        w: 704,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 323,
        w: 704,
        h: 250
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 2558,
        y: 3128,
        w: 1136,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1136,
        h: 240
      },
      sourceSize: {
        w: 1136,
        h: 240
      }
    },
    "map-bunker-twins-ceiling-01.img": {
      frame: {
        x: 3501,
        y: 2171,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 2445,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "part-class-shell-03b.img": {
      frame: {
        x: 3825,
        y: 1301,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 52,
        h: 64
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3697,
        y: 2171,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3373,
        y: 2445,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3437,
        y: 2445,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 3501,
        y: 2445,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-stone-res-02cb.img": {
      frame: {
        x: 3177,
        y: 2679,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 3177,
        y: 2883,
        w: 574,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 574,
        h: 194
      },
      sourceSize: {
        w: 610,
        h: 194
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 3381,
        y: 2679,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 3578,
        y: 2679,
        w: 192,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 192,
        h: 193
      },
      sourceSize: {
        w: 230,
        h: 194
      }
    },
    "map-class-shell-03b.img": {
      frame: {
        x: 3705,
        y: 2445,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-03a.img": {
      frame: {
        x: 2944,
        y: 1454,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-01a.img": {
      frame: {
        x: 2944,
        y: 1604,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-01b.img": {
      frame: {
        x: 2944,
        y: 1754,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-02a.img": {
      frame: {
        x: 3698,
        y: 3128,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-02b.img": {
      frame: {
        x: 2,
        y: 3628,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-stone-01cb.img": {
      frame: {
        x: 3028,
        y: 2386,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-class-crate-assault.img": {
      frame: {
        x: 3028,
        y: 2534,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-scout.img": {
      frame: {
        x: 3028,
        y: 2680,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-sniper.img": {
      frame: {
        x: 3028,
        y: 2826,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-healer.img": {
      frame: {
        x: 152,
        y: 3628,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-tank.img": {
      frame: {
        x: 298,
        y: 3628,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-demo.img": {
      frame: {
        x: 444,
        y: 3628,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-03.img": {
      frame: {
        x: 726,
        y: 3484,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-res-01.img": {
      frame: {
        x: 3755,
        y: 2883,
        w: 125,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 15,
        w: 125,
        h: 128
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-stone-res-01cb.img": {
      frame: {
        x: 3693,
        y: 1111,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "part-class-shell-01a.img": {
      frame: {
        x: 3774,
        y: 2679,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-class-shell-02a.img": {
      frame: {
        x: 3774,
        y: 2771,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-class-shell-03a.img": {
      frame: {
        x: 2558,
        y: 2066,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-class-shell-01b.img": {
      frame: {
        x: 3815,
        y: 1111,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 52,
        h: 64
      }
    },
    "part-class-shell-02b.img": {
      frame: {
        x: 3825,
        y: 1233,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 52,
        h: 64
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 3693,
        y: 877,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    }
  }
}];
let Ws = {
  loadout: As,
  shared: Es,
  halloween: Rs,
  snow: Os,
  faction: Bs,
  desert: Ns,
  gradient: js,
  savannah: qs,
  main: Fs,
  potato: Vs,
  woods: Zs,
  cobalt: Xs
};
let Hs = [{
  meta: {
    image: "loadout-0-50-c16c5245.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "part-aura-circle-01.img": {
      frame: {
        x: 260,
        y: 2,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "ping-map-pulse.img": {
      frame: {
        x: 2,
        y: 2,
        w: 254,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 254,
        h: 253
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "part-shell-05.img": {
      frame: {
        x: 2,
        y: 259,
        w: 32,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 130
      },
      sourceSize: {
        w: 32,
        h: 130
      }
    },
    "part-smoke-02.img": {
      frame: {
        x: 38,
        y: 259,
        w: 130,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 0,
        w: 130,
        h: 129
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-smoke-03.img": {
      frame: {
        x: 172,
        y: 259,
        w: 129,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 129,
        h: 129
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "emote-circle-outer.img": {
      frame: {
        x: 408,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-scarssr-01.img": {
      frame: {
        x: 408,
        y: 134,
        w: 32,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 32,
        h: 126
      },
      sourceSize: {
        w: 30,
        h: 124
      }
    },
    "gun-potato-cannon-01.img": {
      frame: {
        x: 444,
        y: 134,
        w: 30,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 30,
        h: 126
      },
      sourceSize: {
        w: 28,
        h: 124
      }
    },
    "gun-awc-02.img": {
      frame: {
        x: 478,
        y: 134,
        w: 28,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 28,
        h: 117
      },
      sourceSize: {
        w: 30,
        h: 118
      }
    },
    "gun-awc-01.img": {
      frame: {
        x: 408,
        y: 264,
        w: 28,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 28,
        h: 117
      },
      sourceSize: {
        w: 30,
        h: 118
      }
    },
    "gun-m249-top-01.img": {
      frame: {
        x: 510,
        y: 134,
        w: 24,
        h: 111
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 6,
        w: 24,
        h: 111
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-garand-01.img": {
      frame: {
        x: 440,
        y: 264,
        w: 22,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 7,
        w: 22,
        h: 110
      },
      sourceSize: {
        w: 24,
        h: 116
      }
    },
    "gun-potato-smg-01.img": {
      frame: {
        x: 466,
        y: 264,
        w: 55,
        h: 109
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 16,
        w: 55,
        h: 109
      },
      sourceSize: {
        w: 88,
        h: 124
      }
    },
    "gun-usas-01.img": {
      frame: {
        x: 305,
        y: 259,
        w: 26,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 26,
        h: 108
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-vss-01.img": {
      frame: {
        x: 335,
        y: 259,
        w: 24,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: -1,
        w: 24,
        h: 106
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "pad.img": {
      frame: {
        x: 260,
        y: 150,
        w: 104,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 104,
        h: 104
      },
      sourceSize: {
        w: 104,
        h: 104
      }
    },
    "gun-scorpion-01.img": {
      frame: {
        x: 368,
        y: 150,
        w: 24,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 2,
        w: 24,
        h: 103
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "gun-pkp-top-01.img": {
      frame: {
        x: 363,
        y: 259,
        w: 23,
        h: 99
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 18,
        w: 23,
        h: 99
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-grozas-01.img": {
      frame: {
        x: 2,
        y: 393,
        w: 24,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 24,
        h: 98
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "gun-m4a1-01.img": {
      frame: {
        x: 30,
        y: 393,
        w: 25,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 2,
        w: 25,
        h: 97
      },
      sourceSize: {
        w: 24,
        h: 98
      }
    },
    "gun-long-01.img": {
      frame: {
        x: 59,
        y: 393,
        w: 18,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 96
      },
      sourceSize: {
        w: 16,
        h: 94
      }
    },
    "part-shell-02.img": {
      frame: {
        x: 81,
        y: 393,
        w: 32,
        h: 95
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 95
      },
      sourceSize: {
        w: 32,
        h: 95
      }
    },
    "gun-saiga-01.img": {
      frame: {
        x: 117,
        y: 393,
        w: 22,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 22,
        h: 91
      },
      sourceSize: {
        w: 24,
        h: 98
      }
    },
    "player-helmet-forest.img": {
      frame: {
        x: 143,
        y: 393,
        w: 78,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 78,
        h: 90
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-shell-03.img": {
      frame: {
        x: 225,
        y: 393,
        w: 32,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 90
      },
      sourceSize: {
        w: 32,
        h: 90
      }
    },
    "player-wading-01.img": {
      frame: {
        x: 261,
        y: 393,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "gun-famas-01.img": {
      frame: {
        x: 353,
        y: 393,
        w: 22,
        h: 87
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 18,
        w: 22,
        h: 87
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "loot-melee-machete-taiga.img": {
      frame: {
        x: 379,
        y: 393,
        w: 24,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 29,
        y: 0,
        w: 24,
        h: 84
      },
      sourceSize: {
        w: 84,
        h: 84
      }
    },
    "part-shell-04.img": {
      frame: {
        x: 407,
        y: 393,
        w: 28,
        h: 82
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 82
      },
      sourceSize: {
        w: 28,
        h: 82
      }
    },
    "proj-smoke-nopin.img": {
      frame: {
        x: 439,
        y: 393,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-airdrop-03.img": {
      frame: {
        x: 540,
        y: 2,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "proj-smoke-pin.img": {
      frame: {
        x: 540,
        y: 86,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "proj-bomb-iron-01.img": {
      frame: {
        x: 540,
        y: 170,
        w: 36,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 0,
        w: 36,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-bonesaw-healer.img": {
      frame: {
        x: 580,
        y: 170,
        w: 34,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 4,
        w: 34,
        h: 80
      },
      sourceSize: {
        w: 84,
        h: 84
      }
    },
    "loot-melee-bonesaw-rusted.img": {
      frame: {
        x: 540,
        y: 254,
        w: 30,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 39,
        y: 10,
        w: 30,
        h: 80
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "loot-melee-kukri-sniper.img": {
      frame: {
        x: 574,
        y: 254,
        w: 23,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 0,
        w: 23,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-kukri-trad.img": {
      frame: {
        x: 540,
        y: 338,
        w: 23,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 0,
        w: 23,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-airdrop-02x.img": {
      frame: {
        x: 601,
        y: 254,
        w: 19,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 80
      },
      sourceSize: {
        w: 19,
        h: 80
      }
    },
    "part-airdrop-02.img": {
      frame: {
        x: 567,
        y: 338,
        w: 19,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 80
      },
      sourceSize: {
        w: 19,
        h: 80
      }
    },
    "player-helmet-moon.img": {
      frame: {
        x: 2,
        y: 495,
        w: 64,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 64,
        h: 78
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-melee-spade-assault.img": {
      frame: {
        x: 590,
        y: 338,
        w: 30,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 1,
        w: 30,
        h: 78
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "gun-groza-01.img": {
      frame: {
        x: 70,
        y: 495,
        w: 24,
        h: 77
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 28,
        w: 24,
        h: 77
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "player-armor-base-01.img": {
      frame: {
        x: 98,
        y: 495,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "player-circle-base-01.img": {
      frame: {
        x: 178,
        y: 495,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "player-circle-base-02.img": {
      frame: {
        x: 258,
        y: 495,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "proj-smoke-nopin-nolever.img": {
      frame: {
        x: 338,
        y: 495,
        w: 42,
        h: 75
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 2,
        w: 42,
        h: 75
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "star.img": {
      frame: {
        x: 384,
        y: 495,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "player-star.img": {
      frame: {
        x: 462,
        y: 495,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "proj-mirv-nopin.img": {
      frame: {
        x: 540,
        y: 495,
        w: 53,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 53,
        h: 74
      },
      sourceSize: {
        w: 64,
        h: 74
      }
    },
    "proj-mirv-pin.img": {
      frame: {
        x: 624,
        y: 2,
        w: 53,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 53,
        h: 74
      },
      sourceSize: {
        w: 64,
        h: 74
      }
    },
    "proj-mirv-nopin-nolever.img": {
      frame: {
        x: 624,
        y: 80,
        w: 42,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 42,
        h: 74
      },
      sourceSize: {
        w: 64,
        h: 74
      }
    },
    "player-ripple-01.img": {
      frame: {
        x: 2,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 71,
        h: 71
      }
    },
    "loot-circle-outer-05.img": {
      frame: {
        x: 79,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "loot-circle-outer-02.img": {
      frame: {
        x: 156,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "loot-circle-outer-01.img": {
      frame: {
        x: 233,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "gun-bugle-01.img": {
      frame: {
        x: 624,
        y: 158,
        w: 36,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 43,
        w: 36,
        h: 73
      },
      sourceSize: {
        w: 48,
        h: 116
      }
    },
    "player-helmet-last-man-02.img": {
      frame: {
        x: 310,
        y: 577,
        w: 73,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 73,
        h: 72
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-last-man-01.img": {
      frame: {
        x: 387,
        y: 577,
        w: 73,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 73,
        h: 72
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-panel-01.img": {
      frame: {
        x: 464,
        y: 577,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-the-hunted.img": {
      frame: {
        x: 540,
        y: 577,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-woodchip-01.img": {
      frame: {
        x: 681,
        y: 2,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-plank-01.img": {
      frame: {
        x: 681,
        y: 78,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "ping-border.img": {
      frame: {
        x: 681,
        y: 154,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-base-02.img": {
      frame: {
        x: 681,
        y: 230,
        w: 70,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 70,
        h: 72
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "part-book-01.img": {
      frame: {
        x: 681,
        y: 306,
        w: 56,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 56,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-melee-crowbar-recon.img": {
      frame: {
        x: 681,
        y: 382,
        w: 22,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 22,
        h: 72
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-crowbar-scout.img": {
      frame: {
        x: 707,
        y: 382,
        w: 22,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 22,
        h: 72
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-base-01.img": {
      frame: {
        x: 681,
        y: 458,
        w: 70,
        h: 71
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 71
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "part-pot-01.img": {
      frame: {
        x: 681,
        y: 533,
        w: 50,
        h: 71
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 1,
        w: 50,
        h: 71
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-king-woods.img": {
      frame: {
        x: 2,
        y: 654,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "part-plate-01.img": {
      frame: {
        x: 78,
        y: 654,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-base-outfitTurkey.img": {
      frame: {
        x: 154,
        y: 654,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitSpetsnaz.img": {
      frame: {
        x: 228,
        y: 654,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitHeaven.img": {
      frame: {
        x: 302,
        y: 654,
        w: 69,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 69,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitDC.img": {
      frame: {
        x: 375,
        y: 654,
        w: 69,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 69,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitParmaPrestige.img": {
      frame: {
        x: 448,
        y: 654,
        w: 68,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 68,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-base-outfitWheat.img": {
      frame: {
        x: 540,
        y: 422,
        w: 70,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 70,
        h: 69
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitLumber.img": {
      frame: {
        x: 520,
        y: 654,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "loot-melee-warhammer-tank.img": {
      frame: {
        x: 593,
        y: 654,
        w: 131,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 7,
        w: 131,
        h: 68
      },
      sourceSize: {
        w: 132,
        h: 76
      }
    },
    "loot-circle-outer-04.img": {
      frame: {
        x: 757,
        y: 2,
        w: 73,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 68
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "part-splat-02.img": {
      frame: {
        x: 757,
        y: 74,
        w: 64,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 64,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "ping-map-coming.img": {
      frame: {
        x: 757,
        y: 146,
        w: 60,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 68
      },
      sourceSize: {
        w: 64,
        h: 128
      }
    },
    "player-helmet-potato.img": {
      frame: {
        x: 757,
        y: 218,
        w: 53,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 53,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-leader.img": {
      frame: {
        x: 757,
        y: 290,
        w: 51,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 51,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-medic.img": {
      frame: {
        x: 757,
        y: 362,
        w: 51,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 51,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-lieutenant.img": {
      frame: {
        x: 757,
        y: 434,
        w: 51,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 51,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-visor-scout.img": {
      frame: {
        x: 757,
        y: 506,
        w: 42,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 36,
        y: 10,
        w: 42,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-circle-outer-03.img": {
      frame: {
        x: 757,
        y: 578,
        w: 73,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 73,
        h: 67
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "part-shell-01.img": {
      frame: {
        x: 757,
        y: 649,
        w: 28,
        h: 67
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 67
      },
      sourceSize: {
        w: 28,
        h: 67
      }
    },
    "star-red.img": {
      frame: {
        x: 2,
        y: 728,
        w: 70,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 70,
        h: 66
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "star-blue.img": {
      frame: {
        x: 76,
        y: 728,
        w: 70,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 70,
        h: 66
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "part-heal-tomoe.img": {
      frame: {
        x: 616,
        y: 577,
        w: 55,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: -1,
        w: 55,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-naturalize.img": {
      frame: {
        x: 624,
        y: 235,
        w: 52,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: -1,
        w: 52,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-helmet-grenadier.img": {
      frame: {
        x: 624,
        y: 305,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-recon.img": {
      frame: {
        x: 624,
        y: 375,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-bugler.img": {
      frame: {
        x: 624,
        y: 445,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "gun-deagle-01.img": {
      frame: {
        x: 803,
        y: 506,
        w: 26,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 51,
        w: 26,
        h: 66
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-mp220-01.img": {
      frame: {
        x: 789,
        y: 649,
        w: 22,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 22,
        h: 66
      },
      sourceSize: {
        w: 20,
        h: 64
      }
    },
    "gun-med-01.img": {
      frame: {
        x: 812,
        y: 290,
        w: 18,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 66
      },
      sourceSize: {
        w: 16,
        h: 64
      }
    },
    "proj-strobe-unarmed.img": {
      frame: {
        x: 150,
        y: 728,
        w: 76,
        h: 65
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 11,
        w: 76,
        h: 65
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-splat-01.img": {
      frame: {
        x: 230,
        y: 728,
        w: 66,
        h: 65
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 65
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-splat-03.img": {
      frame: {
        x: 300,
        y: 728,
        w: 65,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 65,
        h: 64
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "flag-indonesia.img": {
      frame: {
        x: 369,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-israel.img": {
      frame: {
        x: 437,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-italy.img": {
      frame: {
        x: 505,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-japan.img": {
      frame: {
        x: 573,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-kazakhstan.img": {
      frame: {
        x: 641,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-latvia.img": {
      frame: {
        x: 709,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-lithuania.img": {
      frame: {
        x: 834,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-malaysia.img": {
      frame: {
        x: 834,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-mexico.img": {
      frame: {
        x: 834,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-moldova.img": {
      frame: {
        x: 834,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-morocco.img": {
      frame: {
        x: 834,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-netherlands.img": {
      frame: {
        x: 834,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-new-zealand.img": {
      frame: {
        x: 834,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-norway.img": {
      frame: {
        x: 834,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-peru.img": {
      frame: {
        x: 834,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-philippines.img": {
      frame: {
        x: 834,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-portugal.img": {
      frame: {
        x: 834,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-republic-of-poland.img": {
      frame: {
        x: 2,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-romania.img": {
      frame: {
        x: 70,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-russia.img": {
      frame: {
        x: 138,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-serbia.img": {
      frame: {
        x: 206,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-singapore.img": {
      frame: {
        x: 274,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-slovakia.img": {
      frame: {
        x: 342,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-south-korea.img": {
      frame: {
        x: 410,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-spain.img": {
      frame: {
        x: 478,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-sweden.img": {
      frame: {
        x: 546,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-switzerland.img": {
      frame: {
        x: 614,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-taiwan.img": {
      frame: {
        x: 682,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-thailand.img": {
      frame: {
        x: 750,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-trinidad-and-tobago.img": {
      frame: {
        x: 818,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-turkey.img": {
      frame: {
        x: 902,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-ukraine.img": {
      frame: {
        x: 902,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-united-arab-emirates.img": {
      frame: {
        x: 902,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-united-kingdom.img": {
      frame: {
        x: 902,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-united-states-of-america.img": {
      frame: {
        x: 902,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-uruguay.img": {
      frame: {
        x: 902,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-venezuela.img": {
      frame: {
        x: 902,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-vietnam.img": {
      frame: {
        x: 902,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-ammo-box.img": {
      frame: {
        x: 902,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-imp-trick.img": {
      frame: {
        x: 902,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-imp.img": {
      frame: {
        x: 902,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-joy.img": {
      frame: {
        x: 902,
        y: 750,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "heart.img": {
      frame: {
        x: 2,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-monocle.img": {
      frame: {
        x: 70,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-happy.img": {
      frame: {
        x: 138,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-heal-basic.img": {
      frame: {
        x: 206,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-poo.img": {
      frame: {
        x: 274,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-sad.img": {
      frame: {
        x: 342,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-sob.img": {
      frame: {
        x: 410,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-sunglass.img": {
      frame: {
        x: 478,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-thinking.img": {
      frame: {
        x: 546,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-upsidedown.img": {
      frame: {
        x: 614,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-disappoint.img": {
      frame: {
        x: 682,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-heart.img": {
      frame: {
        x: 750,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-log-01.img": {
      frame: {
        x: 818,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-bandaged.img": {
      frame: {
        x: 886,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-angry.img": {
      frame: {
        x: 970,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-albania.img": {
      frame: {
        x: 970,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-algeria.img": {
      frame: {
        x: 970,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-argentina.img": {
      frame: {
        x: 970,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-angel-treat.img": {
      frame: {
        x: 970,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-australia.img": {
      frame: {
        x: 970,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-austria.img": {
      frame: {
        x: 970,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-azerbaijan.img": {
      frame: {
        x: 970,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-belarus.img": {
      frame: {
        x: 970,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-belgium.img": {
      frame: {
        x: 970,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-bolivia.img": {
      frame: {
        x: 970,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-bosnia-and-herzegovina.img": {
      frame: {
        x: 970,
        y: 750,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-brazil.img": {
      frame: {
        x: 970,
        y: 818,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-canada.img": {
      frame: {
        x: 2,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-chile.img": {
      frame: {
        x: 70,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-china.img": {
      frame: {
        x: 138,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "surviv.img": {
      frame: {
        x: 206,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-alien.img": {
      frame: {
        x: 274,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-colombia.img": {
      frame: {
        x: 342,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-croatia.img": {
      frame: {
        x: 410,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-czech-republic.img": {
      frame: {
        x: 478,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-denmark.img": {
      frame: {
        x: 546,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-dominican-republic.img": {
      frame: {
        x: 614,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-ecuador.img": {
      frame: {
        x: 682,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-egypt.img": {
      frame: {
        x: 750,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-estonia.img": {
      frame: {
        x: 818,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "chicken-dinner.img": {
      frame: {
        x: 886,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-finland.img": {
      frame: {
        x: 954,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-france.img": {
      frame: {
        x: 1038,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-aoe-heal.img": {
      frame: {
        x: 1038,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-georgia.img": {
      frame: {
        x: 1038,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-germany.img": {
      frame: {
        x: 1038,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-greece.img": {
      frame: {
        x: 1038,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-potato-cannon.img": {
      frame: {
        x: 1038,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-firepower.img": {
      frame: {
        x: 1038,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-guatemala.img": {
      frame: {
        x: 1038,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "emote.img": {
      frame: {
        x: 1038,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-gotw.img": {
      frame: {
        x: 1038,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ot38-dual.img": {
      frame: {
        x: 1038,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-hunted.img": {
      frame: {
        x: 1038,
        y: 750,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-leadership.img": {
      frame: {
        x: 1038,
        y: 818,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-targeting.img": {
      frame: {
        x: 1038,
        y: 886,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m93r-dual.img": {
      frame: {
        x: 2,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-honduras.img": {
      frame: {
        x: 70,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-00.img": {
      frame: {
        x: 138,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-01.img": {
      frame: {
        x: 206,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-02.img": {
      frame: {
        x: 274,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-crosshair.img": {
      frame: {
        x: 342,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-emote.img": {
      frame: {
        x: 410,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-03.img": {
      frame: {
        x: 478,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-04.img": {
      frame: {
        x: 546,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-melee.img": {
      frame: {
        x: 614,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-hong-kong.img": {
      frame: {
        x: 682,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-unlock.img": {
      frame: {
        x: 750,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-help.img": {
      frame: {
        x: 818,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-danger.img": {
      frame: {
        x: 886,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-coming.img": {
      frame: {
        x: 954,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-airstrike.img": {
      frame: {
        x: 1022,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-airdrop.img": {
      frame: {
        x: 1106,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-hungary.img": {
      frame: {
        x: 1106,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-bar.img": {
      frame: {
        x: 1106,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-colt45-dual.img": {
      frame: {
        x: 1106,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-deagle-dual.img": {
      frame: {
        x: 1106,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-india.img": {
      frame: {
        x: 1106,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-grozas.img": {
      frame: {
        x: 1106,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-usas.img": {
      frame: {
        x: 1106,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-picasso.img": {
      frame: {
        x: 1106,
        y: 546,
        w: 63,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 63,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "rainbow.img": {
      frame: {
        x: 1106,
        y: 614,
        w: 63,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 63,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m4a1.img": {
      frame: {
        x: 1106,
        y: 682,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "campfire.img": {
      frame: {
        x: 1106,
        y: 750,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-l86.img": {
      frame: {
        x: 1106,
        y: 818,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-splinter.img": {
      frame: {
        x: 1106,
        y: 886,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1a1.img": {
      frame: {
        x: 1106,
        y: 954,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-dp28.img": {
      frame: {
        x: 2,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-an94.img": {
      frame: {
        x: 66,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-saiga.img": {
      frame: {
        x: 130,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "snowflake.img": {
      frame: {
        x: 194,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-pkp.img": {
      frame: {
        x: 258,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scorpion.img": {
      frame: {
        x: 322,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m249.img": {
      frame: {
        x: 386,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mkg45.img": {
      frame: {
        x: 450,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mk12.img": {
      frame: {
        x: 514,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-potato-smg.img": {
      frame: {
        x: 578,
        y: 1070,
        w: 59,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 59,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1014.img": {
      frame: {
        x: 641,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-flare-gun-dual.img": {
      frame: {
        x: 703,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-svd.img": {
      frame: {
        x: 765,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "trash.img": {
      frame: {
        x: 827,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "cupcake.img": {
      frame: {
        x: 889,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "reload.img": {
      frame: {
        x: 951,
        y: 1070,
        w: 57,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 57,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "thumbs-up.img": {
      frame: {
        x: 1012,
        y: 1070,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-vss.img": {
      frame: {
        x: 1072,
        y: 1070,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m39.img": {
      frame: {
        x: 1174,
        y: 2,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ots38-dual.img": {
      frame: {
        x: 1174,
        y: 70,
        w: 55,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 55,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "candy-corn.img": {
      frame: {
        x: 1174,
        y: 138,
        w: 55,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 55,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m93r.img": {
      frame: {
        x: 1174,
        y: 206,
        w: 54,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ak.img": {
      frame: {
        x: 1174,
        y: 274,
        w: 54,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "police.img": {
      frame: {
        x: 1174,
        y: 342,
        w: 54,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "snowman.img": {
      frame: {
        x: 1174,
        y: 410,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-colt45.img": {
      frame: {
        x: 1174,
        y: 478,
        w: 50,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 50,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-rare-potato.img": {
      frame: {
        x: 1174,
        y: 546,
        w: 48,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "indicator.img": {
      frame: {
        x: 1174,
        y: 614,
        w: 47,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 47,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bullets.img": {
      frame: {
        x: 1174,
        y: 682,
        w: 46,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 46,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-smoke.img": {
      frame: {
        x: 1174,
        y: 750,
        w: 45,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 45,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-chest-02.img": {
      frame: {
        x: 1174,
        y: 818,
        w: 42,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 42,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ice-cream.img": {
      frame: {
        x: 1174,
        y: 886,
        w: 36,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 0,
        w: 36,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-airdrop-04.img": {
      frame: {
        x: 1174,
        y: 954,
        w: 27,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 64
      },
      sourceSize: {
        w: 27,
        h: 64
      }
    },
    "ping-map-danger.img": {
      frame: {
        x: 1205,
        y: 954,
        w: 22,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 22,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-p30l-01.img": {
      frame: {
        x: 1174,
        y: 1022,
        w: 21,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 53,
        w: 21,
        h: 64
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "loot-perk-chambered.img": {
      frame: {
        x: 2,
        y: 1138,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scarssr.img": {
      frame: {
        x: 70,
        y: 1138,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1911-dual.img": {
      frame: {
        x: 138,
        y: 1138,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-awc.img": {
      frame: {
        x: 206,
        y: 1138,
        w: 63,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 63,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-qbb97.img": {
      frame: {
        x: 273,
        y: 1138,
        w: 62,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-heal-moon.img": {
      frame: {
        x: 339,
        y: 1138,
        w: 62,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "tombstone.img": {
      frame: {
        x: 405,
        y: 1138,
        w: 60,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-pin-01.img": {
      frame: {
        x: 469,
        y: 1138,
        w: 57,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 57,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-pin-02.img": {
      frame: {
        x: 530,
        y: 1138,
        w: 57,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 57,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1911.img": {
      frame: {
        x: 591,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-02.img": {
      frame: {
        x: 651,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-01.img": {
      frame: {
        x: 711,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-hk416.img": {
      frame: {
        x: 771,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "egg.img": {
      frame: {
        x: 777,
        y: 728,
        w: 52,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-nolever-01.img": {
      frame: {
        x: 831,
        y: 1138,
        w: 48,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-nolever-02.img": {
      frame: {
        x: 883,
        y: 1138,
        w: 48,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-windwalk.img": {
      frame: {
        x: 935,
        y: 1138,
        w: 46,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 46,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-heal-heart.img": {
      frame: {
        x: 985,
        y: 1138,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "salt.img": {
      frame: {
        x: 1053,
        y: 1138,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m9-dual.img": {
      frame: {
        x: 1121,
        y: 1138,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-sv98.img": {
      frame: {
        x: 1234,
        y: 2,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-star.img": {
      frame: {
        x: 1234,
        y: 68,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull.img": {
      frame: {
        x: 1234,
        y: 134,
        w: 63,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 63,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-kill-icon.img": {
      frame: {
        x: 1234,
        y: 200,
        w: 63,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 63,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-feather-01.img": {
      frame: {
        x: 1234,
        y: 266,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-feather-02.img": {
      frame: {
        x: 1234,
        y: 332,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "donut.img": {
      frame: {
        x: 1234,
        y: 398,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-stump-01.img": {
      frame: {
        x: 1234,
        y: 464,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "mag-glass.img": {
      frame: {
        x: 1234,
        y: 530,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "target.img": {
      frame: {
        x: 1234,
        y: 596,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-fabricate.img": {
      frame: {
        x: 1234,
        y: 662,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m870.img": {
      frame: {
        x: 1234,
        y: 728,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-heal.img": {
      frame: {
        x: 1234,
        y: 794,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1100.img": {
      frame: {
        x: 1234,
        y: 860,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-chest-01.img": {
      frame: {
        x: 1234,
        y: 926,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-basic.img": {
      frame: {
        x: 1234,
        y: 992,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-04.img": {
      frame: {
        x: 1234,
        y: 1058,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-03.img": {
      frame: {
        x: 1234,
        y: 1124,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-06.img": {
      frame: {
        x: 2,
        y: 1205,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-05.img": {
      frame: {
        x: 67,
        y: 1205,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ump9.img": {
      frame: {
        x: 132,
        y: 1205,
        w: 60,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 60,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-famas.img": {
      frame: {
        x: 196,
        y: 1205,
        w: 60,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 60,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-vector45.img": {
      frame: {
        x: 260,
        y: 1205,
        w: 56,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-bandage.img": {
      frame: {
        x: 320,
        y: 1205,
        w: 56,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scar.img": {
      frame: {
        x: 380,
        y: 1205,
        w: 56,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-04.img": {
      frame: {
        x: 440,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-02.img": {
      frame: {
        x: 496,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m9.img": {
      frame: {
        x: 552,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair022.img": {
      frame: {
        x: 1589,
        y: 302,
        w: 10,
        h: 8
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 12,
        w: 10,
        h: 8
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "loot-xp-book-01.img": {
      frame: {
        x: 664,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-chest-03.img": {
      frame: {
        x: 720,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-06.img": {
      frame: {
        x: 776,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-03.img": {
      frame: {
        x: 832,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-01.img": {
      frame: {
        x: 888,
        y: 1205,
        w: 50,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 1,
        w: 50,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-potato-02.img": {
      frame: {
        x: 942,
        y: 1205,
        w: 50,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 1,
        w: 50,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-00.img": {
      frame: {
        x: 996,
        y: 1205,
        w: 48,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-02.img": {
      frame: {
        x: 1048,
        y: 1205,
        w: 48,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-inspiration-red.img": {
      frame: {
        x: 1100,
        y: 1205,
        w: 47,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 1,
        w: 47,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-inspiration-blue.img": {
      frame: {
        x: 1151,
        y: 1205,
        w: 47,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 1,
        w: 47,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ok.img": {
      frame: {
        x: 1202,
        y: 1205,
        w: 46,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 46,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ots38.img": {
      frame: {
        x: 1252,
        y: 1205,
        w: 44,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 44,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-flare-gun.img": {
      frame: {
        x: 1302,
        y: 2,
        w: 44,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 44,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-tank.img": {
      frame: {
        x: 1302,
        y: 68,
        w: 41,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 13,
        w: 41,
        h: 62
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-melee-bowie-vintage.img": {
      frame: {
        x: 1302,
        y: 134,
        w: 24,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 24,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bowie-frontier.img": {
      frame: {
        x: 1302,
        y: 200,
        w: 24,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 24,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bayonet-woodland.img": {
      frame: {
        x: 1302,
        y: 266,
        w: 22,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 1,
        w: 22,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bayonet-rugged.img": {
      frame: {
        x: 1302,
        y: 332,
        w: 22,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 1,
        w: 22,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-strobe-armed.img": {
      frame: {
        x: 2,
        y: 1271,
        w: 70,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 70,
        h: 61
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "proj-strobe-arming.img": {
      frame: {
        x: 76,
        y: 1271,
        w: 70,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 70,
        h: 61
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-weapon-mosin.img": {
      frame: {
        x: 150,
        y: 1271,
        w: 62,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 62,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flex.img": {
      frame: {
        x: 216,
        y: 1271,
        w: 58,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 58,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ghost-base.img": {
      frame: {
        x: 278,
        y: 1271,
        w: 56,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 56,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "acorn.img": {
      frame: {
        x: 338,
        y: 1271,
        w: 56,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-steelskin.img": {
      frame: {
        x: 1302,
        y: 398,
        w: 44,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 44,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "sleepy.img": {
      frame: {
        x: 398,
        y: 1271,
        w: 64,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-p30l-dual.img": {
      frame: {
        x: 466,
        y: 1271,
        w: 64,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-bugle.img": {
      frame: {
        x: 534,
        y: 1271,
        w: 64,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-shuriken.img": {
      frame: {
        x: 602,
        y: 1271,
        w: 62,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 62,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitWhite.img": {
      frame: {
        x: 668,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitSpetsnaz.img": {
      frame: {
        x: 733,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitWoodland.img": {
      frame: {
        x: 798,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitRed.img": {
      frame: {
        x: 863,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-outfit.img": {
      frame: {
        x: 928,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitParma.img": {
      frame: {
        x: 993,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitMod.img": {
      frame: {
        x: 1058,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitLumber.img": {
      frame: {
        x: 1123,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitKeyLime.img": {
      frame: {
        x: 1188,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitHeaven.img": {
      frame: {
        x: 1253,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitTurkey.img": {
      frame: {
        x: 1350,
        y: 2,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDev.img": {
      frame: {
        x: 1350,
        y: 66,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDesertCamo.img": {
      frame: {
        x: 1350,
        y: 130,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDarkShirt.img": {
      frame: {
        x: 1350,
        y: 194,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDarkGloves.img": {
      frame: {
        x: 1350,
        y: 258,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitCobaltShell.img": {
      frame: {
        x: 1350,
        y: 322,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitCarbonFiber.img": {
      frame: {
        x: 1350,
        y: 386,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitCamo.img": {
      frame: {
        x: 1350,
        y: 450,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitBase.img": {
      frame: {
        x: 1350,
        y: 514,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitWheat.img": {
      frame: {
        x: 1350,
        y: 578,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-01.img": {
      frame: {
        x: 1350,
        y: 642,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-blr.img": {
      frame: {
        x: 1350,
        y: 706,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitRoyalFortune.img": {
      frame: {
        x: 1350,
        y: 770,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitParmaPrestige.img": {
      frame: {
        x: 1350,
        y: 834,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gas.img": {
      frame: {
        x: 1350,
        y: 898,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-spark-02.img": {
      frame: {
        x: 1350,
        y: 962,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "part-spark-01.img": {
      frame: {
        x: 1350,
        y: 1026,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "chick.img": {
      frame: {
        x: 1350,
        y: 1090,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-boost.img": {
      frame: {
        x: 1350,
        y: 1154,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-garand.img": {
      frame: {
        x: 1350,
        y: 1218,
        w: 59,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 59,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-vector.img": {
      frame: {
        x: 2,
        y: 1336,
        w: 58,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 58,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-03.img": {
      frame: {
        x: 64,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pumpkin.img": {
      frame: {
        x: 124,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-deagle.img": {
      frame: {
        x: 184,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-sniper.img": {
      frame: {
        x: 244,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 14,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-weapon-p30l.img": {
      frame: {
        x: 304,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-final-red.img": {
      frame: {
        x: 362,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-bone-01.img": {
      frame: {
        x: 420,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-final-blue.img": {
      frame: {
        x: 478,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-spas12.img": {
      frame: {
        x: 536,
        y: 1336,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mp5.img": {
      frame: {
        x: 592,
        y: 1336,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "tap.img": {
      frame: {
        x: 648,
        y: 1336,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ot38.img": {
      frame: {
        x: 704,
        y: 1336,
        w: 48,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 2,
        w: 48,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-huntsman-burnished.img": {
      frame: {
        x: 1330,
        y: 134,
        w: 14,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 14,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-huntsman-rugged.img": {
      frame: {
        x: 1330,
        y: 200,
        w: 14,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 14,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "cattle.img": {
      frame: {
        x: 756,
        y: 1336,
        w: 62,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-blossom-04.img": {
      frame: {
        x: 822,
        y: 1336,
        w: 61,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 61,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-blossom-03.img": {
      frame: {
        x: 887,
        y: 1336,
        w: 61,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 61,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-broken-arrow.img": {
      frame: {
        x: 952,
        y: 1336,
        w: 59,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 59,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-small-arms.img": {
      frame: {
        x: 1015,
        y: 1336,
        w: 57,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 57,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-field-medic.img": {
      frame: {
        x: 1076,
        y: 1336,
        w: 52,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 4,
        w: 52,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-mirv.img": {
      frame: {
        x: 1302,
        y: 463,
        w: 43,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 3,
        w: 43,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-pan-black-side.img": {
      frame: {
        x: 1328,
        y: 266,
        w: 12,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 2,
        w: 12,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-chrysanthemum.img": {
      frame: {
        x: 1132,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-meteor.img": {
      frame: {
        x: 1200,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-caduceus.img": {
      frame: {
        x: 1268,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "link.img": {
      frame: {
        x: 1336,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-hydra.img": {
      frame: {
        x: 1415,
        y: 2,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-hatchet.img": {
      frame: {
        x: 1415,
        y: 64,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-storm.img": {
      frame: {
        x: 1415,
        y: 126,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-surviv.img": {
      frame: {
        x: 1415,
        y: 188,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-swine.img": {
      frame: {
        x: 1415,
        y: 250,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-egg.img": {
      frame: {
        x: 1415,
        y: 312,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-glock-dual.img": {
      frame: {
        x: 1415,
        y: 374,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-twins.img": {
      frame: {
        x: 1415,
        y: 436,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-crossing.img": {
      frame: {
        x: 1415,
        y: 498,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-conch.img": {
      frame: {
        x: 1415,
        y: 560,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-cloud.img": {
      frame: {
        x: 1415,
        y: 622,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scout.img": {
      frame: {
        x: 1415,
        y: 684,
        w: 62,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "danger.img": {
      frame: {
        x: 1415,
        y: 746,
        w: 62,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-model94.img": {
      frame: {
        x: 1415,
        y: 808,
        w: 62,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-gui.img": {
      frame: {
        x: 1415,
        y: 870,
        w: 60,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 60,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-emote.img": {
      frame: {
        x: 1415,
        y: 932,
        w: 60,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 60,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-50AE.img": {
      frame: {
        x: 1415,
        y: 994,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-02.img": {
      frame: {
        x: 1415,
        y: 1056,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-explosive.img": {
      frame: {
        x: 1415,
        y: 1118,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-box.img": {
      frame: {
        x: 1415,
        y: 1180,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-308sub.img": {
      frame: {
        x: 1415,
        y: 1242,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-flare.img": {
      frame: {
        x: 1415,
        y: 1304,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-45acp.img": {
      frame: {
        x: 2,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "santa-hat.img": {
      frame: {
        x: 64,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-9mm.img": {
      frame: {
        x: 126,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-762mm.img": {
      frame: {
        x: 188,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-556mm.img": {
      frame: {
        x: 250,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-12gauge.img": {
      frame: {
        x: 312,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-donut-01.img": {
      frame: {
        x: 374,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-assault.img": {
      frame: {
        x: 436,
        y: 1400,
        w: 57,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 31,
        y: 15,
        w: 57,
        h: 58
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-blossom-01.img": {
      frame: {
        x: 497,
        y: 1400,
        w: 55,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 3,
        w: 55,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-glock.img": {
      frame: {
        x: 624,
        y: 515,
        w: 48,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 3,
        w: 48,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pineapple.img": {
      frame: {
        x: 1302,
        y: 526,
        w: 38,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 0,
        w: 38,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-soda.img": {
      frame: {
        x: 1302,
        y: 588,
        w: 34,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 3,
        w: 34,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-player-icon.img": {
      frame: {
        x: 556,
        y: 1400,
        w: 60,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 60,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-blossom-02.img": {
      frame: {
        x: 620,
        y: 1400,
        w: 56,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-potato-01.img": {
      frame: {
        x: 680,
        y: 1400,
        w: 50,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 4,
        w: 50,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-potato-02.img": {
      frame: {
        x: 734,
        y: 1400,
        w: 50,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 4,
        w: 50,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-bonus-9mm.img": {
      frame: {
        x: 788,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-bonus-45.img": {
      frame: {
        x: 856,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-01.img": {
      frame: {
        x: 924,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-m9.img": {
      frame: {
        x: 992,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-bonus-assault.img": {
      frame: {
        x: 1060,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "hamburger.img": {
      frame: {
        x: 1128,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-9mm.img": {
      frame: {
        x: 1196,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-556.img": {
      frame: {
        x: 1264,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-12g.img": {
      frame: {
        x: 1332,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "hide.img": {
      frame: {
        x: 1400,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-762.img": {
      frame: {
        x: 1483,
        y: 2,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mp220.img": {
      frame: {
        x: 1483,
        y: 62,
        w: 60,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 60,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-chatty.img": {
      frame: {
        x: 1483,
        y: 122,
        w: 58,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 58,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-glasses-01.img": {
      frame: {
        x: 1483,
        y: 182,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-takedown.img": {
      frame: {
        x: 1483,
        y: 242,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "leek.img": {
      frame: {
        x: 1483,
        y: 302,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-nothing.img": {
      frame: {
        x: 1483,
        y: 362,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-size.img": {
      frame: {
        x: 1483,
        y: 422,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-snowball-01.img": {
      frame: {
        x: 1483,
        y: 482,
        w: 55,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-snowball-02.img": {
      frame: {
        x: 1483,
        y: 542,
        w: 55,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mac10.img": {
      frame: {
        x: 1483,
        y: 602,
        w: 54,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 54,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-flak-jacket.img": {
      frame: {
        x: 1483,
        y: 662,
        w: 54,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-airdrop.img": {
      frame: {
        x: 1483,
        y: 722,
        w: 40,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 3,
        w: 40,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-healer.img": {
      frame: {
        x: 1483,
        y: 782,
        w: 37,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 45,
        y: 16,
        w: 37,
        h: 56
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "turkey-animal.img": {
      frame: {
        x: 1483,
        y: 842,
        w: 64,
        h: 55
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 64,
        h: 55
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-airstrike.img": {
      frame: {
        x: 1483,
        y: 901,
        w: 26,
        h: 55
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 5,
        w: 26,
        h: 55
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-healthkit.img": {
      frame: {
        x: 1483,
        y: 960,
        w: 62,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 5,
        w: 62,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-helmet-01.img": {
      frame: {
        x: 1483,
        y: 1018,
        w: 60,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 60,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-martyrdom.img": {
      frame: {
        x: 1483,
        y: 1076,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "trunk.img": {
      frame: {
        x: 1483,
        y: 1134,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-groza.img": {
      frame: {
        x: 1483,
        y: 1192,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "eggplant.img": {
      frame: {
        x: 1483,
        y: 1250,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-help.img": {
      frame: {
        x: 1483,
        y: 1308,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crab.img": {
      frame: {
        x: 1483,
        y: 1366,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "movement.img": {
      frame: {
        x: 2,
        y: 1462,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ribbon-red.img": {
      frame: {
        x: 60,
        y: 1462,
        w: 52,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 10,
        w: 52,
        h: 54
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "ribbon-blue.img": {
      frame: {
        x: 116,
        y: 1462,
        w: 52,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 10,
        w: 52,
        h: 54
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "question.img": {
      frame: {
        x: 1302,
        y: 650,
        w: 38,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 5,
        w: 38,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-demo.img": {
      frame: {
        x: 1302,
        y: 708,
        w: 38,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 17,
        w: 38,
        h: 54
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "gun-ots38-01.img": {
      frame: {
        x: 1524,
        y: 782,
        w: 22,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 63,
        w: 22,
        h: 54
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "loot-throwable-frag.img": {
      frame: {
        x: 172,
        y: 1462,
        w: 54,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-potato.img": {
      frame: {
        x: 230,
        y: 1462,
        w: 50,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 50,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-scavenger.img": {
      frame: {
        x: 284,
        y: 1462,
        w: 58,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 58,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "potato.img": {
      frame: {
        x: 346,
        y: 1462,
        w: 54,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 6,
        w: 54,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-compass-01.img": {
      frame: {
        x: 404,
        y: 1462,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "baguette.img": {
      frame: {
        x: 460,
        y: 1462,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "copy.img": {
      frame: {
        x: 516,
        y: 1462,
        w: 48,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 48,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-short-01.img": {
      frame: {
        x: 1527,
        y: 722,
        w: 18,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 52
      },
      sourceSize: {
        w: 16,
        h: 50
      }
    },
    "face-dab.img": {
      frame: {
        x: 568,
        y: 1462,
        w: 72,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 11,
        w: 72,
        h: 51
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-endless-ammo.img": {
      frame: {
        x: 644,
        y: 1462,
        w: 54,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 6,
        w: 54,
        h: 51
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "minimize.img": {
      frame: {
        x: 702,
        y: 1462,
        w: 51,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 51,
        h: 51
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "whale.img": {
      frame: {
        x: 757,
        y: 1462,
        w: 62,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 7,
        w: 62,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-pumpkin-01.img": {
      frame: {
        x: 1350,
        y: 1282,
        w: 56,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 56,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-tree-climbing.img": {
      frame: {
        x: 823,
        y: 1462,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "fish.img": {
      frame: {
        x: 877,
        y: 1462,
        w: 64,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 64,
        h: 49
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair.img": {
      frame: {
        x: 945,
        y: 1462,
        w: 49,
        h: 49
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 49,
        h: 49
      },
      sourceSize: {
        w: 49,
        h: 49
      }
    },
    "face-headshot.img": {
      frame: {
        x: 998,
        y: 1462,
        w: 64,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 64,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-super.img": {
      frame: {
        x: 1066,
        y: 1462,
        w: 64,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 64,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "forest.img": {
      frame: {
        x: 1134,
        y: 1462,
        w: 64,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 64,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-pill.img": {
      frame: {
        x: 1202,
        y: 1462,
        w: 62,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 8,
        w: 62,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "coconut.img": {
      frame: {
        x: 1268,
        y: 1462,
        w: 58,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 8,
        w: 58,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "teabag.img": {
      frame: {
        x: 1330,
        y: 1462,
        w: 56,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 56,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-strobe.img": {
      frame: {
        x: 1390,
        y: 1462,
        w: 55,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 10,
        w: 55,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull-leader.img": {
      frame: {
        x: 1449,
        y: 1462,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-airdrop-01x.img": {
      frame: {
        x: 1551,
        y: 2,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-airdrop-01.img": {
      frame: {
        x: 1551,
        y: 54,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "loot-melee-pan-black.img": {
      frame: {
        x: 2,
        y: 1520,
        w: 62,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 9,
        w: 62,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pilgrim-hat.img": {
      frame: {
        x: 68,
        y: 1520,
        w: 62,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 9,
        w: 62,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-helmet-03.img": {
      frame: {
        x: 134,
        y: 1520,
        w: 60,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 9,
        w: 60,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-woods-king.img": {
      frame: {
        x: 198,
        y: 1520,
        w: 50,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 9,
        w: 50,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-flare-01.img": {
      frame: {
        x: 1551,
        y: 106,
        w: 46,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 46,
        h: 46
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "loot-throwable-snowball.img": {
      frame: {
        x: 1551,
        y: 156,
        w: 45,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 45,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "cog.img": {
      frame: {
        x: 1551,
        y: 206,
        w: 44,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 9,
        w: 44,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "eye.img": {
      frame: {
        x: 1106,
        y: 1022,
        w: 64,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 64,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-drain.img": {
      frame: {
        x: 1038,
        y: 954,
        w: 62,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 10,
        w: 62,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "chicken.img": {
      frame: {
        x: 1174,
        y: 1090,
        w: 56,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 10,
        w: 56,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-snow-01.img": {
      frame: {
        x: 252,
        y: 1520,
        w: 80,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 43
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-mash-01.img": {
      frame: {
        x: 336,
        y: 1520,
        w: 80,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 43
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-helmet-02.img": {
      frame: {
        x: 970,
        y: 886,
        w: 62,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 11,
        w: 62,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "audio-off.img": {
      frame: {
        x: 902,
        y: 818,
        w: 49,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 49,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "audio-on.img": {
      frame: {
        x: 834,
        y: 750,
        w: 49,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 49,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-fists.img": {
      frame: {
        x: 1551,
        y: 256,
        w: 40,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 11,
        w: 40,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-unlock.img": {
      frame: {
        x: 1551,
        y: 302,
        w: 34,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 11,
        w: 34,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-hook-silver.img": {
      frame: {
        x: 1551,
        y: 348,
        w: 24,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 11,
        w: 24,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-mash-02.img": {
      frame: {
        x: 420,
        y: 1520,
        w: 74,
        h: 41
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 74,
        h: 41
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-snow-02.img": {
      frame: {
        x: 498,
        y: 1520,
        w: 74,
        h: 41
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 74,
        h: 41
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-fireaxe.img": {
      frame: {
        x: 576,
        y: 1520,
        w: 78,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 78,
        h: 40
      },
      sourceSize: {
        w: 76,
        h: 38
      }
    },
    "loot-perk-scavenger_adv.img": {
      frame: {
        x: 681,
        y: 608,
        w: 62,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 12,
        w: 62,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gg.img": {
      frame: {
        x: 658,
        y: 1520,
        w: 60,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 12,
        w: 60,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-mirv-mini-02.img": {
      frame: {
        x: 1551,
        y: 394,
        w: 46,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 4,
        w: 46,
        h: 40
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "proj-mirv-mini-01.img": {
      frame: {
        x: 1551,
        y: 438,
        w: 46,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 4,
        w: 46,
        h: 40
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "gun-dp28-top-01.img": {
      frame: {
        x: 1551,
        y: 482,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 40,
        h: 40
      }
    },
    "player-hands-02.img": {
      frame: {
        x: 1551,
        y: 526,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "player-hands-01.img": {
      frame: {
        x: 1551,
        y: 570,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "quit.img": {
      frame: {
        x: 1551,
        y: 614,
        w: 38,
        h: 39
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 12,
        w: 38,
        h: 39
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-mash-03.img": {
      frame: {
        x: 722,
        y: 1520,
        w: 76,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 76,
        h: 38
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-snow-03.img": {
      frame: {
        x: 802,
        y: 1520,
        w: 76,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 76,
        h: 38
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-patch-01.img": {
      frame: {
        x: 882,
        y: 1520,
        w: 62,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 62,
        h: 38
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-smoke-01.img": {
      frame: {
        x: 1551,
        y: 657,
        w: 38,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 38,
        h: 38
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-patch-red.img": {
      frame: {
        x: 948,
        y: 1520,
        w: 60,
        h: 37
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 21,
        w: 60,
        h: 37
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-perk-self-revive.img": {
      frame: {
        x: 1012,
        y: 1520,
        w: 64,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 64,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "timer-background.img": {
      frame: {
        x: 1551,
        y: 699,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "resume.img": {
      frame: {
        x: 1551,
        y: 739,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 14,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-snow-01.img": {
      frame: {
        x: 1551,
        y: 779,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "close.img": {
      frame: {
        x: 1551,
        y: 819,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "checked.img": {
      frame: {
        x: 1551,
        y: 859,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-cloth-01.img": {
      frame: {
        x: 1551,
        y: 899,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "gun-potato-smg-top-01.img": {
      frame: {
        x: 1551,
        y: 939,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 40,
        h: 40
      }
    },
    "player-map-outer.img": {
      frame: {
        x: 1551,
        y: 979,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-map-inner.img": {
      frame: {
        x: 1551,
        y: 1019,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "submit.img": {
      frame: {
        x: 1551,
        y: 1059,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "ping-indicator.img": {
      frame: {
        x: 1551,
        y: 1099,
        w: 46,
        h: 35
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 29,
        w: 46,
        h: 35
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "keyboard.img": {
      frame: {
        x: 1483,
        y: 1424,
        w: 56,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 15,
        w: 56,
        h: 34
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-pulse-01.img": {
      frame: {
        x: 1551,
        y: 1138,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-frag-burst-02.img": {
      frame: {
        x: 1551,
        y: 1176,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-potato-01.img": {
      frame: {
        x: 1551,
        y: 1214,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-strobe-01.img": {
      frame: {
        x: 1551,
        y: 1252,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-frag-burst-01.img": {
      frame: {
        x: 1551,
        y: 1290,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-map-downed.img": {
      frame: {
        x: 1551,
        y: 1328,
        w: 36,
        h: 33
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 36,
        h: 33
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "loot-melee-stonehammer.img": {
      frame: {
        x: 1080,
        y: 1520,
        w: 76,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 32
      },
      sourceSize: {
        w: 74,
        h: 30
      }
    },
    "player-patch-02.img": {
      frame: {
        x: 1160,
        y: 1520,
        w: 62,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 62,
        h: 32
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-patch-blue.img": {
      frame: {
        x: 1226,
        y: 1520,
        w: 62,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 24,
        w: 62,
        h: 32
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-knuckles-heroic.img": {
      frame: {
        x: 1551,
        y: 1365,
        w: 48,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 16,
        w: 48,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-knuckles-rusted.img": {
      frame: {
        x: 1551,
        y: 1401,
        w: 48,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 16,
        w: 48,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-pin-01.img": {
      frame: {
        x: 1551,
        y: 1437,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair001.img": {
      frame: {
        x: 1551,
        y: 1473,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair027.img": {
      frame: {
        x: 1513,
        y: 901,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair007.img": {
      frame: {
        x: 1302,
        y: 766,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair010.img": {
      frame: {
        x: 1302,
        y: 802,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "globe.img": {
      frame: {
        x: 1302,
        y: 838,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair005.img": {
      frame: {
        x: 1302,
        y: 874,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair064.img": {
      frame: {
        x: 1302,
        y: 910,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair109.img": {
      frame: {
        x: 1302,
        y: 946,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "proj-frag-pin-part.img": {
      frame: {
        x: 1302,
        y: 982,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair080.img": {
      frame: {
        x: 1302,
        y: 1018,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair094.img": {
      frame: {
        x: 1302,
        y: 1054,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair086.img": {
      frame: {
        x: 1302,
        y: 1090,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair124.img": {
      frame: {
        x: 1302,
        y: 1126,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "skull-outlined.img": {
      frame: {
        x: 1302,
        y: 1162,
        w: 30,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 30,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "unlock.img": {
      frame: {
        x: 1302,
        y: 1198,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "lock.img": {
      frame: {
        x: 1302,
        y: 1234,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "skull-team.img": {
      frame: {
        x: 1199,
        y: 1022,
        w: 27,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 27,
        h: 31
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "dc.img": {
      frame: {
        x: 1415,
        y: 1366,
        w: 30,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 30,
        h: 30
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "down.img": {
      frame: {
        x: 1449,
        y: 1366,
        w: 30,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 30,
        h: 30
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "loot-melee-woodaxe-bloody.img": {
      frame: {
        x: 1292,
        y: 1520,
        w: 76,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 29
      },
      sourceSize: {
        w: 74,
        h: 27
      }
    },
    "loot-melee-woodaxe.img": {
      frame: {
        x: 1372,
        y: 1520,
        w: 76,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 29
      },
      sourceSize: {
        w: 74,
        h: 27
      }
    },
    "ping-part-quarter-highlight.img": {
      frame: {
        x: 1452,
        y: 1520,
        w: 48,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 28
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-quarter.img": {
      frame: {
        x: 1504,
        y: 1520,
        w: 47,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 47,
        h: 28
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-bullet-trail-03.img": {
      frame: {
        x: 1579,
        y: 348,
        w: 18,
        h: 28
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 28
      },
      sourceSize: {
        w: 18,
        h: 28
      }
    },
    "crosshair177.img": {
      frame: {
        x: 1132,
        y: 1070,
        w: 32,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 26
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crown.img": {
      frame: {
        x: 1199,
        y: 1057,
        w: 30,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 30,
        h: 26
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "ping-part-eighth.img": {
      frame: {
        x: 1132,
        y: 1100,
        w: 28,
        h: 25
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 28,
        h: 25
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-eighth-highlight.img": {
      frame: {
        x: 1189,
        y: 1138,
        w: 28,
        h: 25
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 28,
        h: 25
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-karambit-drowned.img": {
      frame: {
        x: 2,
        y: 1570,
        w: 54,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 54,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-karambit-prismatic.img": {
      frame: {
        x: 60,
        y: 1570,
        w: 54,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 54,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-karambit-rugged.img": {
      frame: {
        x: 118,
        y: 1570,
        w: 54,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 54,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-pkp-bot-01.img": {
      frame: {
        x: 1189,
        y: 1167,
        w: 40,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 24
      },
      sourceSize: {
        w: 38,
        h: 22
      }
    },
    "gun-m249-bot-01.img": {
      frame: {
        x: 1501,
        y: 1462,
        w: 40,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 24
      },
      sourceSize: {
        w: 38,
        h: 22
      }
    },
    "crosshair158.img": {
      frame: {
        x: 1555,
        y: 1520,
        w: 32,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 32,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "part-frag-lever-01.img": {
      frame: {
        x: 1318,
        y: 1271,
        w: 28,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 20,
        w: 28,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair101.img": {
      frame: {
        x: 728,
        y: 654,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair102.img": {
      frame: {
        x: 728,
        y: 682,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "pumpkin-play.img": {
      frame: {
        x: 597,
        y: 495,
        w: 22,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 22,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "loot-melee-naginata.img": {
      frame: {
        x: 176,
        y: 1570,
        w: 175,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 175,
        h: 22
      },
      sourceSize: {
        w: 175,
        h: 27
      }
    },
    "hatchet.img": {
      frame: {
        x: 1318,
        y: 1299,
        w: 24,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 24,
        h: 22
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "crosshair184.img": {
      frame: {
        x: 597,
        y: 523,
        w: 22,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 22,
        h: 22
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair045.img": {
      frame: {
        x: 355,
        y: 1570,
        w: 22,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 22,
        h: 22
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair040.img": {
      frame: {
        x: 381,
        y: 1570,
        w: 22,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 22,
        h: 22
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "player-feet-02.img": {
      frame: {
        x: 1328,
        y: 332,
        w: 17,
        h: 21
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: -1,
        w: 17,
        h: 21
      },
      sourceSize: {
        w: 19,
        h: 19
      }
    },
    "player-feet-01.img": {
      frame: {
        x: 1328,
        y: 357,
        w: 17,
        h: 21
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: -1,
        w: 17,
        h: 21
      },
      sourceSize: {
        w: 19,
        h: 19
      }
    },
    "loot-melee-katana-rusted.img": {
      frame: {
        x: 407,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "loot-melee-katana-orchid.img": {
      frame: {
        x: 526,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "loot-melee-katana-demo.img": {
      frame: {
        x: 645,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "loot-melee-katana.img": {
      frame: {
        x: 764,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "crosshair181.img": {
      frame: {
        x: 733,
        y: 382,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair173.img": {
      frame: {
        x: 733,
        y: 406,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair038.img": {
      frame: {
        x: 733,
        y: 430,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair000.img": {
      frame: {
        x: 597,
        y: 549,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "gun-qbb97-bot-01.img": {
      frame: {
        x: 1513,
        y: 937,
        w: 34,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 34,
        h: 18
      },
      sourceSize: {
        w: 32,
        h: 16
      }
    },
    "ping-part-circle.img": {
      frame: {
        x: 812,
        y: 362,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 23,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-burst-03.img": {
      frame: {
        x: 812,
        y: 384,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 18,
        h: 18
      }
    },
    "ping-part-circle-highlight.img": {
      frame: {
        x: 812,
        y: 406,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 23,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-bullet-trail-02.img": {
      frame: {
        x: 812,
        y: 434,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 18,
        h: 18
      }
    },
    "dot.img": {
      frame: {
        x: 812,
        y: 456,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 18,
        h: 18
      }
    },
    "crosshair125.img": {
      frame: {
        x: 1214,
        y: 886,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "ping-part-circle-auto-highlight.img": {
      frame: {
        x: 1214,
        y: 906,
        w: 15,
        h: 15
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 15
      },
      sourceSize: {
        w: 15,
        h: 15
      }
    },
    "ping-part-circle-auto.img": {
      frame: {
        x: 1332,
        y: 1198,
        w: 14,
        h: 14
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 14,
        h: 14
      },
      sourceSize: {
        w: 14,
        h: 14
      }
    },
    "ping-part-circle-auto-outer.img": {
      frame: {
        x: 1332,
        y: 1216,
        w: 14,
        h: 14
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 14,
        h: 14
      },
      sourceSize: {
        w: 14,
        h: 14
      }
    },
    "loot-xp-book-05.img": {
      frame: {
        x: 608,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    }
  }
}];
let Gs = [{
  meta: {
    image: "shared-0-50-aa0212d5.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-building-police-floor-01.img": {
      frame: {
        x: 722,
        y: 2,
        w: 1056,
        h: 784
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1056,
        h: 784
      },
      sourceSize: {
        w: 1056,
        h: 784
      }
    },
    "map-building-bathhouse-basement-01e.img": {
      frame: {
        x: 2,
        y: 2,
        w: 716,
        h: 796
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 716,
        h: 796
      },
      sourceSize: {
        w: 716,
        h: 796
      }
    },
    "map-building-mansion-floor-01b.img": {
      frame: {
        x: 2,
        y: 802,
        w: 913,
        h: 609
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 913,
        h: 609
      },
      sourceSize: {
        w: 913,
        h: 609
      }
    },
    "map-building-barn-floor-01.img": {
      frame: {
        x: 919,
        y: 802,
        w: 800,
        h: 544
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 544
      },
      sourceSize: {
        w: 800,
        h: 544
      }
    },
    "map-building-police-ceiling-02.img": {
      frame: {
        x: 2,
        y: 1415,
        w: 265,
        h: 541
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 265,
        h: 541
      },
      sourceSize: {
        w: 265,
        h: 541
      }
    },
    "map-building-cabin-floor.img": {
      frame: {
        x: 271,
        y: 1415,
        w: 608,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 608,
        h: 496
      },
      sourceSize: {
        w: 608,
        h: 496
      }
    },
    "map-building-bathhouse-basement-01b.img": {
      frame: {
        x: 883,
        y: 1415,
        w: 652,
        h: 460
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 652,
        h: 460
      },
      sourceSize: {
        w: 652,
        h: 460
      }
    },
    "map-building-hut-floor-02.img": {
      frame: {
        x: 1539,
        y: 1415,
        w: 68,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 68,
        h: 384
      },
      sourceSize: {
        w: 68,
        h: 384
      }
    },
    "map-building-container-open-floor.img": {
      frame: {
        x: 1611,
        y: 1415,
        w: 90,
        h: 345
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 345
      },
      sourceSize: {
        w: 90,
        h: 346
      }
    },
    "map-building-dock-floor-01b.img": {
      frame: {
        x: 1782,
        y: 2,
        w: 81,
        h: 332
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 81,
        h: 332
      },
      sourceSize: {
        w: 81,
        h: 332
      }
    },
    "map-wall-18.img": {
      frame: {
        x: 1782,
        y: 338,
        w: 16,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 288
      },
      sourceSize: {
        w: 16,
        h: 288
      }
    },
    "map-building-container-floor-01.img": {
      frame: {
        x: 1867,
        y: 2,
        w: 90,
        h: 267
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 267
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-club-bar-01.img": {
      frame: {
        x: 1867,
        y: 273,
        w: 27,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 240
      },
      sourceSize: {
        w: 27,
        h: 240
      }
    },
    "map-wall-14-rounded.img": {
      frame: {
        x: 1898,
        y: 273,
        w: 16,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 224
      },
      sourceSize: {
        w: 16,
        h: 224
      }
    },
    "map-wall-14.img": {
      frame: {
        x: 1918,
        y: 273,
        w: 16,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 224
      },
      sourceSize: {
        w: 16,
        h: 224
      }
    },
    "map-wall-13-rounded.img": {
      frame: {
        x: 1938,
        y: 273,
        w: 16,
        h: 208
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 208
      },
      sourceSize: {
        w: 16,
        h: 208
      }
    },
    "map-wall-13.img": {
      frame: {
        x: 1867,
        y: 517,
        w: 16,
        h: 208
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 208
      },
      sourceSize: {
        w: 16,
        h: 208
      }
    },
    "map-building-container-open-ceiling-01.img": {
      frame: {
        x: 1867,
        y: 729,
        w: 90,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 76,
        w: 90,
        h: 194
      },
      sourceSize: {
        w: 90,
        h: 346
      }
    },
    "map-building-container-ceiling-03.img": {
      frame: {
        x: 1867,
        y: 927,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-building-container-ceiling-02.img": {
      frame: {
        x: 1867,
        y: 1123,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-building-container-ceiling-01.img": {
      frame: {
        x: 1867,
        y: 1319,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-wall-glass-12-2.img": {
      frame: {
        x: 1887,
        y: 517,
        w: 32,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 192
      },
      sourceSize: {
        w: 32,
        h: 192
      }
    },
    "map-wall-glass-12.img": {
      frame: {
        x: 1923,
        y: 517,
        w: 16,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 192
      },
      sourceSize: {
        w: 16,
        h: 192
      }
    },
    "map-wall-12.img": {
      frame: {
        x: 1867,
        y: 1515,
        w: 16,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 192
      },
      sourceSize: {
        w: 16,
        h: 192
      }
    },
    "map-wall-12-rounded.img": {
      frame: {
        x: 1887,
        y: 1515,
        w: 16,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 192
      },
      sourceSize: {
        w: 16,
        h: 192
      }
    },
    "map-building-container-ceiling-05.img": {
      frame: {
        x: 1867,
        y: 1711,
        w: 90,
        h: 191
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 191
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-decal-club-02.img": {
      frame: {
        x: 1802,
        y: 338,
        w: 52,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 180
      },
      sourceSize: {
        w: 52,
        h: 180
      }
    },
    "map-pipes-04.img": {
      frame: {
        x: 1907,
        y: 1515,
        w: 44,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 44,
        h: 176
      },
      sourceSize: {
        w: 44,
        h: 176
      }
    },
    "map-wall-11.img": {
      frame: {
        x: 1782,
        y: 630,
        w: 16,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 176
      },
      sourceSize: {
        w: 16,
        h: 176
      }
    },
    "map-wall-11-rounded.img": {
      frame: {
        x: 1802,
        y: 630,
        w: 16,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 176
      },
      sourceSize: {
        w: 16,
        h: 176
      }
    },
    "map-saloon-bar-01.img": {
      frame: {
        x: 1822,
        y: 630,
        w: 27,
        h: 162
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 162
      },
      sourceSize: {
        w: 27,
        h: 162
      }
    },
    "map-wall-glass-10.img": {
      frame: {
        x: 1782,
        y: 810,
        w: 16,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 160
      },
      sourceSize: {
        w: 16,
        h: 160
      }
    },
    "map-wall-10-rounded.img": {
      frame: {
        x: 1802,
        y: 810,
        w: 16,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 160
      },
      sourceSize: {
        w: 16,
        h: 160
      }
    },
    "map-wall-10.img": {
      frame: {
        x: 1822,
        y: 810,
        w: 16,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 160
      },
      sourceSize: {
        w: 16,
        h: 160
      }
    },
    "map-pipes-01.img": {
      frame: {
        x: 1782,
        y: 974,
        w: 45,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 144
      },
      sourceSize: {
        w: 45,
        h: 144
      }
    },
    "map-wall-09-rounded.img": {
      frame: {
        x: 1842,
        y: 810,
        w: 16,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 144
      },
      sourceSize: {
        w: 16,
        h: 144
      }
    },
    "map-wall-glass-9.img": {
      frame: {
        x: 1831,
        y: 974,
        w: 16,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 144
      },
      sourceSize: {
        w: 16,
        h: 144
      }
    },
    "map-wall-09.img": {
      frame: {
        x: 1782,
        y: 1122,
        w: 16,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 144
      },
      sourceSize: {
        w: 16,
        h: 144
      }
    },
    "map-wall-08-rounded.img": {
      frame: {
        x: 1802,
        y: 1122,
        w: 16,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 128
      },
      sourceSize: {
        w: 16,
        h: 128
      }
    },
    "map-wall-shack-right.img": {
      frame: {
        x: 1943,
        y: 517,
        w: 12,
        h: 121
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 121
      },
      sourceSize: {
        w: 12,
        h: 121
      }
    },
    "map-door-02.img": {
      frame: {
        x: 1822,
        y: 1122,
        w: 40,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 112
      },
      sourceSize: {
        w: 40,
        h: 112
      }
    },
    "map-wall-07.img": {
      frame: {
        x: 1782,
        y: 1270,
        w: 16,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 112
      },
      sourceSize: {
        w: 16,
        h: 112
      }
    },
    "map-wall-07-rounded.img": {
      frame: {
        x: 1802,
        y: 1270,
        w: 16,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 112
      },
      sourceSize: {
        w: 16,
        h: 112
      }
    },
    "map-wall-shack-left.img": {
      frame: {
        x: 1851,
        y: 974,
        w: 12,
        h: 111
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 111
      },
      sourceSize: {
        w: 12,
        h: 111
      }
    },
    "map-bed-01.img": {
      frame: {
        x: 1782,
        y: 1386,
        w: 48,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 108
      },
      sourceSize: {
        w: 48,
        h: 108
      }
    },
    "map-wall-outhouse-side.img": {
      frame: {
        x: 1802,
        y: 522,
        w: 12,
        h: 99
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 99
      },
      sourceSize: {
        w: 12,
        h: 99
      }
    },
    "map-building-barn-basement-ceiling-02.img": {
      frame: {
        x: 1961,
        y: 2,
        w: 82,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 82,
        h: 97
      },
      sourceSize: {
        w: 82,
        h: 104
      }
    },
    "map-pipes-05.img": {
      frame: {
        x: 1961,
        y: 103,
        w: 45,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 96
      },
      sourceSize: {
        w: 45,
        h: 96
      }
    },
    "map-wall-06-rounded.img": {
      frame: {
        x: 2010,
        y: 103,
        w: 16,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 96
      },
      sourceSize: {
        w: 16,
        h: 96
      }
    },
    "map-wall-06.img": {
      frame: {
        x: 1961,
        y: 203,
        w: 16,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 96
      },
      sourceSize: {
        w: 16,
        h: 96
      }
    },
    "proj-wedge-01.img": {
      frame: {
        x: 1981,
        y: 203,
        w: 31,
        h: 89
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 31,
        h: 89
      },
      sourceSize: {
        w: 32,
        h: 90
      }
    },
    "part-wedge-01.img": {
      frame: {
        x: 1961,
        y: 303,
        w: 31,
        h: 89
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 31,
        h: 89
      },
      sourceSize: {
        w: 32,
        h: 90
      }
    },
    "map-building-club-vault-ceiling.img": {
      frame: {
        x: 1961,
        y: 396,
        w: 80,
        h: 88
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 88
      },
      sourceSize: {
        w: 80,
        h: 88
      }
    },
    "role-assault.img": {
      frame: {
        x: 1961,
        y: 488,
        w: 68,
        h: 87
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 87
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "map-snow-07.img": {
      frame: {
        x: 2,
        y: 1960,
        w: 250,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 5,
        w: 250,
        h: 86
      },
      sourceSize: {
        w: 256,
        h: 96
      }
    },
    "map-pipes-02.img": {
      frame: {
        x: 256,
        y: 1960,
        w: 119,
        h: 86
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 119,
        h: 86
      },
      sourceSize: {
        w: 119,
        h: 86
      }
    },
    "role-tank.img": {
      frame: {
        x: 1961,
        y: 579,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-demo.img": {
      frame: {
        x: 1961,
        y: 668,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-sniper.img": {
      frame: {
        x: 1961,
        y: 757,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-healer.img": {
      frame: {
        x: 1961,
        y: 846,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-scout.img": {
      frame: {
        x: 1961,
        y: 935,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "map-stove-01.img": {
      frame: {
        x: 379,
        y: 1960,
        w: 108,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 108,
        h: 84
      },
      sourceSize: {
        w: 112,
        h: 88
      }
    },
    "map-bed-res-02.img": {
      frame: {
        x: 1996,
        y: 303,
        w: 47,
        h: 83
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 6,
        w: 47,
        h: 83
      },
      sourceSize: {
        w: 48,
        h: 96
      }
    },
    "map-bed-res-01.img": {
      frame: {
        x: 1961,
        y: 1024,
        w: 47,
        h: 83
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 6,
        w: 47,
        h: 83
      },
      sourceSize: {
        w: 48,
        h: 96
      }
    },
    "map-crate-04.img": {
      frame: {
        x: 1961,
        y: 1111,
        w: 82,
        h: 82
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 82,
        h: 82
      },
      sourceSize: {
        w: 82,
        h: 82
      }
    },
    "map-building-dock-floor-01a.img": {
      frame: {
        x: 1961,
        y: 1197,
        w: 80,
        h: 81
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 81
      },
      sourceSize: {
        w: 80,
        h: 81
      }
    },
    "map-table-02.img": {
      frame: {
        x: 491,
        y: 1960,
        w: 144,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 80
      }
    },
    "map-table-03.img": {
      frame: {
        x: 1961,
        y: 1282,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-01.img": {
      frame: {
        x: 1961,
        y: 1366,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-02.img": {
      frame: {
        x: 1961,
        y: 1450,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-wall-04-stone.img": {
      frame: {
        x: 2016,
        y: 203,
        w: 20,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 20,
        h: 80
      },
      sourceSize: {
        w: 20,
        h: 80
      }
    },
    "map-wall-04-cobalt.img": {
      frame: {
        x: 2012,
        y: 1024,
        w: 20,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 20,
        h: 80
      },
      sourceSize: {
        w: 20,
        h: 80
      }
    },
    "map-wall-05-rounded.img": {
      frame: {
        x: 1961,
        y: 1534,
        w: 16,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 80
      },
      sourceSize: {
        w: 16,
        h: 80
      }
    },
    "map-wall-05.img": {
      frame: {
        x: 1981,
        y: 1534,
        w: 16,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 80
      },
      sourceSize: {
        w: 16,
        h: 80
      }
    },
    "map-wheel-01.img": {
      frame: {
        x: 639,
        y: 1960,
        w: 156,
        h: 78
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 78
      },
      sourceSize: {
        w: 156,
        h: 78
      }
    },
    "map-crate-res-03.img": {
      frame: {
        x: 799,
        y: 1960,
        w: 108,
        h: 78
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 78
      },
      sourceSize: {
        w: 108,
        h: 78
      }
    },
    "map-wheel-03.img": {
      frame: {
        x: 911,
        y: 1960,
        w: 156,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 76
      },
      sourceSize: {
        w: 156,
        h: 78
      }
    },
    "map-wheel-02.img": {
      frame: {
        x: 1071,
        y: 1960,
        w: 151,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 151,
        h: 76
      },
      sourceSize: {
        w: 156,
        h: 78
      }
    },
    "map-sandbags-01.img": {
      frame: {
        x: 1226,
        y: 1960,
        w: 128,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 74
      },
      sourceSize: {
        w: 128,
        h: 74
      }
    },
    "map-crate-11.img": {
      frame: {
        x: 1961,
        y: 1618,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-crate-10.img": {
      frame: {
        x: 1961,
        y: 1696,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-sandbags-02.img": {
      frame: {
        x: 1961,
        y: 1774,
        w: 60,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 60,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "pass-unlock-type-bg.img": {
      frame: {
        x: 1961,
        y: 1852,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "pass-unlock-bg.img": {
      frame: {
        x: 1782,
        y: 1498,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "loot-circle-outer-06.img": {
      frame: {
        x: 1782,
        y: 1575,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "map-building-barn-ceiling-02.img": {
      frame: {
        x: 1539,
        y: 1803,
        w: 208,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 208,
        h: 72
      },
      sourceSize: {
        w: 208,
        h: 72
      }
    },
    "map-crate-14.img": {
      frame: {
        x: 1782,
        y: 1652,
        w: 78,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 72
      },
      sourceSize: {
        w: 78,
        h: 72
      }
    },
    "map-crate-14a.img": {
      frame: {
        x: 1782,
        y: 1728,
        w: 78,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 72
      },
      sourceSize: {
        w: 78,
        h: 72
      }
    },
    "map-stone-05.img": {
      frame: {
        x: 1782,
        y: 1804,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-09.img": {
      frame: {
        x: 1782,
        y: 1880,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02sv.img": {
      frame: {
        x: 1705,
        y: 1415,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-08.img": {
      frame: {
        x: 1705,
        y: 1491,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-barrel-02.img": {
      frame: {
        x: 1705,
        y: 1567,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-07.img": {
      frame: {
        x: 1705,
        y: 1643,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-barrel-01.img": {
      frame: {
        x: 1358,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-01.img": {
      frame: {
        x: 1434,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02.img": {
      frame: {
        x: 1510,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-stone-01.img": {
      frame: {
        x: 1586,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-wall-outhouse-bot.img": {
      frame: {
        x: 1898,
        y: 501,
        w: 36,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 12
      },
      sourceSize: {
        w: 36,
        h: 12
      }
    },
    "map-stone-04.img": {
      frame: {
        x: 1738,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-07.img": {
      frame: {
        x: 1814,
        y: 1960,
        w: 71,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 71,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-outhouse-res.img": {
      frame: {
        x: 1889,
        y: 1960,
        w: 78,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 61,
        y: 19,
        w: 78,
        h: 70
      },
      sourceSize: {
        w: 200,
        h: 156
      }
    },
    "map-table-res.img": {
      frame: {
        x: 1971,
        y: 1960,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-door-slot-02.img": {
      frame: {
        x: 2001,
        y: 1534,
        w: 19,
        h: 68
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 68
      },
      sourceSize: {
        w: 19,
        h: 68
      }
    },
    "map-door-slot-01.img": {
      frame: {
        x: 2024,
        y: 1534,
        w: 19,
        h: 67
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 67
      },
      sourceSize: {
        w: 19,
        h: 67
      }
    },
    "player-helmet-marksman.img": {
      frame: {
        x: 1723,
        y: 802,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-note-02.img": {
      frame: {
        x: 1723,
        y: 872,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: -1,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-note-01.img": {
      frame: {
        x: 1723,
        y: 942,
        w: 48,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: -1,
        w: 48,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-02.img": {
      frame: {
        x: 1723,
        y: 1012,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-01.img": {
      frame: {
        x: 1723,
        y: 1080,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-decal-oil-01.img": {
      frame: {
        x: 1723,
        y: 1148,
        w: 46,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 46,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-door-04.img": {
      frame: {
        x: 1818,
        y: 522,
        w: 27,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 64
      },
      sourceSize: {
        w: 27,
        h: 64
      }
    },
    "map-wall-04.img": {
      frame: {
        x: 2025,
        y: 1774,
        w: 16,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 64
      },
      sourceSize: {
        w: 16,
        h: 64
      }
    },
    "map-wall-04-rounded.img": {
      frame: {
        x: 1822,
        y: 1270,
        w: 16,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 64
      },
      sourceSize: {
        w: 16,
        h: 64
      }
    },
    "map-door-01.img": {
      frame: {
        x: 2030,
        y: 103,
        w: 12,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 64
      },
      sourceSize: {
        w: 12,
        h: 64
      }
    },
    "map-door-05.img": {
      frame: {
        x: 1943,
        y: 642,
        w: 12,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 64
      },
      sourceSize: {
        w: 12,
        h: 64
      }
    },
    "loot-weapon-m9-cursed.img": {
      frame: {
        x: 1723,
        y: 1216,
        w: 52,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-squash-01.img": {
      frame: {
        x: 919,
        y: 1350,
        w: 65,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 65,
        h: 61
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-case-ring-01.img": {
      frame: {
        x: 988,
        y: 1350,
        w: 78,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 60
      },
      sourceSize: {
        w: 78,
        h: 60
      }
    },
    "map-case-chrys-01.img": {
      frame: {
        x: 1070,
        y: 1350,
        w: 78,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 60
      },
      sourceSize: {
        w: 78,
        h: 60
      }
    },
    "map-case-hatchet-res-01.img": {
      frame: {
        x: 1152,
        y: 1350,
        w: 67,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 67,
        h: 60
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-case-flare-res-01.img": {
      frame: {
        x: 1223,
        y: 1350,
        w: 67,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 67,
        h: 60
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-inspiration.img": {
      frame: {
        x: 1294,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-stone-res-01.img": {
      frame: {
        x: 1358,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-chimney-01.img": {
      frame: {
        x: 1422,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-stone-res-04.img": {
      frame: {
        x: 1486,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "loot-perk-final-bugle.img": {
      frame: {
        x: 1723,
        y: 1283,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-building-boarded-window-01.img": {
      frame: {
        x: 1834,
        y: 1386,
        w: 24,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 24,
        h: 59
      },
      sourceSize: {
        w: 24,
        h: 64
      }
    },
    "news.img": {
      frame: {
        x: 1550,
        y: 1350,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-bollard-01.img": {
      frame: {
        x: 1612,
        y: 1350,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-turkey_shoot.img": {
      frame: {
        x: 1674,
        y: 1350,
        w: 54,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 3,
        w: 54,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-door-03.img": {
      frame: {
        x: 1842,
        y: 1270,
        w: 16,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 56
      },
      sourceSize: {
        w: 16,
        h: 56
      }
    },
    "map-building-bank-window-01.img": {
      frame: {
        x: 1732,
        y: 1350,
        w: 28,
        h: 52
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 52
      },
      sourceSize: {
        w: 28,
        h: 52
      }
    },
    "map-building-house-window-res-01.img": {
      frame: {
        x: 1751,
        y: 1803,
        w: 16,
        h: 52
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 52
      },
      sourceSize: {
        w: 16,
        h: 52
      }
    },
    "map-crate-06.img": {
      frame: {
        x: 1867,
        y: 1906,
        w: 82,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 82,
        h: 50
      },
      sourceSize: {
        w: 82,
        h: 50
      }
    },
    "map-towelrack-01.img": {
      frame: {
        x: 271,
        y: 1915,
        w: 96,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 96,
        h: 40
      },
      sourceSize: {
        w: 96,
        h: 48
      }
    },
    "map-recorder-04.img": {
      frame: {
        x: 1822,
        y: 1338,
        w: 24,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 40
      },
      sourceSize: {
        w: 24,
        h: 40
      }
    },
    "map-recorder-03.img": {
      frame: {
        x: 1834,
        y: 1449,
        w: 24,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 40
      },
      sourceSize: {
        w: 24,
        h: 40
      }
    },
    "map-wall-02-5-rounded.img": {
      frame: {
        x: 1705,
        y: 1719,
        w: 16,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 40
      },
      sourceSize: {
        w: 16,
        h: 40
      }
    },
    "map-piano-01.img": {
      frame: {
        x: 371,
        y: 1915,
        w: 120,
        h: 38
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 38
      },
      sourceSize: {
        w: 120,
        h: 38
      }
    },
    "map-building-cabin-ceiling-01b.img": {
      frame: {
        x: 495,
        y: 1915,
        w: 74,
        h: 38
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 38
      },
      sourceSize: {
        w: 74,
        h: 38
      }
    },
    "map-deposit-box-02.img": {
      frame: {
        x: 573,
        y: 1915,
        w: 80,
        h: 37
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 37
      },
      sourceSize: {
        w: 80,
        h: 37
      }
    },
    "map-deposit-box-01.img": {
      frame: {
        x: 657,
        y: 1915,
        w: 80,
        h: 37
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 37
      },
      sourceSize: {
        w: 80,
        h: 37
      }
    },
    "map-power-box-01.img": {
      frame: {
        x: 1725,
        y: 1719,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-fire-ext-01.img": {
      frame: {
        x: 1611,
        y: 1764,
        w: 42,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 42,
        h: 34
      },
      sourceSize: {
        w: 42,
        h: 35
      }
    },
    "map-potato-res.img": {
      frame: {
        x: 1657,
        y: 1764,
        w: 29,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 7,
        w: 29,
        h: 34
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bush-res-02.img": {
      frame: {
        x: 1690,
        y: 1764,
        w: 33,
        h: 33
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 21,
        w: 33,
        h: 33
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bookshelf-02.img": {
      frame: {
        x: 883,
        y: 1879,
        w: 112,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 32
      },
      sourceSize: {
        w: 112,
        h: 32
      }
    },
    "map-bookshelf-01.img": {
      frame: {
        x: 999,
        y: 1879,
        w: 112,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 32
      },
      sourceSize: {
        w: 112,
        h: 32
      }
    },
    "map-building-porch-01.img": {
      frame: {
        x: 1115,
        y: 1879,
        w: 64,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 32
      }
    },
    "crosshair160.img": {
      frame: {
        x: 1727,
        y: 1764,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-column-01.img": {
      frame: {
        x: 1183,
        y: 1879,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair136.img": {
      frame: {
        x: 1219,
        y: 1879,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair118.img": {
      frame: {
        x: 1255,
        y: 1879,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-fire-ext-res.img": {
      frame: {
        x: 1291,
        y: 1879,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 2,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 42,
        h: 35
      }
    },
    "map-decal-oil-05.img": {
      frame: {
        x: 1321,
        y: 1879,
        w: 19,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 19,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-wall-02-rounded.img": {
      frame: {
        x: 1344,
        y: 1879,
        w: 16,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 32
      },
      sourceSize: {
        w: 16,
        h: 32
      }
    },
    "map-wall-02.img": {
      frame: {
        x: 1364,
        y: 1879,
        w: 16,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 32
      },
      sourceSize: {
        w: 16,
        h: 32
      }
    },
    "loot-melee-sledgehammer.img": {
      frame: {
        x: 1384,
        y: 1879,
        w: 76,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 31
      },
      sourceSize: {
        w: 74,
        h: 29
      }
    },
    "map-drawers-res.img": {
      frame: {
        x: 1464,
        y: 1879,
        w: 48,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 48,
        h: 31
      },
      sourceSize: {
        w: 48,
        h: 32
      }
    },
    "map-woodpile-res-01.img": {
      frame: {
        x: 1818,
        y: 590,
        w: 40,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 9,
        w: 40,
        h: 30
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bathhouse-pool-01.img": {
      frame: {
        x: 1516,
        y: 1879,
        w: 18,
        h: 30
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 30
      },
      sourceSize: {
        w: 18,
        h: 30
      }
    },
    "map-screen-res-01.img": {
      frame: {
        x: 1538,
        y: 1879,
        w: 60,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 60,
        h: 29
      },
      sourceSize: {
        w: 62,
        h: 29
      }
    },
    "map-barrel-res-03.img": {
      frame: {
        x: 1602,
        y: 1879,
        w: 40,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 42,
        w: 40,
        h: 29
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-gun-mount-04.img": {
      frame: {
        x: 1646,
        y: 1879,
        w: 64,
        h: 28
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 28
      },
      sourceSize: {
        w: 64,
        h: 28
      }
    },
    "map-decal-oil-04.img": {
      frame: {
        x: 1714,
        y: 1879,
        w: 30,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 30,
        h: 28
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bush-res-04.img": {
      frame: {
        x: 1961,
        y: 1929,
        w: 27,
        h: 27
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 27
      },
      sourceSize: {
        w: 27,
        h: 27
      }
    },
    "map-gun-mount-05.img": {
      frame: {
        x: 741,
        y: 1915,
        w: 72,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 26
      },
      sourceSize: {
        w: 72,
        h: 28
      }
    },
    "map-gun-mount-01.img": {
      frame: {
        x: 817,
        y: 1915,
        w: 72,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 26
      },
      sourceSize: {
        w: 72,
        h: 28
      }
    },
    "crosshair098.img": {
      frame: {
        x: 1992,
        y: 1929,
        w: 32,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 26
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bush-res-01.img": {
      frame: {
        x: 1748,
        y: 1879,
        w: 30,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 23,
        w: 30,
        h: 26
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-candle-01.img": {
      frame: {
        x: 893,
        y: 1915,
        w: 26,
        h: 26
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 26
      },
      sourceSize: {
        w: 26,
        h: 26
      }
    },
    "map-locker-03.img": {
      frame: {
        x: 923,
        y: 1915,
        w: 48,
        h: 25
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 25
      },
      sourceSize: {
        w: 48,
        h: 25
      }
    },
    "map-locker-02.img": {
      frame: {
        x: 975,
        y: 1915,
        w: 48,
        h: 25
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 25
      },
      sourceSize: {
        w: 48,
        h: 25
      }
    },
    "map-locker-01.img": {
      frame: {
        x: 1027,
        y: 1915,
        w: 48,
        h: 25
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 25
      },
      sourceSize: {
        w: 48,
        h: 25
      }
    },
    "map-building-bank-window-res-01.img": {
      frame: {
        x: 1079,
        y: 1915,
        w: 26,
        h: 25
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 26,
        w: 26,
        h: 25
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-screen-01.img": {
      frame: {
        x: 1109,
        y: 1915,
        w: 128,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 24
      },
      sourceSize: {
        w: 128,
        h: 24
      }
    },
    "map-gun-mount-03.img": {
      frame: {
        x: 1241,
        y: 1915,
        w: 64,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 28
      }
    },
    "map-gun-mount-02.img": {
      frame: {
        x: 1309,
        y: 1915,
        w: 64,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 28
      }
    },
    "cobalt.img": {
      frame: {
        x: 1377,
        y: 1915,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "map-tree-res-01.img": {
      frame: {
        x: 1405,
        y: 1915,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "crosshair051.img": {
      frame: {
        x: 1433,
        y: 1915,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-decal-flyer-01.img": {
      frame: {
        x: 1461,
        y: 1915,
        w: 21,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 21,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "crosshair176.img": {
      frame: {
        x: 1486,
        y: 1915,
        w: 20,
        h: 19
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 19
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-barrel-04.img": {
      frame: {
        x: 1510,
        y: 1915,
        w: 45,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 18
      },
      sourceSize: {
        w: 45,
        h: 18
      }
    },
    "map-barrel-03.img": {
      frame: {
        x: 1559,
        y: 1915,
        w: 45,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 18
      },
      sourceSize: {
        w: 45,
        h: 18
      }
    },
    "map-bottle-04.img": {
      frame: {
        x: 1608,
        y: 1915,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-switch-01.img": {
      frame: {
        x: 2028,
        y: 1929,
        w: 15,
        h: 17
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 17
      },
      sourceSize: {
        w: 15,
        h: 17
      }
    },
    "map-switch-02.img": {
      frame: {
        x: 1763,
        y: 1764,
        w: 15,
        h: 17
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 17
      },
      sourceSize: {
        w: 15,
        h: 17
      }
    },
    "map-switch-03.img": {
      frame: {
        x: 1630,
        y: 1915,
        w: 15,
        h: 17
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 17
      },
      sourceSize: {
        w: 15,
        h: 17
      }
    },
    "map-bottle-03.img": {
      frame: {
        x: 1751,
        y: 1859,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-bottle-05.img": {
      frame: {
        x: 1649,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-wall-01-rounded.img": {
      frame: {
        x: 1669,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-bottle-01.img": {
      frame: {
        x: 1689,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-bottle-02.img": {
      frame: {
        x: 1709,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-crate-03.img": {
      frame: {
        x: 1662,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    }
  }
}, {
  meta: {
    image: "shared-1-50-e92848bd.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-conch-compartment-floor-01a.img": {
      frame: {
        x: 284,
        y: 2,
        w: 472,
        h: 440
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 0,
        w: 472,
        h: 440
      },
      sourceSize: {
        w: 496,
        h: 440
      }
    },
    "map-building-bank-ceiling-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 278,
        h: 446
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 24,
        w: 278,
        h: 446
      },
      sourceSize: {
        w: 278,
        h: 470
      }
    },
    "map-building-club-floor-01c.img": {
      frame: {
        x: 760,
        y: 2,
        w: 721,
        h: 433
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 721,
        h: 433
      },
      sourceSize: {
        w: 721,
        h: 433
      }
    },
    "map-building-house-floor-01.img": {
      frame: {
        x: 2,
        y: 452,
        w: 480,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 432
      },
      sourceSize: {
        w: 480,
        h: 432
      }
    },
    "map-building-house-floor-02.img": {
      frame: {
        x: 486,
        y: 452,
        w: 480,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 432
      },
      sourceSize: {
        w: 480,
        h: 432
      }
    },
    "map-building-mansion-ceiling.img": {
      frame: {
        x: 970,
        y: 452,
        w: 458,
        h: 404
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 458,
        h: 404
      },
      sourceSize: {
        w: 512,
        h: 432
      }
    },
    "map-building-bank-floor-01.img": {
      frame: {
        x: 2,
        y: 888,
        w: 848,
        h: 401
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 848,
        h: 401
      },
      sourceSize: {
        w: 848,
        h: 401
      }
    },
    "map-building-mansion-cellar-01a.img": {
      frame: {
        x: 854,
        y: 888,
        w: 433,
        h: 401
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 433,
        h: 401
      },
      sourceSize: {
        w: 433,
        h: 401
      }
    },
    "map-building-warehouse-floor-01.img": {
      frame: {
        x: 1485,
        y: 2,
        w: 500,
        h: 400
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 500,
        h: 400
      },
      sourceSize: {
        w: 500,
        h: 400
      }
    },
    "map-building-warehouse-floor-02.img": {
      frame: {
        x: 1485,
        y: 406,
        w: 440,
        h: 400
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 440,
        h: 400
      },
      sourceSize: {
        w: 440,
        h: 400
      }
    },
    "map-building-shilo-floor-01.img": {
      frame: {
        x: 1485,
        y: 810,
        w: 480,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 384
      },
      sourceSize: {
        w: 480,
        h: 384
      }
    },
    "map-building-shilo-ceiling-01.img": {
      frame: {
        x: 2,
        y: 1293,
        w: 480,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 384
      },
      sourceSize: {
        w: 480,
        h: 384
      }
    },
    "map-building-bathhouse-sideroom-02.img": {
      frame: {
        x: 486,
        y: 1293,
        w: 556,
        h: 365
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 556,
        h: 365
      },
      sourceSize: {
        w: 556,
        h: 365
      }
    },
    "map-building-bridge-lg-floor.img": {
      frame: {
        x: 1046,
        y: 1293,
        w: 506,
        h: 354
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 506,
        h: 354
      },
      sourceSize: {
        w: 506,
        h: 354
      }
    },
    "map-bunker-egg-chamber-floor-01a.img": {
      frame: {
        x: 1556,
        y: 1293,
        w: 364,
        h: 350
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 364,
        h: 350
      },
      sourceSize: {
        w: 369,
        h: 353
      }
    },
    "map-bunker-storm-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1681,
        w: 636,
        h: 349
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 636,
        h: 349
      },
      sourceSize: {
        w: 640,
        h: 352
      }
    },
    "map-building-house-ceiling.img": {
      frame: {
        x: 642,
        y: 1681,
        w: 360,
        h: 324
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 324
      },
      sourceSize: {
        w: 360,
        h: 324
      }
    },
    "map-building-police-floor-02.img": {
      frame: {
        x: 1006,
        y: 1681,
        w: 305,
        h: 321
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 305,
        h: 321
      },
      sourceSize: {
        w: 305,
        h: 785
      }
    },
    "map-building-barn-ceiling-01.img": {
      frame: {
        x: 1315,
        y: 1681,
        w: 600,
        h: 312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 600,
        h: 312
      },
      sourceSize: {
        w: 600,
        h: 312
      }
    },
    "map-building-club-floor-01e.img": {
      frame: {
        x: 1291,
        y: 888,
        w: 177,
        h: 241
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 177,
        h: 241
      },
      sourceSize: {
        w: 177,
        h: 241
      }
    },
    "map-bunker-egg-chamber-ceiling-01.img": {
      frame: {
        x: 1291,
        y: 1133,
        w: 160,
        h: 153
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 71,
        w: 160,
        h: 153
      },
      sourceSize: {
        w: 160,
        h: 224
      }
    },
    "map-shack-res-03.img": {
      frame: {
        x: 1485,
        y: 1198,
        w: 114,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 48,
        y: 33,
        w: 114,
        h: 91
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-shack-res-02.img": {
      frame: {
        x: 1603,
        y: 1198,
        w: 114,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 48,
        y: 33,
        w: 114,
        h: 91
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-bunker-conch-ceiling-01.img": {
      frame: {
        x: 1721,
        y: 1198,
        w: 190,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 190,
        h: 90
      },
      sourceSize: {
        w: 190,
        h: 90
      }
    },
    "map-bunker-vent-03.img": {
      frame: {
        x: 1915,
        y: 1198,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 68,
        h: 68
      }
    },
    "map-bush-07x.img": {
      frame: {
        x: 1919,
        y: 1681,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-01f.img": {
      frame: {
        x: 1919,
        y: 1753,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-decal-initiative.img": {
      frame: {
        x: 1919,
        y: 1825,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pass.img": {
      frame: {
        x: 1919,
        y: 1893,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-vat-res.img": {
      frame: {
        x: 1924,
        y: 1293,
        w: 57,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 4,
        w: 57,
        h: 64
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-hotw.img": {
      frame: {
        x: 1929,
        y: 406,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-halloween-mystery.img": {
      frame: {
        x: 1929,
        y: 474,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-res-01.img": {
      frame: {
        x: 1929,
        y: 541,
        w: 52,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-01sv.img": {
      frame: {
        x: 1924,
        y: 1361,
        w: 58,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 58,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-wall-outhouse-top.img": {
      frame: {
        x: 1279,
        y: 860,
        w: 102,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 102,
        h: 12
      },
      sourceSize: {
        w: 102,
        h: 12
      }
    },
    "map-tree-09.img": {
      frame: {
        x: 1929,
        y: 662,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-decal-club-01.img": {
      frame: {
        x: 1929,
        y: 722,
        w: 52,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 56,
        w: 52,
        h: 56
      },
      sourceSize: {
        w: 52,
        h: 180
      }
    },
    "map-crate-20.img": {
      frame: {
        x: 1924,
        y: 1421,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 54,
        h: 54
      }
    },
    "map-stove-02.img": {
      frame: {
        x: 1924,
        y: 1479,
        w: 52,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 52,
        h: 54
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-decal-oil-02.img": {
      frame: {
        x: 1432,
        y: 452,
        w: 48,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 48,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-building-house-window-01.img": {
      frame: {
        x: 1969,
        y: 810,
        w: 16,
        h: 52
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 52
      },
      sourceSize: {
        w: 16,
        h: 52
      }
    },
    "map-decal-oil-03.img": {
      frame: {
        x: 1432,
        y: 509,
        w: 48,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 48,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-res-02.img": {
      frame: {
        x: 1432,
        y: 563,
        w: 43,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 7,
        w: 43,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-04.img": {
      frame: {
        x: 1432,
        y: 617,
        w: 36,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 36,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-toilet-03.img": {
      frame: {
        x: 1432,
        y: 671,
        w: 36,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 36,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-couch-03.img": {
      frame: {
        x: 1432,
        y: 725,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-04.img": {
      frame: {
        x: 1432,
        y: 777,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-woodpile-01.img": {
      frame: {
        x: 1924,
        y: 1537,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-01.img": {
      frame: {
        x: 1924,
        y: 1589,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bathrocks-01.img": {
      frame: {
        x: 1989,
        y: 2,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-05.img": {
      frame: {
        x: 1989,
        y: 54,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-03.img": {
      frame: {
        x: 1989,
        y: 106,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-tree-res-02.img": {
      frame: {
        x: 1989,
        y: 158,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-02.img": {
      frame: {
        x: 1989,
        y: 210,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-recorder-01.img": {
      frame: {
        x: 1989,
        y: 262,
        w: 32,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-recorder-02.img": {
      frame: {
        x: 1989,
        y: 314,
        w: 32,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-wall-03-rounded.img": {
      frame: {
        x: 1989,
        y: 366,
        w: 16,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 48
      },
      sourceSize: {
        w: 16,
        h: 48
      }
    },
    "map-wall-03.img": {
      frame: {
        x: 2009,
        y: 366,
        w: 16,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 48
      },
      sourceSize: {
        w: 16,
        h: 48
      }
    },
    "map-control-panel-03.img": {
      frame: {
        x: 1989,
        y: 418,
        w: 48,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 47
      },
      sourceSize: {
        w: 48,
        h: 47
      }
    },
    "map-couch-res-01.img": {
      frame: {
        x: 1989,
        y: 469,
        w: 43,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 43,
        h: 46
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-saloon-bar-02.img": {
      frame: {
        x: 1989,
        y: 519,
        w: 27,
        h: 46
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 46
      },
      sourceSize: {
        w: 27,
        h: 46
      }
    },
    "map-stand-01.img": {
      frame: {
        x: 1989,
        y: 569,
        w: 40,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 45
      },
      sourceSize: {
        w: 40,
        h: 45
      }
    },
    "map-squash-res-01.img": {
      frame: {
        x: 1989,
        y: 618,
        w: 45,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 4,
        w: 45,
        h: 44
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-res-01.img": {
      frame: {
        x: 1989,
        y: 666,
        w: 44,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 14,
        w: 44,
        h: 44
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-vent-01.img": {
      frame: {
        x: 1989,
        y: 714,
        w: 42,
        h: 42
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 42,
        h: 42
      },
      sourceSize: {
        w: 42,
        h: 42
      }
    },
    "map-wall-shack-top.img": {
      frame: {
        x: 970,
        y: 860,
        w: 180,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 12
      },
      sourceSize: {
        w: 180,
        h: 12
      }
    },
    "map-wall-shack-bot.img": {
      frame: {
        x: 1154,
        y: 860,
        w: 121,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 121,
        h: 12
      },
      sourceSize: {
        w: 121,
        h: 12
      }
    },
    "map-tree-04.img": {
      frame: {
        x: 1929,
        y: 602,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    }
  }
}, {
  meta: {
    image: "shared-2-50-fcf3c569.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-building-club-ceiling-01a.img": {
      frame: {
        x: 476,
        y: 2,
        w: 369,
        h: 297
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 369,
        h: 297
      },
      sourceSize: {
        w: 369,
        h: 297
      }
    },
    "map-building-teahouse-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 470,
        h: 308
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 470,
        h: 308
      },
      sourceSize: {
        w: 480,
        h: 320
      }
    },
    "map-building-club-floor-01g.img": {
      frame: {
        x: 2,
        y: 314,
        w: 401,
        h: 289
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 289
      },
      sourceSize: {
        w: 401,
        h: 289
      }
    },
    "map-building-cabin-ceiling-01a.img": {
      frame: {
        x: 849,
        y: 2,
        w: 456,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 456,
        h: 288
      },
      sourceSize: {
        w: 456,
        h: 288
      }
    },
    "map-building-teahouse-floor-01.img": {
      frame: {
        x: 849,
        y: 294,
        w: 448,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 288
      },
      sourceSize: {
        w: 448,
        h: 288
      }
    },
    "map-bunker-conch-compartment-ceiling-01.img": {
      frame: {
        x: 407,
        y: 314,
        w: 244,
        h: 280
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 244,
        h: 280
      },
      sourceSize: {
        w: 244,
        h: 280
      }
    },
    "map-building-bank-ceiling-01.img": {
      frame: {
        x: 2,
        y: 607,
        w: 253,
        h: 277
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 23,
        w: 253,
        h: 277
      },
      sourceSize: {
        w: 253,
        h: 300
      }
    },
    "map-building-bridge-lg-ceiling.img": {
      frame: {
        x: 259,
        y: 607,
        w: 544,
        h: 274
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 544,
        h: 274
      },
      sourceSize: {
        w: 544,
        h: 288
      }
    },
    "map-building-bathhouse-sideroom-01.img": {
      frame: {
        x: 807,
        y: 607,
        w: 268,
        h: 268
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 268,
        h: 268
      },
      sourceSize: {
        w: 268,
        h: 268
      }
    },
    "map-tree-08f.img": {
      frame: {
        x: 2,
        y: 888,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-08su.img": {
      frame: {
        x: 262,
        y: 888,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-silo-01.img": {
      frame: {
        x: 522,
        y: 888,
        w: 252,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 252,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-police-ceiling-01.img": {
      frame: {
        x: 778,
        y: 888,
        w: 504,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 504,
        h: 240
      },
      sourceSize: {
        w: 504,
        h: 240
      }
    },
    "map-building-police-ceiling-03.img": {
      frame: {
        x: 1309,
        y: 2,
        w: 252,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 252,
        h: 240
      },
      sourceSize: {
        w: 252,
        h: 240
      }
    },
    "map-building-barn-basement-floor-01.img": {
      frame: {
        x: 2,
        y: 1148,
        w: 332,
        h: 236
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 332,
        h: 236
      },
      sourceSize: {
        w: 332,
        h: 236
      }
    },
    "map-building-barn-basement-floor-02.img": {
      frame: {
        x: 1309,
        y: 246,
        w: 188,
        h: 236
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 188,
        h: 236
      },
      sourceSize: {
        w: 188,
        h: 236
      }
    },
    "map-building-hut-floor-01.img": {
      frame: {
        x: 1309,
        y: 486,
        w: 228,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 14,
        w: 228,
        h: 228
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-bank-floor-02.img": {
      frame: {
        x: 338,
        y: 1148,
        w: 434,
        h: 224
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 434,
        h: 224
      },
      sourceSize: {
        w: 544,
        h: 224
      }
    },
    "map-building-club-ceiling-01c.img": {
      frame: {
        x: 1309,
        y: 718,
        w: 201,
        h: 217
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 201,
        h: 217
      },
      sourceSize: {
        w: 201,
        h: 217
      }
    },
    "map-building-warehouse-ceiling-01.img": {
      frame: {
        x: 776,
        y: 1148,
        w: 416,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 416,
        h: 216
      },
      sourceSize: {
        w: 416,
        h: 216
      }
    },
    "map-building-warehouse-ceiling-02.img": {
      frame: {
        x: 1196,
        y: 1148,
        w: 360,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 216
      },
      sourceSize: {
        w: 360,
        h: 216
      }
    },
    "map-bunker-conch-compartment-floor-01b.img": {
      frame: {
        x: 1079,
        y: 607,
        w: 200,
        h: 216
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 216
      },
      sourceSize: {
        w: 200,
        h: 224
      }
    },
    "map-bunker-conch-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 1388,
        w: 621,
        h: 206
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 13,
        w: 621,
        h: 206
      },
      sourceSize: {
        w: 653,
        h: 232
      }
    },
    "map-building-shack-floor-03.img": {
      frame: {
        x: 627,
        y: 1388,
        w: 286,
        h: 206
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 286,
        h: 206
      },
      sourceSize: {
        w: 288,
        h: 224
      }
    },
    "map-building-hut-ceiling-01.img": {
      frame: {
        x: 1309,
        y: 939,
        w: 192,
        h: 198
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 192,
        h: 198
      },
      sourceSize: {
        w: 204,
        h: 204
      }
    },
    "map-building-hut-ceiling-03.img": {
      frame: {
        x: 917,
        y: 1388,
        w: 192,
        h: 198
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 192,
        h: 198
      },
      sourceSize: {
        w: 204,
        h: 204
      }
    },
    "map-building-hut-ceiling-02.img": {
      frame: {
        x: 1113,
        y: 1388,
        w: 192,
        h: 198
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 192,
        h: 198
      },
      sourceSize: {
        w: 204,
        h: 204
      }
    },
    "map-bunker-conch-chamber-floor-01.img": {
      frame: {
        x: 2,
        y: 1598,
        w: 699,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 21,
        w: 699,
        h: 192
      },
      sourceSize: {
        w: 760,
        h: 216
      }
    },
    "map-bunker-storm-floor-02.img": {
      frame: {
        x: 655,
        y: 314,
        w: 160,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 192
      },
      sourceSize: {
        w: 160,
        h: 192
      }
    },
    "map-building-panicroom-floor.img": {
      frame: {
        x: 1309,
        y: 1388,
        w: 144,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 192
      },
      sourceSize: {
        w: 144,
        h: 192
      }
    },
    "map-building-panicroom-ceiling.img": {
      frame: {
        x: 705,
        y: 1598,
        w: 144,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 192
      },
      sourceSize: {
        w: 144,
        h: 192
      }
    },
    "map-building-barn-basement-stairs.img": {
      frame: {
        x: 853,
        y: 1598,
        w: 144,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 192
      },
      sourceSize: {
        w: 144,
        h: 192
      }
    },
    "map-building-bridge-md-floor.img": {
      frame: {
        x: 1001,
        y: 1598,
        w: 448,
        h: 184
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 184
      },
      sourceSize: {
        w: 448,
        h: 184
      }
    },
    "map-building-bank-ceiling-03.img": {
      frame: {
        x: 1453,
        y: 1598,
        w: 108,
        h: 181
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 95,
        w: 108,
        h: 181
      },
      sourceSize: {
        w: 108,
        h: 276
      }
    },
    "map-building-bathhouse-basement-01c.img": {
      frame: {
        x: 1565,
        y: 2,
        w: 284,
        h: 172
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 284,
        h: 172
      },
      sourceSize: {
        w: 284,
        h: 172
      }
    },
    "map-building-vault-ceiling.img": {
      frame: {
        x: 1565,
        y: 178,
        w: 162,
        h: 169
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 169
      },
      sourceSize: {
        w: 216,
        h: 169
      }
    },
    "map-building-bathhouse-sideroom-ceiling-02.img": {
      frame: {
        x: 1565,
        y: 351,
        w: 256,
        h: 168
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 168
      },
      sourceSize: {
        w: 256,
        h: 168
      }
    },
    "map-building-shack-floor-01.img": {
      frame: {
        x: 1565,
        y: 523,
        w: 194,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 194,
        h: 162
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-building-mansion-floor-01a.img": {
      frame: {
        x: 2,
        y: 1794,
        w: 401,
        h: 160
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 401,
        h: 160
      },
      sourceSize: {
        w: 401,
        h: 161
      }
    },
    "map-building-shack-floor-02.img": {
      frame: {
        x: 1565,
        y: 689,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-outhouse-floor.img": {
      frame: {
        x: 1565,
        y: 853,
        w: 124,
        h: 157
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 38,
        y: 0,
        w: 124,
        h: 157
      },
      sourceSize: {
        w: 200,
        h: 158
      }
    },
    "map-bunker-storm-chamber-ceiling-01.img": {
      frame: {
        x: 407,
        y: 1794,
        w: 296,
        h: 154
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 54,
        w: 296,
        h: 154
      },
      sourceSize: {
        w: 296,
        h: 208
      }
    },
    "map-building-shack-ceiling-03.img": {
      frame: {
        x: 1565,
        y: 1014,
        w: 206,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 0,
        w: 206,
        h: 146
      },
      sourceSize: {
        w: 216,
        h: 168
      }
    },
    "map-building-club-floor-01h.img": {
      frame: {
        x: 1565,
        y: 1164,
        w: 161,
        h: 145
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 161,
        h: 145
      },
      sourceSize: {
        w: 161,
        h: 145
      }
    },
    "map-building-bathhouse-basement-01a.img": {
      frame: {
        x: 1731,
        y: 178,
        w: 113,
        h: 145
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 145
      },
      sourceSize: {
        w: 113,
        h: 145
      }
    },
    "map-bunker-generic-floor-01.img": {
      frame: {
        x: 1693,
        y: 853,
        w: 150,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 150,
        h: 142
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-generic-floor-02.img": {
      frame: {
        x: 1565,
        y: 1313,
        w: 150,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 150,
        h: 142
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-stone-03.img": {
      frame: {
        x: 1565,
        y: 1459,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-conch-floor-01.img": {
      frame: {
        x: 707,
        y: 1794,
        w: 294,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 294,
        h: 128
      },
      sourceSize: {
        w: 300,
        h: 128
      }
    },
    "map-tree-03.img": {
      frame: {
        x: 1719,
        y: 1313,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-07su.img": {
      frame: {
        x: 1710,
        y: 1459,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-hut-res-01.img": {
      frame: {
        x: 1565,
        y: 1603,
        w: 121,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 63,
        y: 67,
        w: 121,
        h: 121
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-club-ceiling-01b.img": {
      frame: {
        x: 1729,
        y: 689,
        w: 89,
        h: 121
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 89,
        h: 121
      },
      sourceSize: {
        w: 89,
        h: 121
      }
    },
    "map-chute-01.img": {
      frame: {
        x: 1690,
        y: 1603,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-pipes-03.img": {
      frame: {
        x: 1005,
        y: 1794,
        w: 342,
        h: 118
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 342,
        h: 118
      },
      sourceSize: {
        w: 342,
        h: 118
      }
    },
    "map-bunker-generic-ceiling-01.img": {
      frame: {
        x: 1730,
        y: 1164,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-building-mansion-cellar-01b.img": {
      frame: {
        x: 1351,
        y: 1794,
        w: 113,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 115
      },
      sourceSize: {
        w: 113,
        h: 115
      }
    },
    "map-building-outhouse-ceiling.img": {
      frame: {
        x: 1468,
        y: 1794,
        w: 140,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 140,
        h: 114
      },
      sourceSize: {
        w: 200,
        h: 158
      }
    },
    "map-building-mansion-floor-01c.img": {
      frame: {
        x: 1612,
        y: 1794,
        w: 113,
        h: 114
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 114
      },
      sourceSize: {
        w: 113,
        h: 114
      }
    },
    "map-building-club-floor-01a.img": {
      frame: {
        x: 1729,
        y: 1794,
        w: 113,
        h: 113
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 113
      },
      sourceSize: {
        w: 113,
        h: 113
      }
    },
    "map-building-saferoom-floor.img": {
      frame: {
        x: 1853,
        y: 2,
        w: 176,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 176,
        h: 112
      },
      sourceSize: {
        w: 176,
        h: 112
      }
    },
    "map-building-saferoom-ceiling.img": {
      frame: {
        x: 1853,
        y: 118,
        w: 176,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 176,
        h: 112
      },
      sourceSize: {
        w: 176,
        h: 112
      }
    },
    "map-building-bathhouse-sideroom-ceiling-01.img": {
      frame: {
        x: 1853,
        y: 234,
        w: 128,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 112
      }
    },
    "map-vending-res.img": {
      frame: {
        x: 1977,
        y: 1245,
        w: 50,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 50,
        h: 44
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-bed-02.img": {
      frame: {
        x: 1853,
        y: 462,
        w: 88,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 88,
        h: 108
      },
      sourceSize: {
        w: 88,
        h: 108
      }
    },
    "map-building-shack-ceiling-01.img": {
      frame: {
        x: 1853,
        y: 574,
        w: 158,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 158,
        h: 105
      },
      sourceSize: {
        w: 158,
        h: 128
      }
    },
    "map-vat-02.img": {
      frame: {
        x: 1853,
        y: 683,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-stone-res-02.img": {
      frame: {
        x: 1853,
        y: 787,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-building-barn-basement-ceiling-01.img": {
      frame: {
        x: 1853,
        y: 891,
        w: 152,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 152,
        h: 98
      },
      sourceSize: {
        w: 152,
        h: 104
      }
    },
    "map-building-club-floor-01d.img": {
      frame: {
        x: 1853,
        y: 993,
        w: 161,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 161,
        h: 97
      },
      sourceSize: {
        w: 161,
        h: 97
      }
    },
    "map-building-bathhouse-basement-01d.img": {
      frame: {
        x: 1853,
        y: 1094,
        w: 129,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 129,
        h: 97
      },
      sourceSize: {
        w: 129,
        h: 97
      }
    },
    "map-building-shack-ceiling-02.img": {
      frame: {
        x: 1853,
        y: 1195,
        w: 120,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 97
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-building-club-floor-01b.img": {
      frame: {
        x: 1853,
        y: 1296,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-building-crossing-bathroom-ceiling.img": {
      frame: {
        x: 1853,
        y: 1397,
        w: 144,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 96
      },
      sourceSize: {
        w: 144,
        h: 96
      }
    },
    "map-hedgehog-01.img": {
      frame: {
        x: 1853,
        y: 1497,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-shack-res-01.img": {
      frame: {
        x: 1853,
        y: 1597,
        w: 156,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 23,
        w: 156,
        h: 94
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-bunker-egg-chamber-floor-01b.img": {
      frame: {
        x: 1853,
        y: 1695,
        w: 97,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 90
      },
      sourceSize: {
        w: 97,
        h: 90
      }
    },
    "map-smoke-res.img": {
      frame: {
        x: 1853,
        y: 1789,
        w: 86,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 19,
        w: 86,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-storm-chamber-floor-01b.img": {
      frame: {
        x: 1457,
        y: 1388,
        w: 97,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 89
      },
      sourceSize: {
        w: 97,
        h: 89
      }
    },
    "map-bunker-conch-chamber-ceiling-02.img": {
      frame: {
        x: 2,
        y: 1958,
        w: 244,
        h: 88
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 244,
        h: 88
      },
      sourceSize: {
        w: 244,
        h: 88
      }
    },
    "map-crate-res-01.img": {
      frame: {
        x: 1945,
        y: 462,
        w: 72,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 72,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-vent-02.img": {
      frame: {
        x: 1957,
        y: 683,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 68,
        h: 68
      }
    },
    "pass-level-bg.img": {
      frame: {
        x: 1954,
        y: 1296,
        w: 73,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 73,
        h: 67
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "map-vat-01.img": {
      frame: {
        x: 1957,
        y: 787,
        w: 68,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 67
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-barrel-res-02.img": {
      frame: {
        x: 1953,
        y: 1497,
        w: 68,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-building-mansion-cellar-01c.img": {
      frame: {
        x: 655,
        y: 510,
        w: 177,
        h: 65
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 177,
        h: 65
      },
      sourceSize: {
        w: 177,
        h: 65
      }
    },
    "map-building-club-floor-01f.img": {
      frame: {
        x: 1853,
        y: 1883,
        w: 97,
        h: 65
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 65
      },
      sourceSize: {
        w: 97,
        h: 65
      }
    },
    "map-stone-res-06.img": {
      frame: {
        x: 250,
        y: 1958,
        w: 144,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 64
      },
      sourceSize: {
        w: 144,
        h: 64
      }
    },
    "map-stairs-broken-01.img": {
      frame: {
        x: 1943,
        y: 1789,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-table-01.img": {
      frame: {
        x: 1763,
        y: 523,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-bathhouse-column-01.img": {
      frame: {
        x: 1954,
        y: 1695,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-martyrdom-01.img": {
      frame: {
        x: 1954,
        y: 1883,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "timer.img": {
      frame: {
        x: 1763,
        y: 591,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-crate-05.img": {
      frame: {
        x: 1775,
        y: 1014,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 62,
        h: 62
      }
    },
    "player-medic.img": {
      frame: {
        x: 1775,
        y: 1080,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-case-basement-01.img": {
      frame: {
        x: 1565,
        y: 1728,
        w: 74,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 56
      },
      sourceSize: {
        w: 74,
        h: 56
      }
    },
    "map-control-panel-05.img": {
      frame: {
        x: 1643,
        y: 1728,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-control-panel-02.img": {
      frame: {
        x: 1719,
        y: 1728,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-control-panel-01.img": {
      frame: {
        x: 1457,
        y: 1481,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-control-panel-04.img": {
      frame: {
        x: 398,
        y: 1958,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-case-deagle-01.img": {
      frame: {
        x: 474,
        y: 1958,
        w: 72,
        h: 54
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 54
      },
      sourceSize: {
        w: 72,
        h: 54
      }
    },
    "map-case-deagle-02.img": {
      frame: {
        x: 550,
        y: 1958,
        w: 72,
        h: 54
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 54
      },
      sourceSize: {
        w: 72,
        h: 54
      }
    },
    "emote-medical-healthkit.img": {
      frame: {
        x: 626,
        y: 1958,
        w: 62,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 5,
        w: 62,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-takedown-01.img": {
      frame: {
        x: 692,
        y: 1958,
        w: 64,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 64,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-grill-01.img": {
      frame: {
        x: 760,
        y: 1958,
        w: 64,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 64,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-chest-02.img": {
      frame: {
        x: 828,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-chest-03.img": {
      frame: {
        x: 902,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-case-flare-01.img": {
      frame: {
        x: 976,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-case-hatchet-01.img": {
      frame: {
        x: 1050,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-chest-01.img": {
      frame: {
        x: 1124,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-couch-01.img": {
      frame: {
        x: 1079,
        y: 827,
        w: 144,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 48
      }
    },
    "map-couch-02.img": {
      frame: {
        x: 1198,
        y: 1958,
        w: 96,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 48
      },
      sourceSize: {
        w: 96,
        h: 48
      }
    },
    "map-control-panel-06.img": {
      frame: {
        x: 1298,
        y: 1958,
        w: 96,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 47
      },
      sourceSize: {
        w: 96,
        h: 47
      }
    },
    "map-oven-01.img": {
      frame: {
        x: 1795,
        y: 1728,
        w: 54,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 47
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-refrigerator-01.img": {
      frame: {
        x: 1501,
        y: 246,
        w: 54,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 47
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-vending-soda-01.img": {
      frame: {
        x: 1501,
        y: 297,
        w: 54,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 47
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-decal-oil-06.img": {
      frame: {
        x: 1977,
        y: 1195,
        w: 50,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 9,
        w: 50,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-crate-mil-05.img": {
      frame: {
        x: 1398,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-01.img": {
      frame: {
        x: 1488,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-04.img": {
      frame: {
        x: 1578,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-02.img": {
      frame: {
        x: 1668,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-03.img": {
      frame: {
        x: 1758,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-drawers-02.img": {
      frame: {
        x: 1848,
        y: 1958,
        w: 80,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 45
      },
      sourceSize: {
        w: 80,
        h: 45
      }
    },
    "map-drawers-01.img": {
      frame: {
        x: 1932,
        y: 1958,
        w: 80,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 45
      },
      sourceSize: {
        w: 80,
        h: 45
      }
    },
    "map-building-teahouse-floor-02.img": {
      frame: {
        x: 1227,
        y: 827,
        w: 64,
        h: 44
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 44
      }
    },
    "map-building-teahouse-res-01.img": {
      frame: {
        x: 1853,
        y: 350,
        w: 144,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 56,
        y: 74,
        w: 144,
        h: 108
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    }
  }
}, {
  meta: {
    image: "shared-3-50-b073dcf4.png",
    size: {
      w: 1024,
      h: 128
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-conch-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 248,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 248,
        h: 96
      },
      sourceSize: {
        w: 248,
        h: 96
      }
    },
    "map-building-mansion-floor-01d.img": {
      frame: {
        x: 254,
        y: 2,
        w: 545,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 545,
        h: 95
      },
      sourceSize: {
        w: 545,
        h: 97
      }
    }
  }
}];
let Us = [{
  meta: {
    image: "halloween-0-50-f68b39c5.png",
    size: {
      w: 1024,
      h: 1024
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 358,
        y: 2,
        w: 352,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 352
      },
      sourceSize: {
        w: 352,
        h: 352
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 352,
        h: 674
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 674
      },
      sourceSize: {
        w: 352,
        h: 688
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 358,
        y: 358,
        w: 160,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 272
      },
      sourceSize: {
        w: 160,
        h: 272
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 714,
        y: 2,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-08sp.img": {
      frame: {
        x: 714,
        y: 262,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 2,
        y: 680,
        w: 248,
        h: 243
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 248,
        h: 243
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 522,
        y: 358,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-tree-07sp.img": {
      frame: {
        x: 714,
        y: 522,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 254,
        y: 680,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 846,
        y: 522,
        w: 96,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 128
      },
      sourceSize: {
        w: 96,
        h: 128
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 522,
        y: 522,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-airdrop-01h.img": {
      frame: {
        x: 622,
        y: 522,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-bush-res-06.img": {
      frame: {
        x: 402,
        y: 634,
        w: 28,
        h: 27
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 23,
        w: 28,
        h: 27
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-web-01.img": {
      frame: {
        x: 470,
        y: 680,
        w: 76,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 80
      },
      sourceSize: {
        w: 76,
        h: 80
      }
    },
    "map-crate-11h.img": {
      frame: {
        x: 550,
        y: 680,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-pumpkin-01.img": {
      frame: {
        x: 628,
        y: 680,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-pumpkin-02.img": {
      frame: {
        x: 704,
        y: 680,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 780,
        y: 680,
        w: 71,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 71,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-pumpkin-res-01.img": {
      frame: {
        x: 855,
        y: 680,
        w: 71,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 71,
        h: 69
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-tree-04h.img": {
      frame: {
        x: 254,
        y: 812,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-pumpkin-03.img": {
      frame: {
        x: 314,
        y: 812,
        w: 51,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 11,
        w: 51,
        h: 52
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-airdrop-01h.img": {
      frame: {
        x: 369,
        y: 812,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pumpkin-res-03.img": {
      frame: {
        x: 386,
        y: 764,
        w: 46,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 46,
        h: 44
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-airdrop-02h.img": {
      frame: {
        x: 358,
        y: 634,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 40,
        h: 40
      }
    },
    "map-airdrop-02h.img": {
      frame: {
        x: 386,
        y: 680,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    }
  }
}];
let $s = [{
  meta: {
    image: "snow-0-50-351b3383.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 854,
        y: 2,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 358,
        y: 730,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 763,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 1242,
        y: 2,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 2,
        y: 1136,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 376,
        y: 1136,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1242,
        y: 375,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 797,
        y: 1136,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 1599,
        y: 2,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 1599,
        y: 320,
        w: 200,
        h: 312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 312
      },
      sourceSize: {
        w: 200,
        h: 312
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1803,
        y: 320,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 2,
        y: 1470,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1921,
        y: 320,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 1599,
        y: 636,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1599,
        y: 894,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1781,
        y: 894,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1599,
        y: 1084,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 1699,
        y: 1084,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1599,
        y: 1263,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1242,
        y: 699,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 1781,
        y: 1263,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1242,
        y: 855,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1242,
        y: 995,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 1865,
        y: 1084,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 854,
        y: 438,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1018,
        y: 438,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 1462,
        y: 699,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 1446,
        y: 995,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-chute-01x.img": {
      frame: {
        x: 1470,
        y: 855,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 854,
        y: 577,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 1921,
        y: 588,
        w: 35,
        h: 35
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 35,
        h: 35
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1955,
        y: 320,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1955,
        y: 436,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-snow-02.img": {
      frame: {
        x: 1022,
        y: 577,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 1132,
        y: 577,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 937,
        y: 730,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1041,
        y: 730,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1926,
        y: 1263,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 937,
        y: 834,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    },
    "map-snow-03.img": {
      frame: {
        x: 937,
        y: 928,
        w: 158,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 3,
        w: 158,
        h: 90
      },
      sourceSize: {
        w: 180,
        h: 96
      }
    },
    "map-snow-01.img": {
      frame: {
        x: 1099,
        y: 928,
        w: 108,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 20,
        w: 108,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 937,
        y: 1022,
        w: 144,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 80
      }
    },
    "map-airdrop-01x.img": {
      frame: {
        x: 1142,
        y: 730,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 1085,
        y: 1022,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-02x.img": {
      frame: {
        x: 1267,
        y: 1136,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 1351,
        y: 1136,
        w: 78,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 78
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 1433,
        y: 1136,
        w: 76,
        h: 77
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 77
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1267,
        y: 1220,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 1513,
        y: 1136,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 1355,
        y: 1220,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 1169,
        y: 1022,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 1941,
        y: 1084,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 1431,
        y: 1220,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 1515,
        y: 1220,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-snow-06.img": {
      frame: {
        x: 1267,
        y: 1300,
        w: 90,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 90,
        h: 58
      },
      sourceSize: {
        w: 96,
        h: 64
      }
    },
    "map-snow-05.img": {
      frame: {
        x: 1361,
        y: 1300,
        w: 46,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 5,
        w: 46,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 1411,
        y: 1300,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-snow-04.img": {
      frame: {
        x: 1485,
        y: 1300,
        w: 51,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 7,
        w: 51,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 1540,
        y: 1300,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1267,
        y: 1362,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1383,
        y: 1362,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1941,
        y: 1156,
        w: 43,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 43,
        h: 40
      },
      sourceSize: {
        w: 43,
        h: 43
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 938,
        y: 577,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    }
  }
}];
let Js = [{
  meta: {
    image: "faction-0-50-b6447309.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-building-bridge-xlg-floor.img": {
      frame: {
        x: 654,
        y: 2,
        w: 1232,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1232,
        h: 480
      },
      sourceSize: {
        w: 1232,
        h: 480
      }
    },
    "map-complex-warehouse-floor-04.img": {
      frame: {
        x: 2,
        y: 2,
        w: 648,
        h: 1024
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 648,
        h: 1024
      },
      sourceSize: {
        w: 648,
        h: 1024
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 654,
        y: 486,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 1042,
        y: 486,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 1447,
        y: 486,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1030,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 472,
        y: 1030,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 862,
        y: 1030,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 980,
        y: 1030,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1014,
        y: 1030,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 1196,
        y: 1030,
        w: 202,
        h: 158
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 202,
        h: 158
      },
      sourceSize: {
        w: 202,
        h: 158
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1402,
        y: 1030,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-statue-01.img": {
      frame: {
        x: 1584,
        y: 1030,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-stone-03f.img": {
      frame: {
        x: 1732,
        y: 1030,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 1348,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 230,
        y: 1348,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 306,
        y: 1348,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 382,
        y: 1348,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 458,
        y: 1348,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-airdrop-04.img": {
      frame: {
        x: 640,
        y: 1348,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1745,
        y: 811,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-crate-13.img": {
      frame: {
        x: 904,
        y: 1348,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-crate-12.img": {
      frame: {
        x: 1028,
        y: 1348,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1152,
        y: 1348,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1236,
        y: 1348,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1320,
        y: 1348,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1354,
        y: 1348,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-stone-res-02f.img": {
      frame: {
        x: 654,
        y: 922,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 758,
        y: 922,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 818,
        y: 922,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1080,
        y: 922,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-statue-top-02.img": {
      frame: {
        x: 1168,
        y: 922,
        w: 143,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 65,
        w: 143,
        h: 74
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-statue-top-01.img": {
      frame: {
        x: 1315,
        y: 922,
        w: 143,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 65,
        w: 143,
        h: 74
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 1462,
        y: 922,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 1538,
        y: 922,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 1614,
        y: 922,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-chest-03f.img": {
      frame: {
        x: 1447,
        y: 811,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 1521,
        y: 811,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 1575,
        y: 811,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1629,
        y: 811,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-airdrop-03.img": {
      frame: {
        x: 772,
        y: 1348,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    }
  }
}];
let Ks = [{
  meta: {
    image: "desert-0-50-978893d6.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-complex-warehouse-floor-05.img": {
      frame: {
        x: 662,
        y: 2,
        w: 262,
        h: 470
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 502,
        w: 262,
        h: 470
      },
      sourceSize: {
        w: 648,
        h: 1024
      }
    },
    "map-building-saloon-floor-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 656,
        h: 656
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 656,
        h: 656
      },
      sourceSize: {
        w: 656,
        h: 656
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 928,
        y: 2,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 2,
        y: 662,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-building-saloon-cellar-01.img": {
      frame: {
        x: 407,
        y: 662,
        w: 528,
        h: 336
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 528,
        h: 336
      },
      sourceSize: {
        w: 528,
        h: 336
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 1316,
        y: 2,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1053,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 1316,
        y: 327,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-building-saloon-ceiling-01.img": {
      frame: {
        x: 1316,
        y: 645,
        w: 314,
        h: 313
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 314,
        h: 313
      },
      sourceSize: {
        w: 328,
        h: 328
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 939,
        y: 662,
        w: 200,
        h: 312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 312
      },
      sourceSize: {
        w: 200,
        h: 312
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1143,
        y: 662,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-statue-chamber-floor-01.img": {
      frame: {
        x: 472,
        y: 1053,
        w: 126,
        h: 273
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 14,
        w: 126,
        h: 273
      },
      sourceSize: {
        w: 128,
        h: 288
      }
    },
    "map-tree-05c.img": {
      frame: {
        x: 602,
        y: 1053,
        w: 238,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 3,
        w: 238,
        h: 250
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 928,
        y: 438,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1110,
        y: 438,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-statue-03.img": {
      frame: {
        x: 662,
        y: 476,
        w: 147,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 147,
        h: 144
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-statue-04.img": {
      frame: {
        x: 844,
        y: 1053,
        w: 147,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 147,
        h: 144
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-stone-03b.img": {
      frame: {
        x: 995,
        y: 1053,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1140,
        y: 1053,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 1634,
        y: 645,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1368,
        y: 1053,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-tree-06.img": {
      frame: {
        x: 1550,
        y: 1053,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bush-res-05.img": {
      frame: {
        x: 1110,
        y: 596,
        w: 32,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 22,
        w: 32,
        h: 28
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 813,
        y: 476,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 844,
        y: 1201,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 904,
        y: 1201,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    },
    "map-building-saloon-ceiling-02.img": {
      frame: {
        x: 1316,
        y: 962,
        w: 96,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 80
      },
      sourceSize: {
        w: 96,
        h: 80
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1416,
        y: 962,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 1504,
        y: 962,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-05.img": {
      frame: {
        x: 1580,
        y: 962,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 1656,
        y: 962,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-18.img": {
      frame: {
        x: 1166,
        y: 1201,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 1261,
        y: 662,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-building-archway-ceiling-01.img": {
      frame: {
        x: 1242,
        y: 1201,
        w: 336,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 336,
        h: 64
      },
      sourceSize: {
        w: 336,
        h: 64
      }
    },
    "map-stone-06.img": {
      frame: {
        x: 1582,
        y: 1201,
        w: 144,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 64
      },
      sourceSize: {
        w: 144,
        h: 64
      }
    },
    "map-case-meteor-res-01.img": {
      frame: {
        x: 2,
        y: 1371,
        w: 67,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 67,
        h: 60
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-stone-res-01b.img": {
      frame: {
        x: 73,
        y: 1371,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-chest-03d.img": {
      frame: {
        x: 1634,
        y: 904,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-case-meteor-01.img": {
      frame: {
        x: 137,
        y: 1371,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 1261,
        y: 734,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-archway-res-01.img": {
      frame: {
        x: 211,
        y: 1371,
        w: 180,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 48
      },
      sourceSize: {
        w: 180,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 395,
        y: 1371,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 511,
        y: 1371,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1261,
        y: 788,
        w: 43,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 43,
        h: 40
      },
      sourceSize: {
        w: 43,
        h: 43
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1634,
        y: 785,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    }
  }
}];
let Qs = [{
  meta: {
    image: "gradient-0-50-6480bd5e.png",
    size: {
      w: 512,
      h: 512
    },
    scale: 0.5
  },
  frames: {
    "map-barrel-res-01.img": {
      frame: {
        x: 124,
        y: 2,
        w: 114,
        h: 109
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 10,
        w: 114,
        h: 109
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-building-club-gradient-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 118,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 4,
        w: 118,
        h: 130
      },
      sourceSize: {
        w: 146,
        h: 140
      }
    },
    "map-building-mansion-gradient-01.img": {
      frame: {
        x: 2,
        y: 136,
        w: 118,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 118,
        h: 102
      },
      sourceSize: {
        w: 124,
        h: 110
      }
    },
    "map-plane-01.img": {
      frame: {
        x: 124,
        y: 136,
        w: 92,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 5,
        w: 92,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-plane-02.img": {
      frame: {
        x: 242,
        y: 2,
        w: 42,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 1,
        w: 42,
        h: 85
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bush-04cb.img": {
      frame: {
        x: 147,
        y: 242,
        w: 71,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 71,
        h: 67
      },
      sourceSize: {
        w: 75,
        h: 75
      }
    },
    "map-bush-01cb.img": {
      frame: {
        x: 288,
        y: 82,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-light-01.img": {
      frame: {
        x: 288,
        y: 158,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-04.img": {
      frame: {
        x: 2,
        y: 242,
        w: 71,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 71,
        h: 68
      },
      sourceSize: {
        w: 75,
        h: 75
      }
    },
    "map-bush-01.img": {
      frame: {
        x: 77,
        y: 242,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-03.img": {
      frame: {
        x: 288,
        y: 2,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 76,
        h: 76
      }
    }
  }
}];
let Ys = [{
  meta: {
    image: "savannah-0-50-d5ec1868.png",
    size: {
      w: 1024,
      h: 1024
    },
    scale: 0.5
  },
  frames: {
    "map-tree-12.img": {
      frame: {
        x: 36,
        y: 2,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-stone-07.img": {
      frame: {
        x: 296,
        y: 2,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-stone-res-07.img": {
      frame: {
        x: 2,
        y: 270,
        w: 206,
        h: 206
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 206,
        h: 206
      },
      sourceSize: {
        w: 210,
        h: 210
      }
    },
    "map-building-perch-ceiling.img": {
      frame: {
        x: 212,
        y: 270,
        w: 185,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 10,
        w: 185,
        h: 176
      },
      sourceSize: {
        w: 200,
        h: 192
      }
    },
    "map-building-perch-floor.img": {
      frame: {
        x: 556,
        y: 2,
        w: 200,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 160
      },
      sourceSize: {
        w: 200,
        h: 160
      }
    },
    "map-tree-03sv.img": {
      frame: {
        x: 556,
        y: 166,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-wall-08-grassy.img": {
      frame: {
        x: 688,
        y: 166,
        w: 26,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-wall-08-grassy-res.img": {
      frame: {
        x: 718,
        y: 166,
        w: 14,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 14,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 556,
        y: 298,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 640,
        y: 298,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 724,
        y: 298,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bush-res-01sv.img": {
      frame: {
        x: 690,
        y: 417,
        w: 26,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 26,
        w: 26,
        h: 20
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-brush-01sv.img": {
      frame: {
        x: 435,
        y: 270,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-brush-02sv.img": {
      frame: {
        x: 2,
        y: 480,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-perch-res-01.img": {
      frame: {
        x: 100,
        y: 480,
        w: 92,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 23,
        w: 92,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bush-01sv.img": {
      frame: {
        x: 196,
        y: 480,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-21.img": {
      frame: {
        x: 272,
        y: 480,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-propane-01.img": {
      frame: {
        x: 556,
        y: 417,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-wall-03-grassy.img": {
      frame: {
        x: 736,
        y: 166,
        w: 20,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 20,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-wall-03-grassy-res.img": {
      frame: {
        x: 736,
        y: 218,
        w: 14,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 14,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-tree-res-12.img": {
      frame: {
        x: 608,
        y: 417,
        w: 42,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 5,
        w: 42,
        h: 38
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-brush-res-02sv.img": {
      frame: {
        x: 654,
        y: 417,
        w: 32,
        h: 33
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 32,
        h: 33
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 401,
        y: 270,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    }
  }
}];
let eo = [{
  meta: {
    image: "main-0-50-ce7d0d26.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 854,
        y: 2,
        w: 752,
        h: 464
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 752,
        h: 464
      },
      sourceSize: {
        w: 752,
        h: 464
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 730,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 390,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 746,
        y: 730,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1151,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1166,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 359,
        y: 1166,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 733,
        y: 1166,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1154,
        y: 1166,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1539,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 472,
        y: 1539,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1325,
        y: 730,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 862,
        y: 1539,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 1443,
        y: 730,
        w: 160,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 304
      },
      sourceSize: {
        w: 160,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1510,
        y: 1166,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 854,
        y: 470,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 1210,
        y: 470,
        w: 360,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 248
      },
      sourceSize: {
        w: 360,
        h: 248
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1298,
        y: 1539,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1610,
        y: 2,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1857,
        w: 915,
        h: 177
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 915,
        h: 177
      },
      sourceSize: {
        w: 915,
        h: 177
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1610,
        y: 186,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 921,
        y: 1857,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1610,
        y: 365,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 1087,
        y: 1857,
        w: 202,
        h: 158
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 202,
        h: 158
      },
      sourceSize: {
        w: 202,
        h: 158
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1774,
        y: 1190,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1475,
        y: 1857,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 1610,
        y: 529,
        w: 64,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 152
      },
      sourceSize: {
        w: 64,
        h: 152
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 2,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 142,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 1774,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 1850,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 1926,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 422,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1774,
        y: 561,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 695,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1878,
        y: 695,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1774,
        y: 816,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1938,
        y: 422,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1956,
        y: 561,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1858,
        y: 816,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1298,
        y: 1729,
        w: 289,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 289,
        h: 97
      },
      sourceSize: {
        w: 305,
        h: 97
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 1774,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 115,
        h: 97
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1875,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1774,
        y: 1036,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1834,
        y: 1036,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 1922,
        y: 1036,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 1774,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 1828,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1882,
        y: 1136,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1293,
        y: 1857,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    }
  }
}, {
  meta: {
    image: "main-1-50-8d63890d.png",
    size: {
      w: 1024,
      h: 512
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 158,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 135,
        w: 354,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 161,
        w: 354,
        h: 126
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 360,
        y: 2,
        w: 568,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 568,
        h: 120
      },
      sourceSize: {
        w: 568,
        h: 120
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 360,
        y: 126,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    }
  }
}];
let to = [{
  meta: {
    image: "potato-0-50-85f694d4.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 854,
        y: 2,
        w: 752,
        h: 464
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 752,
        h: 464
      },
      sourceSize: {
        w: 752,
        h: 464
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 730,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 390,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 746,
        y: 730,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1151,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1166,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 359,
        y: 1166,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 733,
        y: 1166,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1154,
        y: 1166,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1539,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 472,
        y: 1539,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1325,
        y: 730,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 862,
        y: 1539,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 1443,
        y: 730,
        w: 160,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 304
      },
      sourceSize: {
        w: 160,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1510,
        y: 1166,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 854,
        y: 470,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 1210,
        y: 470,
        w: 360,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 248
      },
      sourceSize: {
        w: 360,
        h: 248
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1298,
        y: 1539,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1610,
        y: 2,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1857,
        w: 915,
        h: 177
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 915,
        h: 177
      },
      sourceSize: {
        w: 915,
        h: 177
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1610,
        y: 186,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 921,
        y: 1857,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1610,
        y: 365,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 1087,
        y: 1857,
        w: 202,
        h: 158
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 202,
        h: 158
      },
      sourceSize: {
        w: 202,
        h: 158
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1293,
        y: 1857,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1475,
        y: 1857,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-potato-03.img": {
      frame: {
        x: 1962,
        y: 816,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 2,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 142,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 1774,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 1850,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 1926,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 422,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1774,
        y: 561,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 695,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1878,
        y: 695,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1774,
        y: 816,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1938,
        y: 422,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1956,
        y: 561,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1858,
        y: 816,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1298,
        y: 1729,
        w: 289,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 289,
        h: 97
      },
      sourceSize: {
        w: 305,
        h: 97
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1774,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 1875,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 115,
        h: 97
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1774,
        y: 1036,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1834,
        y: 1036,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 1922,
        y: 1036,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 1774,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 1828,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1882,
        y: 1136,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1774,
        y: 1190,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-potato-res-01.img": {
      frame: {
        x: 1890,
        y: 1190,
        w: 46,
        h: 45
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 16,
        w: 46,
        h: 45
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-potato-01.img": {
      frame: {
        x: 1962,
        y: 695,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-potato-02.img": {
      frame: {
        x: 1962,
        y: 735,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 1610,
        y: 529,
        w: 64,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 152
      },
      sourceSize: {
        w: 64,
        h: 152
      }
    }
  }
}, {
  meta: {
    image: "potato-1-50-8d63890d.png",
    size: {
      w: 1024,
      h: 512
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 158,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 135,
        w: 354,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 161,
        w: 354,
        h: 126
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 360,
        y: 2,
        w: 568,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 568,
        h: 120
      },
      sourceSize: {
        w: 568,
        h: 120
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 360,
        y: 126,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    }
  }
}];
let io = [{
  meta: {
    image: "woods-0-50-8fe970b8.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-hatchet-compartment-floor-01.img": {
      frame: {
        x: 358,
        y: 2,
        w: 592,
        h: 463
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 592,
        h: 463
      },
      sourceSize: {
        w: 592,
        h: 464
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 352,
        h: 674
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 674
      },
      sourceSize: {
        w: 352,
        h: 688
      }
    },
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 954,
        y: 2,
        w: 352,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 352
      },
      sourceSize: {
        w: 352,
        h: 352
      }
    },
    "map-bunker-hatchet-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 680,
        w: 365,
        h: 349
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 365,
        h: 349
      },
      sourceSize: {
        w: 369,
        h: 353
      }
    },
    "map-bunker-hatchet-compartment-floor-02c.img": {
      frame: {
        x: 371,
        y: 680,
        w: 128,
        h: 328
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 128,
        h: 328
      },
      sourceSize: {
        w: 129,
        h: 337
      }
    },
    "map-building-pavilion-ceiling-01.img": {
      frame: {
        x: 954,
        y: 358,
        w: 315,
        h: 308
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 315,
        h: 308
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-bunker-hatchet-compartment-floor-02a.img": {
      frame: {
        x: 503,
        y: 680,
        w: 449,
        h: 296
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 449,
        h: 296
      },
      sourceSize: {
        w: 449,
        h: 297
      }
    },
    "map-building-pavilion-floor-01.img": {
      frame: {
        x: 956,
        y: 680,
        w: 288,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 288
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 1033,
        w: 160,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 272
      },
      sourceSize: {
        w: 160,
        h: 272
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 166,
        y: 1033,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-hatchet-compartment-floor-03b.img": {
      frame: {
        x: 426,
        y: 1033,
        w: 367,
        h: 255
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 367,
        h: 255
      },
      sourceSize: {
        w: 369,
        h: 257
      }
    },
    "map-bunker-hatchet-compartment-floor-03d.img": {
      frame: {
        x: 797,
        y: 1033,
        w: 191,
        h: 255
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 191,
        h: 255
      },
      sourceSize: {
        w: 193,
        h: 265
      }
    },
    "map-bunker-hatchet-compartment-ceiling-02.img": {
      frame: {
        x: 992,
        y: 1033,
        w: 256,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 248
      },
      sourceSize: {
        w: 256,
        h: 248
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 1310,
        y: 2,
        w: 248,
        h: 243
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 248,
        h: 243
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-hatchet-compartment-ceiling-01.img": {
      frame: {
        x: 358,
        y: 469,
        w: 256,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 200
      },
      sourceSize: {
        w: 256,
        h: 200
      }
    },
    "map-bunker-hatchet-chamber-floor-01c.img": {
      frame: {
        x: 1310,
        y: 249,
        w: 113,
        h: 185
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 113,
        h: 185
      },
      sourceSize: {
        w: 113,
        h: 193
      }
    },
    "map-bunker-hatchet-compartment-floor-02b.img": {
      frame: {
        x: 2,
        y: 1309,
        w: 336,
        h: 161
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 336,
        h: 161
      },
      sourceSize: {
        w: 345,
        h: 161
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 1310,
        y: 438,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bunker-hatchet-compartment-ceiling-03.img": {
      frame: {
        x: 618,
        y: 469,
        w: 304,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 304,
        h: 152
      },
      sourceSize: {
        w: 304,
        h: 152
      }
    },
    "map-bunker-hatchet-chamber-ceiling-01.img": {
      frame: {
        x: 1310,
        y: 602,
        w: 208,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 208,
        h: 152
      },
      sourceSize: {
        w: 208,
        h: 152
      }
    },
    "map-bunker-hatchet-compartment-floor-03c.img": {
      frame: {
        x: 1427,
        y: 249,
        w: 97,
        h: 141
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 97,
        h: 141
      },
      sourceSize: {
        w: 97,
        h: 153
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 1310,
        y: 758,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 1474,
        y: 438,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 1310,
        y: 902,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 1310,
        y: 1034,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 1310,
        y: 1166,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 1455,
        y: 758,
        w: 96,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 128
      },
      sourceSize: {
        w: 96,
        h: 128
      }
    },
    "map-woodpile-res-02.img": {
      frame: {
        x: 618,
        y: 625,
        w: 64,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 31
      },
      sourceSize: {
        w: 64,
        h: 32
      }
    },
    "map-bunker-hatchet-compartment-floor-02d.img": {
      frame: {
        x: 535,
        y: 1309,
        w: 191,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 191,
        h: 105
      },
      sourceSize: {
        w: 201,
        h: 105
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 1442,
        y: 902,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-building-pavilion-res-01.img": {
      frame: {
        x: 1442,
        y: 1034,
        w: 92,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 82,
        y: 79,
        w: 92,
        h: 98
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-woodpile-02.img": {
      frame: {
        x: 730,
        y: 1309,
        w: 192,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 96
      },
      sourceSize: {
        w: 192,
        h: 96
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 1442,
        y: 1166,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bunker-hatchet-chamber-floor-01b.img": {
      frame: {
        x: 926,
        y: 1309,
        w: 97,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 89
      },
      sourceSize: {
        w: 97,
        h: 89
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 1027,
        y: 1309,
        w: 144,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 80
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 1175,
        y: 1309,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 1259,
        y: 1309,
        w: 78,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 78
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 1341,
        y: 1309,
        w: 76,
        h: 77
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 77
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 1421,
        y: 1309,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-crate-19.img": {
      frame: {
        x: 2,
        y: 1474,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 78,
        y: 1474,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 154,
        y: 1474,
        w: 71,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 71,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 229,
        y: 1474,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 1248,
        y: 680,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 299,
        y: 1474,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 383,
        y: 1474,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-tree-switch-03.img": {
      frame: {
        x: 1248,
        y: 752,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-tree-switch-04.img": {
      frame: {
        x: 1248,
        y: 812,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-tree-switch-01.img": {
      frame: {
        x: 1248,
        y: 872,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-tree-switch-02.img": {
      frame: {
        x: 1499,
        y: 1309,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 447,
        y: 1474,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 1252,
        y: 1033,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1427,
        y: 394,
        w: 43,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 43,
        h: 40
      },
      sourceSize: {
        w: 43,
        h: 43
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 1474,
        y: 394,
        w: 35,
        h: 35
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 35,
        h: 35
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bunker-hatchet-compartment-floor-03a.img": {
      frame: {
        x: 342,
        y: 1309,
        w: 189,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 189,
        h: 113
      },
      sourceSize: {
        w: 193,
        h: 113
      }
    }
  }
}];
let ro = [{
  meta: {
    image: "cobalt-0-50-1bced975.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-twins-chamber-floor-01.img": {
      frame: {
        x: 854,
        y: 2,
        w: 740,
        h: 580
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 62,
        w: 740,
        h: 580
      },
      sourceSize: {
        w: 832,
        h: 704
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 2,
        y: 730,
        w: 752,
        h: 464
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 752,
        h: 464
      },
      sourceSize: {
        w: 752,
        h: 464
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 758,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1114,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1198,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 359,
        y: 1198,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 733,
        y: 1198,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 1089,
        y: 1198,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 1288,
        y: 730,
        w: 160,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 304
      },
      sourceSize: {
        w: 160,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1452,
        y: 730,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 1598,
        y: 2,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 2,
        y: 1571,
        w: 360,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 248
      },
      sourceSize: {
        w: 360,
        h: 248
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 260,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 366,
        y: 1571,
        w: 915,
        h: 177
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 915,
        h: 177
      },
      sourceSize: {
        w: 915,
        h: 177
      }
    },
    "map-bunker-twins-chamber-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 444,
        w: 256,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 176
      },
      sourceSize: {
        w: 256,
        h: 176
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1762,
        y: 260,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 624,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1764,
        y: 624,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 802,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 1862,
        y: 260,
        w: 64,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 152
      },
      sourceSize: {
        w: 64,
        h: 152
      }
    },
    "map-stone-03cb.img": {
      frame: {
        x: 1598,
        y: 958,
        w: 142,
        h: 141
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 142,
        h: 141
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1744,
        y: 958,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 1598,
        y: 1103,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 854,
        y: 586,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 158,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-tree-03cb.img": {
      frame: {
        x: 1818,
        y: 802,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 1212,
        y: 586,
        w: 354,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 161,
        w: 354,
        h: 126
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 1285,
        y: 1571,
        w: 568,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 568,
        h: 120
      },
      sourceSize: {
        w: 568,
        h: 120
      }
    },
    "map-bunker-twins-ceiling-01.img": {
      frame: {
        x: 1762,
        y: 1103,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 1242,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "part-class-shell-03b.img": {
      frame: {
        x: 1904,
        y: 1399,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 26,
        h: 32
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1866,
        y: 1103,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1702,
        y: 1242,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1736,
        y: 1242,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1770,
        y: 1242,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-stone-res-02cb.img": {
      frame: {
        x: 1598,
        y: 1363,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1598,
        y: 1467,
        w: 289,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 289,
        h: 97
      },
      sourceSize: {
        w: 305,
        h: 97
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 1702,
        y: 1363,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 115,
        h: 97
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1803,
        y: 1363,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-class-shell-03b.img": {
      frame: {
        x: 1874,
        y: 1242,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-03a.img": {
      frame: {
        x: 1486,
        y: 730,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-01a.img": {
      frame: {
        x: 1486,
        y: 810,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-01b.img": {
      frame: {
        x: 1486,
        y: 890,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-02a.img": {
      frame: {
        x: 1857,
        y: 1571,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-02b.img": {
      frame: {
        x: 2,
        y: 1823,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-crate-assault.img": {
      frame: {
        x: 82,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-tank.img": {
      frame: {
        x: 160,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-scout.img": {
      frame: {
        x: 238,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-sniper.img": {
      frame: {
        x: 316,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-healer.img": {
      frame: {
        x: 394,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-demo.img": {
      frame: {
        x: 472,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-stone-01cb.img": {
      frame: {
        x: 550,
        y: 1823,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-class-crate-03.img": {
      frame: {
        x: 626,
        y: 1823,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-res-01.img": {
      frame: {
        x: 1525,
        y: 1198,
        w: 66,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 6,
        w: 66,
        h: 67
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-stone-res-01cb.img": {
      frame: {
        x: 1288,
        y: 1038,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "part-class-shell-01a.img": {
      frame: {
        x: 1858,
        y: 563,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-class-shell-02a.img": {
      frame: {
        x: 1891,
        y: 1467,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-class-shell-03a.img": {
      frame: {
        x: 1352,
        y: 1038,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-class-shell-01b.img": {
      frame: {
        x: 1910,
        y: 563,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 26,
        h: 32
      }
    },
    "part-class-shell-02b.img": {
      frame: {
        x: 1904,
        y: 1363,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 26,
        h: 32
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1858,
        y: 444,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    }
  }
}];
let ao = {
  loadout: Hs,
  shared: Gs,
  halloween: Us,
  snow: $s,
  faction: Js,
  desert: Ks,
  gradient: Qs,
  savannah: Ys,
  main: eo,
  potato: to,
  woods: io,
  cobalt: ro
};
let xt = {
  low: ao,
  high: Ws
};
function so(u, e) {
  let i = G.from(e).baseTexture;
  let r = 0;
  if (!i.valid) {
    i.on("loaded", a => {
      console.log("Loaded texture", e);
      u.prepare.upload(a);
    });
    i.on("error", a => {
      console.log("BaseTex load error, retrying", e);
      if (r++ <= 3) {
        setTimeout(() => {
          if (a.source) {
            a.updateSourceImage("");
            a.updateSourceImage(e.substring(5, e.length));
          }
        }, (r - 1) * 1000);
      }
    });
  }
  return i;
}
function oo(u, e) {
  let t = so(u, `assets/${e.meta.image}`);
  let i = new fr(t, e);
  i.resolution = t.resolution;
  i.parse();
  return i;
}
function lo(u, e) {
  let t = Math.min(window.screen.width, window.screen.height);
  let i = Math.max(window.screen.width, window.screen.height);
  t *= window.devicePixelRatio;
  i *= window.devicePixelRatio;
  let r = i < 1366 && t < 768;
  let a = e.get("highResTex") ? "high" : "low";
  if (r || v.mobile && !v.tablet || u.type == ot.CANVAS) {
    a = "low";
  }
  if (u.type == ot.WEBGL) {
    let l = u.gl;
    if (l.getParameter(l.MAX_TEXTURE_SIZE) < 4096) {
      a = "low";
    }
  }
  console.log("TextureRes", a, "screenDims", window.screen.width, window.screen.height);
  return a;
}
class mo {
  letructor(e, t, i) {
    this.renderer = e;
    this.audioManager = t;
    this.config = i;
    this.textureRes = lo(this.renderer, this.config);
    e.prepare.limiter.maxItemsPerFrame = 1;
  }
  atlases = {};
  loadTicker = 0;
  loaded = false;
  textureRes;
  mapName;
  preloadMap;
  isAtlasLoaded(e) {
    return this.atlases[e]?.loaded;
  }
  atlasTexturesLoaded(e) {
    if (!this.isAtlasLoaded(e)) {
      return false;
    }
    let t = this.atlases[e];
    for (let i = 0; i < t.spritesheets.length; i++) {
      if (!t.spritesheets[i].baseTexture.valid) {
        return false;
      }
    }
    return true;
  }
  loadAtlas(e) {
    if (this.isAtlasLoaded(e)) {
      return;
    }
    console.log("Load atlas", e);
    this.atlases[e] = this.atlases[e] || {
      loaded: false,
      spritesheets: []
    };
    let t = xt[this.textureRes] || xt.low;
    if (!Ge.main.assets.atlases.includes(e)) {
      t = xt.high;
    }
    let i = t[e];
    for (let r = 0; r < i.length; r++) {
      let a = oo(this.renderer, i[r]);
      this.atlases[e].spritesheets.push(a);
    }
    this.atlases[e].loaded = true;
  }
  unloadAtlas(e) {
    if (!this.isAtlasLoaded(e)) {
      return;
    }
    console.log("Unload atlas", e);
    let t = this.atlases[e];
    for (let i = 0; i < t.spritesheets.length; i++) {
      t.spritesheets[i].destroy(true);
    }
    t.loaded = false;
    t.spritesheets = [];
  }
  loadMapAssets(e) {
    console.log("Load map", e);
    let t = Ge[e];
    if (!t) {
      throw new Error(`Failed loading mapDef ${this.mapName}`);
    }
    let i = t.assets.atlases;
    let r = Object.keys(this.atlases);
    for (let a = 0; a < r.length; a++) {
      let l = r[a];
      if (!i.includes(l)) {
        this.unloadAtlas(l);
      }
    }
    for (let a = 0; a < i.length; a++) {
      let l = i[a];
      if (!this.isAtlasLoaded(l)) {
        this.loadAtlas(l);
      }
    }
    setTimeout(() => {
      this.audioManager.preloadSounds();
      let a = t.assets.audio;
      for (let l = 0; l < a.length; l++) {
        let s = a[l];
        let m = fe.Sounds[s.channel];
        if (!m) {
          let p = fe.Channels[s.channel];
          m = fe.Sounds[p.list];
        }
        let d = m[s.name];
        let h = {
          canCoalesce: d.canCoalesce,
          channels: d.maxInstances,
          volume: d.volume
        };
        this.audioManager.loadSound({
          name: s.name,
          channel: s.channel,
          path: d.path,
          options: h
        });
      }
    }, 0);
  }
  update(e) {
    if (!this.loaded) {
      this.loadTicker += e;
      let t = !this.preloadMap;
      let i = Object.keys(this.atlases);
      for (let r = 0; r < i.length; r++) {
        let a = i[r];
        if (!this.atlasTexturesLoaded(a)) {
          t = false;
        }
      }
      if (!this.audioManager.allLoaded()) {
        t = false;
      }
      if (t) {
        console.log("Resource load complete", this.loadTicker.toFixed(2));
        this.loaded = true;
      }
    }
  }
}
var Ii = {
  na: {
    https: true,
    address: "usr.mathsiscoolfun.com:8001",
    l10n: "index-north-america"
  },
  eu: {
    https: true,
    address: "eur.mathsiscoolfun.com:8001",
    l10n: "index-europe"
  },
  asia: {
    https: true,
    address: "asr.mathsiscoolfun.com:8001",
    l10n: "index-asia"
  },
  sa: {
    https: true,
    address: "sa.mathsiscoolfun.com:8001",
    l10n: "index-south-america"
  }
};
class no {
  letructor(e, t) {
    this.config = e;
    this.localization = t;
    this.config = e;
    this.localization = t;
  }
  info = {};
  loaded = false;
  load() {
    let e = this.localization.getLocale();
    let t = Ue.resolveUrl(`/api/site_info?language=${e}`);
    let i = c("#server-opts");
    let r = c("#team-server-opts");
    for (let a in Ii) {
      let l = Ii[a];
      let s = this.localization.translate(l.l10n);
      let m = `<option value='${a}' data-l10n='${l.l10n}' data-label='${s}'>${s}</option>`;
      i.append(m);
      r.append(m);
    }
    c.ajax(t).done((a, l) => {
      this.info = a || {};
      this.loaded = true;
      this.updatePageFromInfo();
    });
  }
  getGameModeStyles() {
    let e = {
      [Se.Solo]: "solo",
      [Se.Duo]: "duo",
      [Se.Squad]: "squad"
    };
    let t = [];
    let i = this.info.modes || [];
    for (let r = 0; r < i.length; r++) {
      let a = i[r];
      let l = (Ge[a.mapName] || Ge.main).desc;
      let s = l.buttonText ? l.buttonText : e[a.teamMode];
      t.push({
        icon: l.icon,
        buttonCss: l.buttonCss,
        buttonText: s,
        enabled: a.enabled
      });
    }
    return t;
  }
  updatePageFromInfo() {
    if (this.loaded) {
      let e = this.getGameModeStyles();
      for (let m = 0; m < e.length; m++) {
        let d = e[m];
        let h = `index-play-${d.buttonText}`;
        let p = c(`#btn-start-mode-${m}`);
        p.data("l10n", h);
        p.html(this.localization.translate(h));
        if (d.icon || d.buttonCss) {
          if (m == 0) {
            p.addClass("btn-custom-mode-no-indent");
          } else {
            p.addClass("btn-custom-mode-main");
          }
          p.addClass(d.buttonCss);
          p.css({
            "background-image": `url(${d.icon})`
          });
        }
        let w = c(`#btn-team-queue-mode-${m}`);
        if (w.length) {
          let f = `index-${d.buttonText}`;
          w.data("l10n", f);
          w.html(this.localization.translate(f));
          if (d.icon) {
            w.addClass("btn-custom-mode-select");
            w.css({
              "background-image": `url(${d.icon})`
            });
          }
        }
        if (!d.enabled) {
          p.addClass("btn-disabled-main");
        }
      }
      let t = this.info.pops;
      if (t) {
        let m = Object.keys(t);
        for (let d = 0; d < m.length; d++) {
          let h = m[d];
          let p = t[h];
          let w = c("#server-opts").children(`option[value="${h}"]`);
          let f = this.localization.translate("index-players");
          w.text(`${w.data("label")} [${p.playerCount} ${f}]`);
        }
      }
      let i = false;
      let r = c("#featured-streamers");
      let a = c(".streamer-list");
      if (!v.mobile && this.info.twitch) {
        a.empty();
        for (let m = 0; m < this.info.twitch.length; m++) {
          let d = this.info.twitch[m];
          let h = c("#featured-streamer-template").clone();
          h.attr("class", "featured-streamer streamer-tooltip").attr("id", "");
          let p = h.find("a");
          let w = this.localization.translate(d.viewers == 1 ? "index-viewer" : "index-viewers");
          p.html(`${d.name} <span>${d.viewers} ${w}</span>`);
          p.css("background-image", `url(${d.img})`);
          p.attr("href", d.url);
          a.append(h);
          i = true;
        }
      }
      r.css("visibility", i ? "visible" : "hidden");
      let l = c("#featured-youtuber");
      let s = this.info.youtube;
      if (s) {
        c(".btn-youtuber").attr("href", this.info.youtube.link).html(this.info.youtube.name);
      }
      l.css("display", s ? "block" : "none");
    }
  }
}
function mr(u) {
  let e = {
    width: 64,
    height: 64
  };
  return {
    width: Math.round(e.width * Number(u.size) / 4) * 4,
    height: Math.round(e.height * Number(u.size) / 4) * 4
  };
}
function nr(u) {
  let e = _t[u.type];
  let t = mr(u);
  let i = g.rgbToHex(g.intToRgb(u.color));
  let r = u.stroke;
  let a = e.code.replace(/white/g, i);
  a = a.replace(/stroke-width=".5"/g, `stroke-width="${r}"`);
  a = a.replace(/width="64"/g, `width="${t.width}"`);
  a = a.replace(/height="64"/g, `height="${t.height}"`);
  return `url('data:image/svg+xml;utf8,${a = a.replace(/#/g, "%23")}')`;
}
function ho(u) {
  let e = mr(u);
  return `${nr(u)} ${e.width / 2} ${e.height / 2}, crosshair`;
}
let Ve = {
  getCursorURL: function (u) {
    return nr(u);
  },
  setElemCrosshair: function (u, e) {
    let t = "crosshair";
    let i = _t[e.type];
    if (i) {
      t = i.cursor ? i.cursor : ho(e);
    }
    u.css({
      cursor: t
    });
  },
  setGameCrosshair: function (u) {
    Ve.setElemCrosshair(c("#game-area-wrapper"), u);
    let e = _t[u.type];
    let t = !e || e.cursor ? "pointer" : "inherit";
    c(".ui-zoom, .ui-medical, .ui-settings-button, .ui-weapon-switch").css({
      cursor: t
    });
  }
};
class de {
  letructor(e) {
    this.selector = e;
    e.find(".close").click(t => {
      this.hide();
    });
    this.modalCloseListener = t => {
      if (c(t.target).closest(".modal-close").length == 0 && (c(t.target).is(this.selector) || !this.checkSelector)) {
        t.stopPropagation();
        this.hide();
      }
    };
  }
  checkSelector = true;
  skipFade = false;
  visible = false;
  onShowFn = function () {};
  onHideFn = function () {};
  modalCloseListener;
  onShow(e) {
    this.onShowFn = e;
  }
  onHide(e) {
    this.onHideFn = e;
  }
  isVisible() {
    return this.visible;
  }
  show(e) {
    if (!this.visible) {
      this.visible = true;
      this.selector.finish();
      this.selector.css("display", "block");
      this.onShowFn();
      if (!e) {
        c(document).on("click touchend", this.modalCloseListener);
      }
    }
  }
  hide() {
    if (this.visible) {
      this.visible = false;
      if (this.skipFade) {
        this.selector.css("display", "none");
      } else {
        this.selector.fadeOut(200);
      }
      this.onHideFn();
      c(document).off("click touchend", this.modalCloseListener);
    }
  }
}
function Mi(u) {
  let e = {
    [ue.Top]: "customize-emote-top",
    [ue.Right]: "customize-emote-right",
    [ue.Bottom]: "customize-emote-bottom",
    [ue.Left]: "customize-emote-left",
    [ue.Win]: "customize-emote-win",
    [ue.Death]: "customize-emote-death"
  };
  let t = e[u] || e[ue.Top];
  return c(`#${t}`);
}
function tt(u) {
  return function (e, t) {
    let i = B[e.type].rarity || 0;
    let r = B[t.type].rarity || 0;
    if (i == 0 && r == 0) {
      return ht(e, t);
    } else if (i == 0) {
      return -1;
    } else if (r == 0) {
      return 1;
    } else {
      return u(e, t);
    }
  };
}
function co(u, e) {
  if (e.timeAcquired == u.timeAcquired) {
    return hr(u, e);
  } else {
    return e.timeAcquired - u.timeAcquired;
  }
}
function ht(u, e) {
  let t = B[u.type];
  let i = B[e.type];
  if (t.name < i.name) {
    return -1;
  } else if (t.name > i.name) {
    return 1;
  } else {
    return 0;
  }
}
function uo(u, e) {
  let t = B[u.type].rarity || 0;
  let i = B[e.type].rarity || 0;
  if (t == i) {
    return ht(u, e);
  } else {
    return i - t;
  }
}
function hr(u, e) {
  let t = B[u.type];
  let i = B[e.type];
  if (!t.category || !i.category || t.category == i.category) {
    return ht(u, e);
  } else {
    return t.category - i.category;
  }
}
let Ti = {
  newest: tt(co),
  alpha: tt(ht),
  rarity: tt(uo),
  subcat: tt(hr)
};
class po {
  letructor(e, t) {
    this.account = e;
    this.localization = t;
    if (!v.touch) {
      this.categories.push({
        loadoutType: "crosshair",
        gameType: "crosshair",
        categoryImage: "img/gui/loadout-crosshair.svg"
      });
    }
    this.categories.push({
      loadoutType: "player_icon",
      gameType: "emote",
      categoryImage: "img/gui/loadout-emote.svg"
    });
    this.modalCustomize = c("#modal-customize");
    this.modalCustomizeList = c("#modal-customize-list");
    this.modalCustomizeItemRarity = c("#modal-customize-item-rarity");
    this.modalCustomizeItemName = c("#modal-customize-item-name");
    this.modalCustomizeItemLore = c("#modal-customize-item-lore");
    this.modalCustomizeItemSource = c("#modal-customize-item-source");
    this.modal = new de(this.modalCustomize);
    this.modal.onShow(() => {
      this.onShow();
    });
    this.modal.onHide(() => {
      this.onHide();
    });
    let i = function () {
      c("#modal-screen-block").fadeIn(200);
    };
    let r = () => {
      this.confirmNextItem();
    };
    this.confirmItemModal = new de(c("#modal-item-confirm"));
    this.confirmItemModal.onShow(i);
    this.confirmItemModal.onHide(r);
    e.addEventListener("request", this.onRequest.bind(this));
    e.addEventListener("loadout", this.onLoadout.bind(this));
    e.addEventListener("items", this.onItems.bind(this));
    e.addEventListener("pass", this.onPass.bind(this));
  }
  initialized = false;
  active = false;
  items = [];
  loadoutDisplay = null;
  loadout = le.defaultLoadout();
  localPendingConfirm = [];
  localConfirmed = [];
  confirmingItems = false;
  localAckItems = [];
  categories = [{
    loadoutType: "outfit",
    gameType: "outfit",
    categoryImage: "img/gui/loadout-outfit.svg"
  }, {
    loadoutType: "melee",
    gameType: "melee",
    categoryImage: "img/gui/loadout-melee.svg"
  }, {
    loadoutType: "emote",
    gameType: "emote",
    categoryImage: "img/gui/loadout-emote.svg"
  }, {
    loadoutType: "heal",
    gameType: "heal_effect",
    categoryImage: "img/gui/loadout-heal.svg"
  }, {
    loadoutType: "boost",
    gameType: "boost_effect",
    categoryImage: "img/gui/loadout-boost.svg"
  }];
  selectedItem = {
    prevSlot: null,
    img: "",
    type: ""
  };
  emotesLoaded = false;
  selectedCatIdx = 0;
  selectedCatItems = [];
  equippedItems = [];
  modalCustomize;
  modalCustomizeList;
  modalCustomizeItemRarity;
  modalCustomizeItemName;
  modalCustomizeItemLore;
  modalCustomizeItemSource;
  picker;
  modal;
  confirmItemModal;
  itemSort;
  selectableCats;
  selectableCatConnects;
  selectableCatImages;
  selectableSlots;
  droppableSlots;
  highlightedSlots;
  itemSelected;
  highlightOpacityMin;
  init() {
    if (!this.initialized) {
      for (let r = 0; r < this.categories.length; r++) {
        let a = c("<div/>", {
          class: "modal-customize-cat",
          "data-idx": r
        });
        if (r == this.categories.length - 1) {
          a.attr("id", "modal-customize-cat-standalone");
        }
        a.append(c("<div/>", {
          class: "modal-customize-cat-image",
          css: {
            "background-image": `url(${this.categories[r].categoryImage})`
          }
        }));
        a.append(c("<div/>", {
          class: "modal-customize-cat-connect"
        }));
        a.append(c("<div/>", {
          class: "account-alert account-alert-cat"
        }));
        c("#modal-customize-header").append(a);
      }
      this.selectableCats = c(".modal-customize-cat");
      this.selectableCatConnects = c(".modal-customize-cat-connect");
      this.selectableCatImages = c(".modal-customize-cat-image");
      this.selectableCats.on("mouseup", r => {
        let l = c(r.currentTarget).data("idx");
        if (this.selectedCatIdx != l) {
          this.selectCat(l);
        }
      });
      this.itemSort = c("#modal-customize-sort");
      this.itemSort.on("change", r => {
        this.sortItems(r.target.value);
      });
      this.modalCustomizeItemName.on("click", () => {
        let r = document.getElementsByClassName("customize-list-item-selected");
        if (r.length > 0) {
          r[0].scrollIntoView({
            behavior: "smooth",
            block: "start",
            inline: "nearest"
          });
        }
      });
      c("#crosshair-size").on("input", () => {
        this.updateLoadoutFromDOM();
      });
      c("#crosshair-stroke").on("input", () => {
        this.updateLoadoutFromDOM();
      });
      let e = document.getElementById("color-picker");
      this.picker = new window.CP(e, false, e);
      this.picker.self.classList.add("static");
      this.picker.on("change", r => {
        c("#color-picker-hex").val(r);
        if (this.loadout?.crosshair) {
          this.updateLoadoutFromDOM();
        }
      });
      let t = document.querySelector("#color-picker-hex");
      let i = () => {
        let r = t.value;
        if (r.length) {
          if (r.length == 6) {
            this.picker.set(`#${r}`);
            this.picker.fire("change", [r]);
          } else if (r.length == 7 && r[0] == "#") {
            this.picker.set(r);
            this.picker.fire("change", [r.slice(1)]);
          } else {
            return;
          }
        }
      };
      t.oncut = i;
      t.onpaste = i;
      t.onkeyup = i;
      t.oninput = i;
      this.initialized = true;
    }
  }
  show() {
    this.init();
    this.modal.show();
  }
  hide() {
    this.modal.hide();
  }
  onShow() {
    this.active = true;
    this.localAckItems = [];
    for (let e = 0; e < this.items.length; e++) {
      let t = this.items[e];
      if (t.status < le.ItemStatus.Ackd) {
        this.localAckItems.push(t);
      }
    }
    this.selectCat(0);
    this.tryBeginConfirmingItems();
    c("#start-bottom-right, #start-main").fadeOut(200);
    c("#background").hide();
  }
  onHide() {
    this.active = false;
    if (le.modified(this.loadout, this.account.loadout)) {
      this.account.setLoadout(this.loadout);
    }
    this.clearConfirmItemModal();
    this.modalCustomize.css({
      cursor: "initial"
    });
    c("#start-bottom-right, #start-main").fadeIn(200);
    c("#background").show();
  }
  onResize() {
    if (v.mobile) {
      if (this.categories[this.selectedCatIdx].loadoutType == "emote") {
        c("#modal-customize-list").attr("style", "");
      } else {
        c("#modal-customize-list").attr("style", v.isLandscape ? "" : "height: 380px");
      }
    }
  }
  onRequest() {
    c("#modal-customize-loading").css("opacity", this.account.requestsInFlight > 0 ? 1 : 0);
  }
  onLoadout(e) {
    this.loadout = le.validate(e);
    Ve.setGameCrosshair(e.crosshair);
    if (this.active) {
      this.selectCat(this.selectedCatIdx);
    }
  }
  onItems(e) {
    this.items = le.getUserAvailableItems(e);
    for (let t = 0; t < this.items.length; t++) {
      let i = this.items[t];
      if (i.status < le.ItemStatus.Confirmed && !this.localPendingConfirm.find(r => r.type == i.type) && !this.localConfirmed.find(r => r.type == i.type)) {
        this.localPendingConfirm.push(i);
      }
      if (i.status < le.ItemStatus.Ackd && !this.localAckItems.find(r => r.type == i.type)) {
        this.localAckItems.push(i);
      }
    }
    if (this.active) {
      this.tryBeginConfirmingItems();
      this.selectCat(this.selectedCatIdx);
    }
    if (this.account.loggedIn) {
      if (!this.items.find(t => t.type == "unlock_new_account")) {
        this.account.unlock("unlock_new_account");
      }
    }
  }
  onPass(e) {
    let t = ["facebook", "instagram", "youtube", "twitter"];
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      let a = !!e.unlocks[r];
      let l = c(`.customize-social-unlock[data-lock-reason='${r}']`);
      l.css({
        display: a ? "none" : "inline-block"
      });
      l.off("click").on("click", () => {
        this.account.setPassUnlock(r);
      });
    }
  }
  getCategory(e) {
    for (let t = 0; t < this.categories.length; t++) {
      let i = this.categories[t];
      if (i.gameType == e) {
        return i;
      }
    }
    return null;
  }
  clearConfirmItemModal() {
    this.localPendingConfirm = [];
    this.localConfirmed = [];
    this.confirmingItems = false;
    this.confirmItemModal.hide();
  }
  setItemsConfirmed() {
    let e = [];
    for (let t = 0; t < this.items.length; t++) {
      let i = this.items[t];
      if (i.status < le.ItemStatus.Confirmed) {
        e.push(i.type);
      }
    }
    if (e.length > 0) {
      this.account.setItemStatus(le.ItemStatus.Confirmed, e);
    }
  }
  setItemsAckd(e) {
    let t = this.categories[e];
    let i = [];
    for (let r = 0; r < this.items.length; r++) {
      let a = this.items[r];
      let l = B[a.type];
      if (l && l.type == t.gameType && a?.status < le.ItemStatus.Ackd) {
        i.push(a.type);
      }
    }
    if (i.length > 0) {
      this.account.setItemStatus(le.ItemStatus.Ackd, i);
    }
  }
  tryBeginConfirmingItems() {
    if (this.active && !this.confirmingItems) {
      this.confirmingItems = true;
      this.confirmNextItem();
    }
  }
  confirmNextItem() {
    this.setItemsConfirmed();
    let e = this.localPendingConfirm.shift();
    if (e) {
      this.localConfirmed.push(e);
      let t = B[e.type];
      let i = {
        type: e.type,
        rarity: t.rarity || 0,
        displayName: t.name,
        category: t.type
      };
      let a = `url(${$.getSvgFromGameType(e.type)})`;
      let l = $.getCssTransformFromGameType(e.type);
      setTimeout(() => {
        c("#modal-item-confirm-name").html(i.displayName);
        c("#modal-item-confirm-image-inner").css({
          "background-image": a,
          transform: l
        });
        this.confirmItemModal.show();
      }, 200);
    } else {
      this.confirmingItems = false;
      c("#modal-screen-block").fadeOut(300);
    }
  }
  sortItems(e) {
    this.selectedCatItems.sort(Ti[e]);
    let t = this.categories[this.selectedCatIdx];
    let i = c("<div/>");
    for (let r = 0; r < this.selectedCatItems.length; r++) {
      let a = this.selectedCatItems[r];
      a.outerDiv?.data("idx", r);
      i.append(a.outerDiv);
    }
    this.modalCustomizeList.html("");
    this.modalCustomizeList.append(i);
    this.selectableSlots.off("mouseup");
    this.setItemListeners(t.loadoutType);
  }
  setItemListeners(e) {
    this.selectableSlots.on("mouseup", t => {
      let i = t.currentTarget;
      if (!c(i).hasClass("customize-list-item-locked")) {
        if (this.itemSelected && !c(i).hasClass("customize-list-item")) {
          this.itemSelected = false;
          return;
        }
        this.selectItem(c(i));
        this.updateLoadoutFromDOM();
      }
    });
    if (e == "emote") {
      this.setEmoteDraggable(this.selectableSlots, this);
      if (!this.emotesLoaded) {
        this.setEmoteDraggable(this.droppableSlots, this);
        this.droppableSlots.on("mouseup", t => {
          let i = t.currentTarget;
          if (!c(i).hasClass("customize-list-item-locked")) {
            if (this.itemSelected && !c(i).hasClass("customize-list-item")) {
              this.deselectItem();
              return;
            }
            this.selectItem(c(i));
            this.updateLoadoutFromDOM();
          }
        });
        this.droppableSlots.on("drop", t => {
          t.originalEvent?.preventDefault();
          let i = t.currentTarget;
          let r = c(i).parent();
          this.updateSlot(r, this.selectedItem.img, this.selectedItem.type);
          this.updateLoadoutFromDOM();
          this.deselectItem();
        });
        this.droppableSlots.on("mousedown", t => {
          if (this.itemSelected) {
            t.stopPropagation();
            let i = c(t.currentTarget).parent();
            this.updateSlot(i, this.selectedItem.img, this.selectedItem.type);
            this.updateLoadoutFromDOM();
          }
        });
        this.droppableSlots.on("dragover", function (t) {
          t.originalEvent?.preventDefault();
          c(this).parent().find(".ui-emote-hl").css("opacity", 1);
        });
        this.droppableSlots.on("dragleave", t => {
          t.originalEvent?.preventDefault();
          c(t.currentTarget).parent().find(".ui-emote-hl").css("opacity", this.highlightOpacityMin);
        });
        this.droppableSlots.on("dragend", t => {
          t.originalEvent?.preventDefault();
          this.deselectItem();
        });
        c(".ui-emote-auto-trash").click(t => {
          let i = c(t.currentTarget).parent();
          this.updateSlot(i, "", "");
          this.updateLoadoutFromDOM();
        });
        this.emotesLoaded = true;
      }
    } else if (e == "crosshair") {
      let t = g.intToHex(this.loadout.crosshair.color);
      let i = [t.slice(1)];
      this.picker.set(t);
      c("#color-picker-hex").val(i);
      c("#crosshair-size").val(this.loadout.crosshair.size);
      c("#crosshair-stroke").val(this.loadout.crosshair.stroke);
    }
  }
  updateLoadoutFromDOM() {
    let e = this.categories[this.selectedCatIdx].loadoutType;
    if (e == "emote") {
      for (let t = 0; t < ue.Count; t++) {
        let r = Mi(t).data("idx");
        let a = this.equippedItems[r];
        if (a?.type) {
          this.loadout.emotes[t] = a.type;
        } else {
          this.loadout.emotes[t] = "";
        }
      }
    } else if (e == "crosshair") {
      let t = parseFloat(c("#crosshair-size").val());
      let i = c("#color-picker-hex").val();
      let r = parseFloat(c("#crosshair-stroke").val());
      this.loadout.crosshair = {
        type: this.selectedItem.type,
        color: g.hexToInt(i),
        size: Number(t.toFixed(2)),
        stroke: Number(r.toFixed(2))
      };
    } else {
      this.loadout[e] = this.selectedItem.type;
    }
    this.loadout = le.validate(this.loadout);
    if (this.loadoutDisplay?.initialized) {
      this.loadoutDisplay.setLoadout(this.loadout);
    }
    if (this.selectedItem.loadoutType == "crosshair") {
      this.setSelectedCrosshair();
    }
  }
  selectItem(e, t = true) {
    let i = e.hasClass("customize-list-item");
    let r = i ? e : e.parent();
    let a = r.find(".customize-item-image");
    let l = r.data("idx");
    let s = r.data("slot") ? this.equippedItems[l] : this.selectedCatItems[l];
    if (!s) {
      this.itemSelected = false;
      this.selectedItem = {
        prevSlot: null,
        img: "",
        type: ""
      };
      return;
    }
    if (s.type == this.selectedItem.type && s.loadoutType == "emote" && this.selectedItem.loadoutType == "emote" && t) {
      this.deselectItem();
      return;
    }
    this.itemSelected = true;
    this.selectedItem = {
      prevSlot: i ? null : r,
      img: a.data("img"),
      type: s.type,
      rarity: s.rarity,
      displayName: s.displayName || "",
      displaySource: s.displaySource || "Unknown",
      displayLore: s.displayLore || "",
      loadoutType: s.loadoutType,
      subcat: s.subcat
    };
    this.modalCustomizeItemName.html(this.selectedItem.displayName);
    let m = this.localization.translate(`loadout-${s.displaySource}`) || this.localization.translate(`${s.displaySource}`) || this.selectedItem.displaySource;
    let d = `${this.localization.translate("loadout-acquired")}: ${m}`;
    this.modalCustomizeItemSource.html(d);
    let h = {
      [ke.Locked]: "Locked",
      [ke.Faces]: "Faces",
      [ke.Food]: "Food",
      [ke.Animals]: "Animals",
      [ke.Logos]: "Logos",
      [ke.Other]: "Other",
      [ke.Flags]: "Flags",
      [ke.Default]: "Default"
    };
    let p = s.loadoutType == "emote" ? `${this.localization.translate("loadout-category")}: ${h[s.subcat]}` : this.selectedItem.displayLore;
    this.modalCustomizeItemLore.html(p);
    let w = ["stock", "common", "uncommon", "rare", "epic", "mythic"];
    let f = ["#c5c5c5", "#c5c5c5", "#12ff00", "#00deff", "#f600ff", "#d96100"];
    let S = this.localization.translate(`loadout-${w[this.selectedItem.rarity]}`);
    this.modalCustomizeItemRarity.html(S);
    this.modalCustomizeItemRarity.css({
      color: f[this.selectedItem.rarity]
    });
    if (this.selectedItem.loadoutType == "emote") {
      this.highlightedSlots.css({
        display: "block",
        opacity: this.highlightOpacityMin
      });
    }
    this.selectableSlots.removeClass("customize-list-item-selected");
    if (i) {
      e.addClass("customize-list-item-selected");
    } else {
      r.find(".ui-emote-hl").css("opacity", 1);
    }
    if (this.selectedItem.loadoutType == "crosshair") {
      let y = B[this.selectedItem.type];
      if (y && y.type == "crosshair" && y.cursor) {
        c("#modal-content-right-crosshair").css("display", "none");
      } else {
        c("#modal-content-right-crosshair").css("display", "block");
        this.picker.exit();
        this.picker.enter();
      }
    }
    let x = this.localAckItems.findIndex(y => y.type == this.selectedItem.type);
    if (x !== -1) {
      e.find(".account-alert").removeClass("account-alert account-alert-cat");
      this.localAckItems.splice(x, 1);
      this.setCategoryAlerts();
    }
  }
  updateSlot(e, t, i) {
    let r = this.selectedItem.prevSlot;
    this.selectedItem = {};
    if (r) {
      let a = e.find(".customize-item-image");
      let l = e.data("idx");
      let s = this.equippedItems[l];
      let m = "";
      if (s.type) {
        m = s.type;
      }
      this.updateSlot(r, a.data("img"), m);
    }
    this.updateSlotData(e, t, i);
  }
  deselectItem() {
    this.itemSelected = false;
    this.selectedItem = {};
    this.selectableSlots.removeClass("customize-list-item-selected");
    this.highlightedSlots.css({
      display: "none",
      opacity: 0
    });
    this.modalCustomizeItemName.html("");
    this.modalCustomizeItemSource.html("");
    this.modalCustomizeItemLore.html("");
    this.modalCustomizeItemRarity.html("");
  }
  updateSlotData(e, t, i) {
    let r = e.find(".customize-emote-slot");
    r.css("background-image", t || "none");
    r.data("img", t || "none");
    let a = B[i];
    let l = e.data("idx");
    if (a) {
      let s = {
        loadoutType: "emote",
        type: i,
        rarity: a.rarity || 0,
        displayName: a.name,
        displayLore: a.lore,
        subcat: a.category
      };
      this.equippedItems[l] = s;
    } else {
      this.equippedItems[l] = {};
    }
  }
  selectCat(e) {
    let t = this.selectedCatIdx;
    this.selectedCatIdx = e;
    this.setItemsAckd(this.selectedCatIdx);
    if (t != this.selectedCatIdx) {
      let x = this.categories[t];
      for (let y = this.localAckItems.length - 1; y >= 0; y--) {
        let C = this.localAckItems[y];
        if (B[C.type].type == x.gameType) {
          this.localAckItems.splice(y, 1);
        }
      }
    }
    let i = this.categories[this.selectedCatIdx];
    let r = this.items.filter(x => {
      let y = B[x.type];
      return y && y.type == i.gameType;
    });
    let a = i.loadoutType == "emote" || i.loadoutType == "player_icon";
    c("#customize-sort-subcat").css("display", a ? "block" : "none");
    let l = this.itemSort.val();
    if (!a && l == "subcat") {
      l = "newest";
      this.itemSort.val(l);
    }
    r.sort(Ti[l]);
    let s = i.loadoutType == "emote";
    let m = i.loadoutType == "crosshair";
    let d = i.loadoutType == "emote";
    this.loadoutDisplay?.setView(i.loadoutType);
    let h = c(`.modal-customize-cat[data-idx='${this.selectedCatIdx}']`);
    this.selectableCats.removeClass("modal-customize-cat-selected");
    this.selectableCatConnects.removeClass("modal-customize-cat-connect-selected");
    this.selectableCatImages.removeClass("modal-customize-cat-image-selected");
    h.addClass("modal-customize-cat-selected");
    h.find(".modal-customize-cat-connect").addClass("modal-customize-cat-connect-selected");
    h.find(".modal-customize-cat-image").addClass("modal-customize-cat-image-selected");
    let p = this.localization.translate(`loadout-title-${i.loadoutType}`).toUpperCase();
    c("#modal-customize-cat-title").html(p);
    c("#modal-content-right-crosshair").css("display", i.loadoutType == "crosshair" ? "block" : "none");
    c("#modal-content-right-emote").css("display", i.loadoutType == "emote" ? "block" : "none");
    c("#customize-emote-parent").css("display", s ? "block" : "none");
    c("#customize-crosshair-parent").css("display", m ? "block" : "none");
    this.modalCustomizeItemName.html("");
    this.modalCustomizeItemSource.html("");
    this.modalCustomizeItemLore.html("");
    this.modalCustomizeItemRarity.html("");
    let w = function (x) {
      let y = B[x];
      if (y?.name) {
        return y.name;
      } else {
        return x;
      }
    };
    this.selectedCatItems = [];
    let f = "";
    let S = c("<div/>");
    for (let x = 0; x < r.length; x++) {
      let y = r[x];
      let C = B[y.type];
      let P = {
        loadoutType: i.loadoutType,
        type: y.type,
        rarity: C.rarity || 0,
        displayName: C.name,
        displaySource: w(y.source),
        displayLore: C.lore,
        timeAcquired: y.timeAcquired,
        idx: x,
        subcat: C.category,
        outerDiv: null
      };
      let k = c("<div/>", {
        class: "customize-list-item customize-list-item-unlocked",
        "data-idx": x
      });
      let b = $.getSvgFromGameType(y.type);
      let M = $.getCssTransformFromGameType(y.type);
      let E = c("<div/>", {
        class: "customize-item-image",
        css: {
          "background-image": `url(${b})`,
          transform: M
        },
        "data-img": `url(${b})`,
        draggable: d
      });
      k.append(E);
      if (this.localAckItems.findIndex(D => D.type == y.type) !== -1) {
        let D = c("<div/>", {
          class: "account-alert account-alert-cat",
          css: {
            display: "block"
          }
        });
        k.append(D);
      }
      if (i.gameType == "crosshair") {
        let D = {
          type: P.type,
          color: 16777215,
          size: 1,
          stroke: 0
        };
        Ve.setElemCrosshair(k, D);
      }
      S.append(k);
      P.outerDiv = k;
      this.selectedCatItems.push(P);
      if (!f) {
        if (i.loadoutType == "crosshair" && P.type == this.loadout.crosshair.type || i.loadoutType != "emote" && P.type == this.loadout[i.loadoutType]) {
          f = P.outerDiv;
        }
      }
    }
    this.modalCustomizeList.html("");
    this.modalCustomizeList.append(S);
    this.modalCustomizeList.scrollTop(0);
    if (i.loadoutType == "emote") {
      this.equippedItems = [];
      for (let x = 0; x < this.loadout.emotes.length; x++) {
        this.equippedItems.push({});
        let y = this.loadout.emotes[x];
        if (B[y]) {
          let P = `url(${$.getSvgFromGameType(y)})`;
          let k = Mi(x);
          this.updateSlotData(k, P, y);
        }
      }
    }
    this.selectableSlots = c(".customize-list-item");
    this.droppableSlots = c(".customize-col");
    this.highlightedSlots = this.droppableSlots.siblings(".ui-emote-hl");
    this.highlightOpacityMin = 0.4;
    this.itemSelected = false;
    this.setItemListeners(i.loadoutType);
    this.setCategoryAlerts();
    this.deselectItem();
    if (f != "") {
      this.selectItem(f);
      if (i.loadoutType == "crosshair") {
        this.setSelectedCrosshair();
      }
      this.modalCustomizeItemName.click();
    }
    if (v.browser == "edge") {
      if (i.loadoutType == "crosshair") {
        let x = function (y, C) {
          let P = y.height() + parseInt(y.css("padding-top")) + parseInt(y.css("padding-bottom"));
          C.css("height", P);
        };
        x(c("#modal-customize-body"), c("#modal-content-left").find(".modal-disabled"));
        x(c("#modal-content-right-crosshair"), c("#modal-content-right-crosshair").find(".modal-disabled"));
        c(".modal-disabled").css("display", "block");
      } else {
        c(".modal-disabled").css("display", "none");
      }
    }
    this.onResize();
  }
  setCategoryAlerts() {
    for (let e = 0; e < this.categories.length; e++) {
      let t = this.categories[e];
      let i = this.localAckItems.filter(r => {
        let a = B[r.type];
        return a && a.type == t.gameType;
      });
      c(`.modal-customize-cat[data-idx='${e}']`).find(".account-alert-cat").css("display", i.length > 0 ? "block" : "none");
    }
  }
  setEmoteDraggable(e, t) {
    e.on("dragstart", function (i) {
      if (!c(this).hasClass("customize-list-item-locked") && (t.selectItem(c(this), false), v.browser != "edge")) {
        let r = document.createElement("img");
        r.src = t.selectedItem.img ? t.selectedItem.img.replace("url(", "").replace(")", "").replace(/\'/gi, "") : "";
        i.originalEvent?.dataTransfer?.setDragImage(r, 64, 64);
      }
    });
  }
  setSelectedCrosshair() {
    let e = this.loadout.crosshair;
    c("#customize-crosshair-selected").find(".customize-item-image").css({
      "background-image": Ve.getCursorURL(e)
    });
    Ve.setElemCrosshair(c("#customize-crosshair-selected"), e);
  }
}
let fo = "Survivr Pass 1";
let wo = "Top 10 in solos";
let go = "Top 8 in duos";
let So = "Top 5 in squads";
let yo = "Kill enemies";
let xo = "Kill enemies";
let zo = "Damage enemies";
let bo = "Damage enemies";
let ko = "Survived time";
let vo = "9mm damage";
let _o = "7.62mm damage";
let Io = "5.56mm damage";
let Mo = "12 gauge damage";
let To = "Grenade damage";
let Po = "Melee damage";
let Co = "Use healing items";
let Do = "Use adrenaline items";
let Lo = "Unlock air drops";
let Ao = "Destroy crates";
let Eo = "Destroy toilets";
let Ro = "Destroy furniture";
let Oo = "Destroy barrels";
let Bo = "Destroy lockers";
let No = "Destroy pots";
let jo = "Destroy soda machines";
let qo = "Kill enemies at: club";
let Fo = {
  "word-order": "svo",
  "index-create-account": "Create Account",
  "index-create-account-prompt-1": "Log in to access this feature!",
  "index-set-account-name": "Set your account name",
  "index-enter-name": "Enter name",
  "index-finish": "Finish",
  "index-reset-stats": "Reset Stats",
  "index-reset-stats-desc": "Enter \"RESET STATS\" to reset your stats:",
  "index-reset-stats-desc-2": "(This does not reset pass progress.)",
  "index-delete-account": "Delete Account",
  "index-delete-account-desc": "Enter \"DELETE\" to delete your account:",
  "index-confirm": "Confirm",
  "index-customize-avatar": "Customize Avatar",
  "index-done": "Done",
  "index-account": "Account",
  "index-log-in-with": "Log in with",
  "index-google": "Google",
  "index-twitch": "Twitch",
  "index-discord": "Discord",
  "index-my-stats": "My Stats",
  "index-link-account": "Link Account",
  "index-log-out": "Log Out",
  "index-change-avatar": "Change Avatar",
  "index-change-account-name": "Change Account Name",
  "index-back": "Back",
  "index-link-account-to": "Link account to",
  "index-log-in-desc": "Log In / Create Account",
  "index-logging-in": "Logging in",
  "index-leaderboards": "Leaderboards",
  "index-slogan": "2d Battle Royale",
  "index-region": "Region",
  "index-local": "Local",
  "index-north-america": "North America",
  "index-europe": "Europe",
  "index-asia": "Asia",
  "index-south-america": "South America",
  "index-korea": "South Korea",
  "index-players": "players",
  "index-play-solo": "Play Solo",
  "index-play-duo": "Play Duo",
  "index-play-squad": "Play Squad",
  "index-join-team": "Join Team",
  "index-create-team": "Create Team",
  "index-leave-team": "Leave Team",
  "index-joining-team": "Joining Team",
  "index-creating-team": "Creating Team",
  "index-invite-link": "Invite link",
  "index-invite-code": "Invite code",
  "index-join-team-help": "Got a team link or code? Paste it here:",
  "index-solo": "Solo",
  "index-duo": "Duo",
  "index-squad": "Squad",
  "index-auto-fill": "Auto Fill",
  "index-no-fill": "No Fill",
  "index-waiting-for-leader": "Waiting for leader to start game",
  "index-joining-game": "Joining game",
  "index-game-in-progress": "Game in progress",
  "index-play": "Play",
  "index-customize-loadout": "Customize Emotes",
  "index-twitter-follow": "Twitter Follow",
  "index-youtube-subscribe": "YouTube Subscribe",
  "index-facebook-like": "Facebook Like",
  "index-featured-youtuber": "Featured YouTuber",
  "index-streaming-live": "Streaming Live!",
  "index-viewer": "viewer",
  "index-viewers": "viewers",
  "index-settings": "Settings",
  "index-high-resolution": "High resolution (check to increase visual quality)",
  "index-client-side-interp": "Client side interpolation",
  "index-screen-shake": "Screen shake",
  "index-anon-player-names": "Anonymize player names",
  "index-master-volume": "Master Volume",
  "index-sfx-volume": "SFX Volume",
  "index-music-volume": "Music Volume",
  "index-mobile-announce": "Now available on mobile!",
  "index-mobile-tooltip": "Visit <span>survev.io</span> on your mobile device to play on the go!",
  "index-version": "ver",
  "index-privacy": "privacy",
  "index-attributions": "attributions",
  "index-team-is-full": "Team is full!",
  "index-team-kicked": "You were kicked from the team!",
  "index-failed-joining-team": "Failed joining team.",
  "index-failed-creating-team": "Failed creating team.",
  "index-failed-finding-game": "Failed finding game.",
  "index-failed-joining-game": "Failed joining game.",
  "index-lost-connection": "Lost connection to team.",
  "index-host-closed": "Host closed the connection.",
  "index-invalid-protocol": "Old client version.",
  "index-view-more": "View More",
  "index-back-to-main": "Back to Main Menu",
  "index-most-kills": "Most kills",
  "index-total-kills": "Total kills",
  "index-total-wins": "Total wins",
  "index-top-5-percent": "Top 5 percent",
  "index-kill-death-ratio": "Kill-death ratio",
  "index-mode": "Mode",
  "index-for": "For",
  "index-today": "Today",
  "index-this-week": "This week",
  "index-all-time": "All time",
  "index-top-100": "TOP 100",
  "index-rank": "Rank",
  "index-player": "Player",
  "index-total-games": "Total Games",
  "index-controls": "Controls",
  "index-movement": "Movement",
  "index-movement-ctrl": "W, A, S, D",
  "index-aim": "Aim",
  "index-aim-ctrl": "Mouse",
  "index-punch": "Melee",
  "index-shoot": "Shoot",
  "index-shoot-ctrl": "Left-Click",
  "index-change-weapons": "Change Weapons",
  "index-change-weapons-ctrl": "1 through 4 or Scroll Wheel",
  "index-stow-weapons": "Stow Weapons (Melee Mode)",
  "index-stow-weapons-ctrl": "3 or E",
  "index-swap-weapons": "Swap to Previous Weapon",
  "index-swap-weapons-ctrl": "Q",
  "index-swap-weapon-slots": "Switch Gun Slots",
  "index-swap-weapon-slots-ctrl": "T or drag gun to other slot",
  "index-reload": "Reload",
  "index-reload-ctrl": "R",
  "index-scope-zoom": "Scope Zoom",
  "index-scope-zoom-ctrl": "Left-Click on Zoom",
  "index-pickup": "Pickup",
  "index-loot": "Loot",
  "index-revive": "Revive",
  "index-pickup-ctrl": "F",
  "index-use-medical": "Use Medical Item",
  "index-use-medical-ctrl": "Left-Click on Item or 7 through 0",
  "index-drop-item": "Drop Item",
  "index-drop-item-ctrl": "Right-Click on Item",
  "index-cancel-action": "Cancel Action",
  "index-cancel-action-ctrl": "X",
  "index-view-map": "View Map",
  "index-view-map-ctrl": "M or G",
  "index-toggle-minimap": "Toggle Minimap",
  "index-toggle-minimap-ctrl": "V",
  "index-use-ping": "Use Team Ping Wheel",
  "index-use-ping-ctrl": "Hold C, then hold Right-Click and drag mouse, then release Right-Click",
  "index-use-emote": "Use Emote Wheel",
  "index-use-emote-ctrl": "Hold Right-Click and drag mouse, then release Right-Click",
  "index-how-to-play": "How to Play",
  "index-tips-1-desc": "The goal of survev.io is to be the last player standing. You only live once per game - there is no respawn!",
  "index-tips-2": "2D PUBG",
  "index-tips-2-desc": "If you've played other battle royale games like PUBG, Fortnite or Apex Legends, then you're already halfway there! Think of survev.io as 2D PUBG (with slightly less desync and more chicken).",
  "index-tips-3": "Loot and Kill",
  "index-tips-3-desc": "You'll begin the game with no items other than a simple backpack. Move around the map to find loot: weapons, ammo, scopes, and medical items. Eliminate other players and you can take their loot!",
  "index-tips-4": "Red = Bad!",
  "index-tips-4-desc": "Players aren't the only thing that can hurt you. The deadly red zone will move in from the sides of the map and deal increasingly greater damage if you stand in it. Keep an eye on the map and stay safe.",
  "index-movement-ctrl-touch": "Left stick",
  "index-aim-ctrl-touch": "Right stick",
  "index-shoot-ctrl-touch": "Drag right stick outside stick border",
  "index-change-weapons-ctrl-touch": "Tap weapon slot",
  "index-reload-ctrl-touch": "Tap equipped ammo counter",
  "index-scope-zoom-ctrl-touch": "Tap zoom item",
  "index-pickup-ctrl-touch": "Tap interaction button or loot name",
  "index-use-medical-ctrl-touch": "Tap medical item",
  "index-drop-item-ctrl-touch": "Touch and hold item",
  "index-cancel-action-ctrl-touch": "Tap interaction button",
  "index-view-map-ctrl-touch": "Tap minimap",
  "index-use-ping-ctrl-touch": "View map and tap anywhere on map",
  "index-use-emote-ctrl-touch": "Tap surviv icon",
  "index-loadout": "Loadout",
  "loadout-title-outfit": "Outfit Skin",
  "loadout-title-melee": "Melee Skin",
  "loadout-title-emote": "Emotes",
  "loadout-title-heal": "Heal Particles",
  "loadout-title-boost": "Boost Particles",
  "loadout-title-crosshair": "Crosshair",
  "loadout-title-player_icon": "Player Icon",
  "loadout-newest": "Newest",
  "loadout-alpha": "Alpha",
  "loadout-rarity": "Rarity",
  "loadout-size": "Size",
  "loadout-stroked": "Stroked",
  "loadout-stock": "Stock",
  "loadout-common": "Common",
  "loadout-uncommon": "Uncommon",
  "loadout-rare": "Rare",
  "loadout-epic": "Epic",
  "loadout-mythic": "Mythic",
  "loadout-acquired": "Acquired",
  "loadout-category": "Category",
  "loadout-standard-issue": "Standard Issue",
  "loadout-new-account": "Account Created",
  "quest-login-prompt": "Log in to get quests!",
  "quest-refresh-prompt": "Get a new quest?",
  pass_survivr1: fo,
  quest_top_solo: wo,
  quest_top_duo: go,
  quest_top_squad: So,
  quest_kills: yo,
  quest_kills_hard: xo,
  quest_damage: zo,
  quest_damage_hard: bo,
  quest_survived: ko,
  quest_damage_9mm: vo,
  quest_damage_762mm: _o,
  quest_damage_556mm: Io,
  quest_damage_12gauge: Mo,
  quest_damage_grenade: To,
  quest_damage_melee: Po,
  quest_heal: Co,
  quest_boost: Do,
  quest_airdrop: Lo,
  quest_crates: Ao,
  quest_toilets: Eo,
  quest_furniture: Ro,
  quest_barrels: Oo,
  quest_lockers: Bo,
  quest_pots: No,
  quest_vending: jo,
  quest_club_kills: qo,
  "game-alive": "Alive",
  "game-reloading": "Reloading",
  "game-use": "Use",
  "game-using": "Using",
  "game-reviving": "Reviving",
  "game-revive-teammate": "Revive Teammate",
  "game-revive-self": "Revive Self",
  "game-equip": "Equip",
  "game-cancel": "Cancel",
  "game-open-door": "Open Door",
  "game-close-door": "Close Door",
  "game-unlock": "Unlock",
  "game-You": "You",
  "game-you": "you",
  "game-themselves": "themselves",
  "game-yourself": "yourself",
  "game-you-died": "died",
  "game-player-died": "died",
  "game-with": "with",
  "game-knocked-out": "knocked out",
  "game-killed": "killed",
  "game-finally-killed": "finally killed",
  "game-finally-bled-out": "finally bled out",
  "game-died-outside": "died outside the safe zone",
  "game-the-red-zone": "The red zone",
  "game-crushed": "crushed",
  "game-the-air-drop": "The air drop",
  "game-the-air-strike": "The air strike",
  "game-an-air-strike": "an air strike",
  "game-waiting-for-players": "Waiting for players",
  "game-spectating": "Spectating",
  "game-red-zone-advances": "Red zone advances in",
  "game-red-zone-advancing": "Red zone advancing! Move to the safe zone",
  "game-seconds": "seconds",
  "game-minutes": "minutes",
  "game-minute": "minute",
  "game-m": "m",
  "game-s": "s",
  "game-not-enough-space": "Not enough space!",
  "game-item-already-owned": "Item already owned!",
  "game-item-already-equipped": "Item already equipped!",
  "game-better-item-equipped": "Better item equipped!",
  "game-gun-cannot-fire": "Gun cannot be fired here!",
  "game-waiting-for-new-leader": "Waiting for new leader",
  "game-waiting-for-hunted": "Searching for the Hunted",
  "game-play-new-game": "Play New Game",
  "game-spectate": "Spectate",
  "game-full-screen": "Full Screen",
  "game-aim-line": "Aim Line",
  "game-sound": "Sound",
  "game-quit-game": "Quit Game",
  "game-return-to-game": "Return to Game",
  "game-hide-match-stats": "Hide Match Stats",
  "game-view-match-stats": "View Match Stats",
  "game-previous-teammate": "Previous Teammate",
  "game-next-teammate": "Next Teammate",
  "game-spectate-previous": "Previous Player",
  "game-spectate-next": "Next Player",
  "game-leave-game": "Leave Game",
  "game-your-results": "Your Results",
  "game-chicken": "Winner winner chicken dinner!",
  "game-turkey": "Winner winner turkey dinner!",
  "game-won-the-game": "won the game.",
  "game-team-eliminated": "Your team was eliminated.",
  "game-solo-rank": "Solo Rank",
  "game-duo-rank": "Duo Rank",
  "game-squad-rank": "Squad Rank",
  "game-rank": "Rank",
  "game-team-rank": "Team Rank",
  "game-team-kills": "Team Kills",
  "game-kill": "Kill",
  "game-kills": "Kills",
  "game-damage-dealt": "Damage Dealt",
  "game-damage-taken": "Damage Taken",
  "game-survived": "Survived",
  "game-backpack00": "Pouch",
  "game-backpack01": "Small Pack",
  "game-backpack02": "Regular Pack",
  "game-backpack03": "Military Pack",
  "game-bandage": "Bandage",
  "game-bandage-tooltip": "Left-click to restore 15 health.",
  "game-healing-tooltip": "Cannot heal past 75 health.",
  "game-healthkit": "Med Kit",
  "game-healthkit-tooltip": "Left-click to restore 100 health.",
  "game-soda": "Soda",
  "game-soda-tooltip": "Left-click to boost adrenaline by 25.",
  "game-adrenaline-tooltip": "Adrenaline restores health over time.",
  "game-painkiller": "Pills",
  "game-painkiller-tooltip": "Left-click to boost adrenaline by 50.",
  "game-9mm": "9mm",
  "game-9mm-tooltip": "Ammo for M9, G18C, M93R, P30L, MP5, MAC-10, UMP9, CZ-3A1 and Vector.",
  "game-12gauge": "12 gauge",
  "game-12gauge-tooltip": "Ammo for M870, M1100, SPAS-12, Saiga-12, USAS-12, Super 90 and MP220.",
  "game-762mm": "7.62mm",
  "game-762mm-tooltip": "Ammo for AK-47, SCAR-H, M39, Mosin, SV-98, M1, BAR, AN-94, PKP, Groza, OT-38 and DP-28.",
  "game-556mm": "5.56mm",
  "game-556mm-tooltip": "Ammo for FAMAS, M416, M4A1-S, QBB-97, Mk 12, Scout Elite, and M249.",
  "game-50AE": ".50 AE",
  "game-50AE-tooltip": "Ammo for DEagle 50.",
  "game-308sub": ".308 Subsonic",
  "game-308sub-tooltip": "Ammo for AWM-S.",
  "game-flare": "Flare",
  "game-flare-tooltip": "Ammo for Flare Gun.",
  "game-45acp": ".45 ACP",
  "game-45acp-tooltip": "Ammo for M1911, M1A1, Model 94, Vector and Peacemaker.",
  "game-chest01": "Level 1 Vest",
  "game-chest02": "Level 2 Vest",
  "game-chest03": "Level 3 Vest",
  "game-chest04": "Level 4 Vest",
  "game-helmet01": "Level 1 Helmet",
  "game-helmet02": "Level 2 Helmet",
  "game-helmet03": "Level 3 Helmet",
  "game-helmet03_leader": "Commander Helmet",
  "game-helmet03_forest": "Shishigami no Kabuto",
  "game-helmet03_moon": "Tsukuyomi no Kabuto",
  "game-helmet03_lt": "Lieutenant Helmet",
  "game-helmet03_lt_aged": "Lieutenant Helmet",
  "game-helmet03_potato": "K-pot-ato",
  "game-helmet03_marksman": "Marksman Helmet",
  "game-helmet04_lone_survivr": "Lone Survivr Helmet",
  "game-helmet04_leader": "Commander Helmet",
  "game-1xscope": "1x Scope",
  "game-2xscope": "2x Scope",
  "game-4xscope": "4x Scope",
  "game-8xscope": "8x Scope",
  "game-15xscope": "15x Scope",
  "game-level-1": "Lvl. 1",
  "game-level-2": "Lvl. 2",
  "game-level-3": "Lvl. 3",
  "game-level-4": "Lvl. 4",
  "game-outfitBase": "Basic Outfit",
  "game-outfitRoyalFortune": "Royal Fortune",
  "game-outfitKeyLime": "Key Lime",
  "game-outfitCobaltShell": "Cobalt Shell",
  "game-outfitCarbonFiber": "Carbon Fiber",
  "game-outfitDarkGloves": "The Professional",
  "game-outfitDarkShirt": "The Semi-Pro",
  "game-outfitGhillie": "Ghillie Suit",
  "game-outfitCamo": "Forest Camo",
  "game-outfitRed": "Target Practice",
  "game-outfitWhite": "Arctic Avenger",
  "game-outfitWoodland": "Woodland Combat",
  "game-outfitJester": "Jester's Folly",
  "game-outfitPrisoner": "The New Black",
  "game-outfitCasanova": "Casanova Silks",
  "game-outfitKhaki": "The Initiative",
  "game-outfitCoral": "Coral Guise",
  "game-outfitAqua": "Aquatic Avenger",
  "game-outfitIslander": "Island Time",
  "game-outfitMeteor": "Falling Star",
  "game-outfitHeaven": "Celestial Garb",
  "game-outfitWaterElem": "Water Elemental",
  "game-outfitVerde": "Poncho Verde",
  "game-outfitLumber": "Woodcutter's Wrap",
  "game-outfitImperial": "Imperial Seal",
  "game-outfitPineapple": "Valiant Pineapple",
  "game-outfitTarkhany": "Tarkhany Regal",
  "game-outfitDesertCamo": "Desert Camo",
  "game-outfitDesertGhillie": "Desert Ghillie",
  "game-outfitElf": "Tallow's Little Helper",
  "game-outfitSpetsnaz": "Siberian Assault",
  "game-outfitDarkGhillie": "Incursion Ghillie",
  "game-outfitRedLeaderAged": "Red Victorious",
  "game-outfitBlueLeaderAged": "Stifled Blue",
  "game-outfitWoodsCloak": "Greencloak",
  "game-outfitSpringGhillie": "Vernal Ghillie",
  "game-outfitNoir": "Neo Noir",
  "game-outfitSummerGhillie": "Verdant Ghillie",
  "game-outfitWheat": "Splintered Wheat",
  "game-outfitDev": "Developer Swag",
  "game-outfitMod": "Discord Moderatr",
  "game-outfitParma": "PARMA Jumpsuit",
  "game-outfitParmaPrestige": "The Core Jumpsuit",
  "game-outfitTurkey": "Fowl Facade",
  "game-outfitBarrel": "Fish in a Barrel",
  "game-outfitWoodBarrel": "Fish in a Wood Barrel",
  "game-outfitStone": "Stoneskin",
  "game-outfitTree": "Barkskin",
  "game-outfitTreeSpooky": "Spoopy Barkskin",
  "game-outfitStump": "Dead Wood",
  "game-outfitBush": "Bush Wookie",
  "game-outfitLeafPile": "Sneaky Leaf",
  "game-outfitCrate": "Guy in a Box",
  "game-outfitTable": "Yard Sale",
  "game-outfitSoviet": "Comrade in a Box",
  "game-outfitAirdrop": "Hot Drop",
  "game-outfitOven": "Half-baked",
  "game-outfitRefrigerator": "Cold Fusion",
  "game-outfitVending": "OKAMI Cola Machine",
  "game-outfitPumpkin": "Pumpkin Head",
  "game-outfitWoodpile": "Deader Wood",
  "game-outfitToilet": "Size Two",
  "game-outfitBushRiver": "Lilyveil",
  "game-outfitCrab": "Crabby Camo",
  "game-outfitStumpAxe": "Axe-querade",
  "game-fists": "Fists",
  "game-knuckles_rusted": "Knuckles Rusted",
  "game-hud-knuckles_rusted": "Knuckles",
  "game-knuckles_heroic": "Knuckles Heroic",
  "game-hud-knuckles_heroic": "Knuckles",
  "game-karambit_rugged": "Karambit Rugged",
  "game-hud-karambit_rugged": "Karambit",
  "game-karambit_prismatic": "Karambit Prismatic",
  "game-hud-karambit_prismatic": "Karambit",
  "game-karambit_drowned": "Karambit Drowned",
  "game-hud-karambit_drowned": "Karambit",
  "game-bayonet_rugged": "Bayonet Rugged",
  "game-hud-bayonet_rugged": "Bayonet",
  "game-bayonet_woodland": "Bayonet Woodland",
  "game-hud-bayonet_woodland": "Bayonet",
  "game-huntsman_rugged": "Huntsman Rugged",
  "game-hud-huntsman_rugged": "Huntsman",
  "game-huntsman_burnished": "Huntsman Burnished",
  "game-hud-huntsman_burnished": "Huntsman",
  "game-bowie_vintage": "Bowie Vintage",
  "game-hud-bowie_vintage": "Bowie",
  "game-bowie_frontier": "Bowie Frontier",
  "game-hud-bowie_frontier": "Bowie",
  "game-woodaxe": "Wood Axe",
  "game-woodaxe_bloody": "Wood Axe Bloodstained",
  "game-hud-woodaxe_bloody": "Wood Axe",
  "game-fireaxe": "Fire Axe",
  "game-katana": "Katana",
  "game-katana_rusted": "Katana Rusted",
  "game-hud-katana_rusted": "Katana",
  "game-katana_orchid": "Katana Orchid",
  "game-hud-katana_orchid": "Katana",
  "game-naginata": "Naginata",
  "game-hud-naginata": "Naginata",
  "game-machete_taiga": "Machete Taiga",
  "game-hud-machete_taiga": "Machete",
  "game-kukri_trad": "Tallow's Kukri",
  "game-hud-kukri_trad": "Kukri",
  "game-bonesaw_rusted": "Bonesaw Rusted",
  "game-hud-bonesaw_rusted": "Bonesaw",
  "game-crowbar_recon": "Crowbar Carbon",
  "game-hud-crowbar_recon": "Crowbar",
  "game-stonehammer": "Stone Hammer",
  "game-sledgehammer": "Sledgehammer",
  "game-hook": "Hook",
  "game-pan": "Pan",
  "game-crowbar_scout": "Scouting Crowbar",
  "game-hud-crowbar_scout": "Crowbar",
  "game-bonesaw_healer": "The Separator",
  "game-hud-bonesaw_healer": "Bonesaw",
  "game-kukri_sniper": "Marksman's Recurve",
  "game-hud-kukri_sniper": "Kukri",
  "game-katana_demo": "Hakai no Katana",
  "game-hud-katana_demo": "Katana",
  "game-spade_assault": "Trench Spade",
  "game-hud-spade_assault": "Spade",
  "game-warhammer_tank": "Panzerhammer",
  "game-hud-warhammer_tank": "War Hammer",
  "game-ak47": "AK-47",
  "game-scar": "SCAR-H",
  "game-an94": "AN-94",
  "game-groza": "Groza",
  "game-grozas": "Groza-S",
  "game-dp28": "DP-28",
  "game-mosin": "Mosin-Nagant",
  "game-sv98": "SV-98",
  "game-m39": "M39 EMR",
  "game-garand": "M1 Garand",
  "game-svd": "SVD-63",
  "game-blr": "BLR 81",
  "game-mp5": "MP5",
  "game-mac10": "MAC-10",
  "game-ump9": "UMP9",
  "game-vector": "Vector",
  "game-vector45": "Vector",
  "game-scorpion": "CZ-3A1",
  "game-vss": "VSS",
  "game-m870": "M870",
  "game-m1100": "M1100",
  "game-m1014": "Super 90",
  "game-mp220": "MP220",
  "game-usas": "USAS-12",
  "game-saiga": "Saiga-12",
  "game-spas12": "SPAS-12",
  "game-m9": "M9",
  "game-m9_dual": "Dual M9",
  "game-hud-m9_dual": "M9",
  "game-m9_cursed": "M9 Cursed",
  "game-m93r": "M93R",
  "game-m93r_dual": "Dual M93R",
  "game-hud-m93r_dual": "M93R",
  "game-glock": "G18C",
  "game-glock_dual": "Dual G18C",
  "game-hud-glock_dual": "G18C",
  "game-p30l": "P30L",
  "game-p30l_dual": "Dual P30L",
  "game-ot38": "OT-38",
  "game-ot38_dual": "Dual OT-38",
  "game-hud-ot38_dual": "OT-38",
  "game-ots38": "OTs-38",
  "game-ots38_dual": "Dual OTs-38",
  "game-hud-ots38_dual": "OTs-38",
  "game-deagle": "DEagle 50",
  "game-deagle_dual": "Dual DEagle 50",
  "game-hud-deagle_dual": "DEagle 50",
  "game-flare_gun": "Flare Gun",
  "game-flare_gun_dual": "Dual Flare Gun",
  "game-hud-flare_gun_dual": "Flare Gun",
  "game-famas": "FAMAS",
  "game-hk416": "M416",
  "game-m4a1": "M4A1-S",
  "game-mk12": "Mk 12 SPR",
  "game-m249": "M249",
  "game-qbb97": "QBB-97",
  "game-scout_elite": "Scout Elite",
  "game-l86": "L86A2",
  "game-awc": "AWM-S",
  "game-scarssr": "Mk 20 SSR",
  "game-model94": "Model 94",
  "game-colt45": "Peacemaker",
  "game-colt45_dual": "Dual Peacemaker",
  "game-hud-colt45_dual": "Peacemaker",
  "game-mkg45": "Mk45G",
  "game-m1911": "M1911",
  "game-m1911_dual": "Dual M1911",
  "game-hud-m1911_dual": "M1911",
  "game-m1a1": "M1A1",
  "game-bar": "BAR M1918",
  "game-pkp": "PKP Pecheneg",
  "game-frag": "Frag Grenade",
  "game-hud-frag": "Frag",
  "game-smoke": "Smoke Grenade",
  "game-hud-smoke": "Smoke",
  "game-mirv": "MIRV Grenade",
  "game-hud-mirv": "MIRV",
  "game-mirv_mini": "MIRV Grenade",
  "game-martyr_nade": "Martyrdom",
  "game-strobe": "Strobe",
  "game-hud-strobe": "Strobe",
  "game-snowball": "Snowball",
  "game-hud-snowball": "Snowball",
  "game-snowball_heavy": "Snowball",
  "game-potato": "Potato",
  "game-hud-potato": "Potato",
  "game-potato_heavy": "Potato",
  "game-potato_cannon": "Potato Cannon",
  "game-potato_cannonball": "Potato Cannon",
  "game-potato_smg": "Spud Gun",
  "game-potato_smgshot": "Spud Gun",
  "game-bugle": "Bugle",
  "game-barrel_01": "a barrel",
  "game-barrel_01b": "a barrel",
  "game-silo_01": "a silo",
  "game-oven_01": "an oven",
  "game-control_panel_01": "Control Panel",
  "game-control_panel_02": "Control Panel",
  "game-control_panel_03": "a computer terminal",
  "game-control_panel_04": "a computer terminal",
  "game-control_panel_06": "a computer terminal",
  "game-power_box_01": "a power box",
  "game-airdrop_crate_01": "Air Drop",
  "game-airdrop_crate_02": "Air Drop",
  "game-stove_01": "a stove",
  "game-grill_01": "a grill",
  "game-propane_01": "a propane tank",
  "index-play-50v50": "Play 50v50",
  "index-50v50": "50v50",
  "game-red-team": "Red Team",
  "game-blue-team": "Blue Team",
  "game-red-leader": "Red Commander",
  "game-blue-leader": "Blue Commander",
  "game-is-down": "is down",
  "game-is-dead": "is dead",
  "game-promoted-to": "promoted to",
  "game-youve-been-promoted-to": "You've been promoted to",
  "game-leader": "Commander",
  "game-lieutenant": "Lieutenant",
  "game-medic": "Medic",
  "game-marksman": "Marksman",
  "game-recon": "Recon",
  "game-grenadier": "Grenadier",
  "game-bugler": "Bugler",
  "game-kill_leader": "Kill Leader",
  "game-the_hunted": "The Hunted",
  "game-last_man": "Lone Survivr",
  "game-woods_king": "The Woods King",
  "game-healer": "Medic",
  "game-demo": "Demo",
  "game-tank": "Tank",
  "game-scout": "Scout",
  "game-sniper": "Sniper",
  "game-assault": "Assault",
  "game-select-class": "SELECT A CLASS",
  "game-enter-game": "ENTER GAME",
  "game-leadership": "Leadership",
  "game-leadership-desc": "Max adrenaline.</br>Increased size.",
  "game-firepower": "Firepower",
  "game-firepower-desc": "High-capacity magazines.",
  "game-gotw": "Gift of the Woods",
  "game-gotw-desc": "Restore health over time.</br>Increased size.",
  "game-windwalk": "Windwalk",
  "game-windwalk-desc": "When taking fire, gain a short burst of speed.",
  "game-rare_potato": "Rare Potato",
  "game-rare_potato-desc": "Always rotate to a high quality weapon.",
  "game-aoe_heal": "Mass Medicate",
  "game-aoe_heal-desc": "Reviving and using medical items affects all nearby players.",
  "game-endless_ammo": "Endless Ammo",
  "game-endless_ammo-desc": "Guns always reload to full.",
  "game-steelskin": "Cast Ironskin",
  "game-steelskin-desc": "Take reduced damage and reflect enemy bullets.</br>Increased size.",
  "game-splinter": "Splinter Rounds",
  "game-splinter-desc": "Rounds fragment into three less powerful bullets.",
  "game-small_arms": "Small Arms",
  "game-small_arms-desc": "Move faster with weapons deployed.</br>Decreased size.",
  "game-takedown": "Takedown",
  "game-takedown-desc": "Kills grant health, boost and a short burst of speed.",
  "game-field_medic": "Combat Medic",
  "game-field_medic-desc": "Move quickly while healing.",
  "game-tree_climbing": "One With Nature",
  "game-tree_climbing-desc": "Move through trees. Move faster in water.",
  "game-scavenger": "Scavenger",
  "game-scavenger-desc": "Obstacles drop additional items when destroyed.",
  "game-scavenger_adv": "Master Scavenger",
  "game-scavenger_adv-desc": "Obstacles drop additional high-quality items when destroyed.",
  "game-hunted": "The Hunted",
  "game-hunted-desc": "Your location is revealed to all enemies.",
  "game-chambered": "One In The Chamber",
  "game-chambered-desc": "First and last round in each magazine deal bonus damage.</br>Does not apply to shotguns.",
  "game-martyrdom": "Martyrdom",
  "game-martyrdom-desc": "Release several live grenades upon death.",
  "game-targeting": "High-Value Targets",
  "game-targeting-desc": "Bullets deal bonus damage to players with perks.",
  "game-bonus_45": ".45 In The Chamber",
  "game-bonus_45-desc": ".45 ACP bullets deal bonus damage.",
  "game-broken_arrow": "Broken Arrow",
  "game-broken_arrow-desc": "Air strikes call in two additional fighters.",
  "game-fabricate": "Fabricate",
  "game-fabricate-desc": "Periodically fill your pack with frag grenades.",
  "game-self_revive": "Revivify",
  "game-self_revive-desc": "You can revive yourself when downed.",
  "game-bonus_9mm": "9mm Overpressure",
  "game-bonus_9mm-desc": "9mm bullets have increased speed, range, damage and spread.",
  "game-flak_jacket": "Flak Jacket",
  "game-flak_jacket-desc": "Greatly reduces damage from explosions and shrapnel.",
  "game-explosive": "Explosive Rounds",
  "game-explosive-desc": "Bullets explode on impact.",
  "game-bonus_assault": "Hollow-points",
  "game-bonus_assault-desc": "All your bullets deal bonus damage.",
  "game-inspiration": "Inspiration",
  "game-inspiration-desc": "Your bugle call grants nearby allies a short burst of speed.",
  "game-final_bugle": "Last Breath",
  "game-final_bugle-desc": "When you die, nearby allies are bloodlusted for a short period of time.",
  "game-halloween_mystery": "Trick or Treat?",
  "game-halloween_mystery-desc": "Could be either.",
  "game-trick_nothing": "One With Nothing",
  "game-trick_nothing-desc": "Tricked! This perk does absolutely nothing!",
  "game-trick_size": "Feedership",
  "game-trick_size-desc": "Tricked! You ate too much chicken and grew in size!",
  "game-trick_m9": "Dev Troll Special",
  "game-trick_m9-desc": "Tricked! You've been cursed with a developer 'treat'!",
  "game-trick_chatty": "Gabby Ghost",
  "game-trick_chatty-desc": "Tricked! You're emoting randomly!",
  "game-trick_drain": "That Sucks",
  "game-trick_drain-desc": "Tricked! You're bleeding very, very, VERY slowly!",
  "game-treat_9mm": "Candy Corn",
  "game-treat_9mm-desc": "Treat! 9mm bullets are darker and deadlier.",
  "game-treat_12g": "Red Jelly Beans",
  "game-treat_12g-desc": "Treat! 12 gauge pellets are darker and deadlier.",
  "game-treat_556": "Sour Apple Belt",
  "game-treat_556-desc": "Treat! 5.56mm bullets are darker and deadlier.",
  "game-treat_762": "Blueberry Taffy",
  "game-treat_762-desc": "Treat! 7.62mm bullets are darker and deadlier.",
  "game-treat_super": "Full Size OKAMI Bar",
  "game-treat_super-desc": "Super Treat! ALL your bullets are darker and deadlier.",
  "game-turkey_shoot": "Perky Shoot",
  "game-turkey_shoot-desc": "Gobble, gobble!",
  "game-xp-drop-desc": "Pass XP",
  "game-xp_book_tallow": "Tallow's Journal",
  "game-xp_book_greene": "Greene's Infinite Wisdom",
  "game-xp_book_parma": "The PARMA Papers",
  "game-xp_book_nevelskoy": "The Nevelskoy Report",
  "game-xp_book_rinzo": "RinzÅ's Log",
  "game-xp_book_kuga": "Memoirs of Kuga KairyÅ«",
  "game-xp_glasses": "Lenz's Spectacles",
  "game-xp_compass": "AmÃ©lie's True Compass",
  "game-xp_stump": "Ravenstone's Bloody Stump",
  "game-xp_bone": "Bone of Gordon",
  "game-xp_donut": "Cake Donut"
};
function Vo(u, e) {
  let t = {
    url: u,
    type: "GET"
  };
  c.ajax(t).done(i => {
    e(null, i);
  }).fail(i => {
    e(i);
  });
}
let Pi = {
  da: "Dansk",
  de: "Deutsch",
  en: "English",
  es: "EspaÃ±ol",
  fr: "FranÃ§ais",
  it: "Italiano",
  nl: "Nederlands",
  pl: "Polski",
  pt: "PortuguÃªs",
  ru: "Ð ÑƒÑÑÐºÐ¸Ð¹",
  sv: "Svenska",
  vn: "Tiáº¿ng Viá»‡t",
  tr: "TÃ¼rkÃ§e",
  jp: "æ—¥æœ¬èªž",
  ko: "í•œêµ­ì–´",
  th: "à¸ à¸²à¸©à¸²à¹„à¸—à¸¢",
  "zh-cn": "ä¸­æ–‡ç®€ä½“",
  "zh-tw": "ä¸­æ–‡ç¹é«”"
};
class Zo {
  acceptedLocales = Object.keys(Pi);
  translations = {
    en: Fo
  };
  locale = "en";
  letructor() {
    this.locale = "en";
  }
  detectLocale() {
    let e = (navigator.language || navigator.userLanguage).toLowerCase();
    let t = ["pt", "de", "es", "fr", "ko", "ru", "en"];
    for (let i = 0; i < t.length; i++) {
      if (e.includes(t[i])) {
        e = t[i];
        break;
      }
    }
    for (let i = 0; i < this.acceptedLocales.length; i++) {
      if (e.includes(this.acceptedLocales[i])) {
        return this.acceptedLocales[i];
      }
    }
    return "en";
  }
  setLocale(e) {
    let t = this.acceptedLocales.includes(e) ? e : "en";
    if (t != this.locale) {
      if (this.translations[e] === undefined) {
        Vo(`/l10n/${e}.json`, (i, r) => {
          if (i) {
            console.error(`Failed loading translation data for locale ${e}`);
            return;
          }
          this.translations[e] = r;
          this.setLocale(e);
        });
      } else {
        this.locale = t;
        this.localizeIndex();
      }
    }
  }
  getLocale() {
    return this.locale;
  }
  translate(e) {
    return this.translations[this.locale][e] || this.translations.en[e] || "";
  }
  localizeIndex() {
    c("*[data-l10n]").each((t, i) => {
      let r = c(i);
      let a = r.attr("data-l10n");
      if (r.hasClass("help-control") && v.touch) {
        a += "-touch";
      }
      let l = this.translate(a);
      if (l) {
        if (r.attr("label")) {
          r.attr("label", l);
        } else {
          r.html(l);
          if (r.attr("data-label")) {
            r.attr("data-label", l);
          }
        }
      }
    });
  }
  populateLanguageSelect() {
    let e = c(".language-select");
    e.empty();
    for (let t = 0; t < this.acceptedLocales.length; t++) {
      let i = this.acceptedLocales[t];
      let r = Pi[i];
      e.append(c("<option>", {
        value: i,
        text: r
      }));
    }
  }
}
function Ci(u, e, t, i) {
  let r = c("<div/>", {
    class: "copy-toast",
    html: u
  });
  e.append(r);
  r.css({
    left: i.pageX - parseInt(r.css("width")) / 2,
    top: t.offset().top
  });
  r.animate({
    top: "-=25",
    opacity: 1
  }, {
    queue: false,
    duration: 300,
    complete: function () {
      c(this).fadeOut(250, function () {
        c(this).remove();
      });
    }
  });
}
function Xo(u, e) {
  let t = c("#start-menu");
  c("#btn-help").click(() => {
    let x = c("#start-help");
    t.addClass("display-help");
    let y = t.css("height");
    x.css("display", "block");
    t.animate({
      scrollTop: y
    }, 1000);
    return false;
  });
  let i = c("#team-mobile-link");
  let r = c("#team-mobile-link-desc");
  let a = c("#team-mobile-link-warning");
  let l = c("#team-link-input");
  let s = c("#social-share-block");
  let m = c("#news-block");
  c("#btn-join-team").click(() => {
    c("#server-warning").css("display", "none");
    l.val("");
    i.css("display", "block");
    r.css("display", "block");
    a.css("display", "none");
    t.css("display", "none");
    m.css("display", "none");
    s.css("display", "none");
    c("#right-column").css("display", "none");
    return false;
  });
  c("#btn-team-mobile-link-leave").click(() => {
    i.css("display", "none");
    l.val("");
    t.css("display", "block");
    m.css("display", "block");
    s.css("display", "block");
    c("#right-column").css("display", "block");
    return false;
  });
  c("#team-link-input").on("keypress", function (x) {
    if ((x.which || x.keyCode) === 13) {
      c("#btn-team-mobile-link-join").trigger("click");
      c(this).blur();
    }
  });
  c("#player-name-input-solo").on("keypress", function (x) {
    if ((x.which || x.keyCode) === 13) {
      c(this).blur();
    }
  });
  if (v.mobile && v.os != "ios") {
    c("#player-name-input-solo").on("focus", function () {
      if (v.isLandscape) {
        let y = v.screenHeight <= 282 ? 18 : 36;
        document.body.scrollTop = c(this).offset().top - y;
      }
    });
    c("#player-name-input-solo").on("blur", () => {
      document.body.scrollTop = 0;
    });
  }
  let d = c("#start-bottom-right");
  let h = c("#start-top-left");
  let p = c("#start-top-right");
  let w = new de(c("#ui-modal-keybind"));
  w.onShow(() => {
    d.fadeOut(200);
    p.fadeOut(200);
    c("#ui-modal-keybind-share").css("display", "none");
    c("#keybind-warning").css("display", "none");
    c("#ui-modal-keybind-list").css("height", "420px");
    c("#keybind-code-input").html("");
    e.refresh();
  });
  w.onHide(() => {
    d.fadeIn(200);
    p.fadeIn(200);
    e.cancelBind();
  });
  c(".btn-keybind").click(() => {
    w.show();
    return false;
  });
  c(".js-btn-keybind-share").click(() => {
    if (c("#ui-modal-keybind-share").css("display") == "block") {
      c("#ui-modal-keybind-share").css("display", "none");
      c("#ui-modal-keybind-list").css("height", "420px");
    } else {
      c("#ui-modal-keybind-share").css("display", "block");
      c("#ui-modal-keybind-list").css("height", "275px");
    }
  });
  c("#keybind-link, #keybind-copy").click(x => {
    Ci("Copied!", w.selector, c("#keybind-link"), x);
    let y = c("#keybind-link").html();
    $.copyTextToClipboard(y);
  });
  c("#btn-keybind-code-load").on("click", x => {
    let y = c("#keybind-code-input").val();
    c("#keybind-code-input").val("");
    let C = u.fromBase64(String(y));
    c("#keybind-warning").css("display", C ? "none" : "block");
    if (C) {
      Ci("Loaded!", w.selector, c("#btn-keybind-code-load"), x);
      u.saveBinds();
    }
    e.refresh();
  });
  let f = new de(c("#modal-settings"));
  f.onShow(() => {
    d.fadeOut(200);
    p.fadeOut(200);
  });
  f.onHide(() => {
    d.fadeIn(200);
    p.fadeIn(200);
  });
  c(".btn-settings").click(() => {
    f.show();
    return false;
  });
  c(".modal-settings-text").click(function (x) {
    let y = c(this).siblings("input:checkbox");
    y.prop("checked", !y.is(":checked"));
    y.trigger("change");
  });
  let S = new de(c("#modal-hamburger"));
  S.onShow(() => {
    h.fadeOut(200);
  });
  S.onHide(() => {
    h.fadeIn(200);
  });
  c("#btn-hamburger").click(() => {
    S.show();
    return false;
  });
  c(".modal-body-text").click(function () {
    let x = c(this).siblings("input:checkbox");
    x.prop("checked", !x.is(":checked"));
    x.trigger("change");
  });
  c("#force-refresh").click(() => {
    window.location.href = `/?t=${Date.now()}`;
  });
}
function Wo() {
  if (v.os == "ios") {
    if (v.model == "iphonex") {
      if (v.isLandscape) {
        c(".main-volume-slider").css("width", "90%");
      } else {
        c(".main-volume-slider").css("width", "");
      }
    } else if (!window.navigator.standalone) {
      if (v.isLandscape) {
        c("#start-main-center").attr("style", "");
        c("#modal-customize .modal-content").attr("style", "");
      } else {
        c("#modal-customize .modal-content").css({
          transform: "translate(-50%, -50%) scale(0.45)",
          top: "38%"
        });
      }
    }
  }
  if (v.tablet) {
    c("#featured-youtuber").remove();
    c(".btn-youtube").remove();
  }
  if (v.touch) {
    c(".btn-start-fullscreen").css("display", "none");
  } else {
    c(".btn-start-fullscreen").css("display", "block");
  }
  c(".btn-keybind").css("display", v.mobile ? "none" : "inline-block");
}
function Ho(u) {
  c("#team-hide-url").css("display", "none");
  if (u) {
    c("#start-bottom-middle").addClass("start-bottom-middle-tablet");
  }
}
let zt = {
  setupModals: Xo,
  onResize: Wo,
  applyMobileBrowserStyling: Ho
};
class Go {
  letructor(e, t, i, r, a) {
    this.pixi = e;
    this.audioManager = t;
    this.config = i;
    this.inputBinds = r;
    this.account = a;
  }
  active = false;
  initialized = false;
  canvasMode;
  camera;
  renderer;
  particleBarn;
  decalBarn;
  map;
  playerBarn;
  smokeBarn;
  objectCreator;
  debugDisplay;
  loadout;
  view;
  viewOld;
  cameraOffset = n.create(0, 0);
  q = 1;
  debugZoom = 1;
  useDebugZoom = false;
  outfitOld;
  animIdleTicker;
  animSeq;
  actionSeq;
  activeId = 98;
  activePlayer;
  init() {
    this.canvasMode = this.pixi.renderer.type == ot.CANVAS;
    this.camera = new Xi();
    this.renderer = new ar(this, this.canvasMode);
    this.particleBarn = new Ki(this.renderer);
    this.decalBarn = new Ji();
    this.map = new $i(this.decalBarn);
    this.playerBarn = new ir();
    this.smokeBarn = new rr();
    let e = {
      [ce.Player]: this.playerBarn.playerPool,
      [ce.Obstacle]: this.map.fBXVaI,
      [ce.Building]: this.map.fWZ,
      [ce.Structure]: this.map.OYF,
      [ce.Decal]: this.decalBarn.decalPool,
      [ce.Smoke]: this.smokeBarn.fEtbJP
    };
    this.objectCreator = new Ui();
    for (let i in e) {
      if (e.hasOwnProperty(i)) {
        this.objectCreator.wpv(i, e[i]);
      }
    }
    this.debugDisplay = new pe();
    let t = [this.map.display.ground, this.renderer.layers[0], this.renderer.ground, this.renderer.layers[1], this.renderer.layers[2], this.renderer.layers[3], this.debugDisplay];
    for (let i = 0; i < t.length; i++) {
      let r = t[i];
      if (r) {
        r.interactiveChildren = false;
        this.pixi.stage.addChild(r);
      }
    }
    this.loadout = le.defaultLoadout();
    this.setLoadout(this.loadout);
    this.view = "outfit";
    this.viewOld = this.view;
    this.outfitOld = this.loadout.outfit;
    this.map.loadMap({
      grassInset: 18,
      groundPatches: [],
      height: 720,
      mapName: "main",
      objects: [],
      places: [],
      rivers: [],
      seed: 218051654,
      shoreInset: 48,
      width: 720
    }, this.camera, this.canvasMode, this.particleBarn);
    this.activePlayer = this.playerBarn.getPlayerById(this.activeId);
    this.activePlayer.wWgxC({
      boost: 100,
      boostDirty: true,
      hasAction: false,
      health: 100,
      inventoryDirty: false,
      scopedIn: false,
      spectatorCountDirty: false,
      weapsDirty: true,
      curWeapIdx: 2,
      weapons: [{
        name: "",
        ammo: 0
      }, {
        name: "",
        ammo: 0
      }, {
        name: "bayonet_rugged",
        ammo: 0
      }, {
        name: "",
        ammo: 0
      }]
    }, this.playerBarn);
    this.activePlayer.layer = this.activePlayer.iDmhea.Rpch;
    this.activePlayer.isLoadoutAvatar = true;
    this.renderer.setActiveLayer(this.activePlayer.layer);
    this.audioManager.activeLayer = this.activePlayer.layer;
    this.animIdleTicker = 3;
    this.animSeq = 0;
    this.actionSeq = 0;
    this.hide();
    this.account.addEventListener("loadout", i => {
      this.setLoadout(i, true);
    });
    this.setLoadout(this.account.loadout, true);
    this.initialized = true;
    this.resize();
  }
  free() {
    if (this.initialized) {
      this.map.HJMxT();
      this.particleBarn.HJMxT();
      this.renderer.HJMxT();
      while (this.pixi.stage.children.length > 0) {
        let e = this.pixi.stage.children[0];
        this.pixi.stage.removeChild(e);
        e.destroy({
          children: true
        });
      }
    }
    this.initialized = false;
  }
  setLoadout(e, t) {
    this.loadout = le.validate(e);
    this.updateCharDisplay();
    if (t) {
      this.outfitOld = this.loadout.outfit;
    }
    if (this.activePlayer) {
      this.activePlayer.playActionStartSfx = true;
    }
    this.animIdleTicker = 0;
  }
  setView(e) {
    this.viewOld = this.view;
    this.view = e;
  }
  updateCharDisplay(e = {}) {
    let t = {
      audioManager: this.audioManager,
      renderer: this.renderer,
      particleBarn: this.particleBarn,
      map: this.map,
      smokeBarn: this.smokeBarn,
      decalBarn: this.decalBarn
    };
    if (this.activePlayer?.useItemEmitter) {
      this.activePlayer.useItemEmitter.stop();
      this.activePlayer.useItemEmitter = null;
      this.animIdleTicker = 0;
    }
    let i = {
      outfit: this.loadout.outfit,
      backpack: "backpack02",
      helmet: "helmet01",
      chest: "chest03",
      activeWeapon: this.loadout.melee,
      layer: 0,
      dead: false,
      downed: false,
      animType: e.animType || 0,
      animSeq: e.animSeq || 0,
      actionSeq: e.actionSeq || 0,
      actionType: e.actionType || 0,
      actionItem: e.actionItem || "",
      wearingPan: false,
      healEffect: false,
      frozen: false,
      frozenOri: 0,
      hasteType: 0,
      hasteSeq: 0,
      scale: 1,
      role: "",
      perks: [],
      $r: false,
      pos: n.create(50, 50),
      dir: n.create(0, -1)
    };
    this.objectCreator.Rgm(ce.Player, 98, i, t);
    this.playerBarn.setPlayerInfo({
      playerId: 98,
      teamId: 0,
      groupId: 0,
      name: "",
      loadout: {
        heal: this.loadout.heal,
        boost: this.loadout.boost
      }
    });
  }
  getCameraTargetZoom() {
    return document.getElementById("modal-content-left").getBoundingClientRect().height / this.camera.gMqwV * 0.2 * this.camera.gMqwV * 0.5 / this.camera.HrSNF;
  }
  getCameraLoadoutOffset() {
    let e = this.camera.HyIw;
    let t = this.getCameraTargetZoom();
    this.camera.HyIw = t;
    let r = document.getElementById("modal-content-left").getBoundingClientRect();
    let a = X.createAabb(this.camera.iCWER(n.create(r.left, r.top + r.height)), this.camera.iCWER(n.create(r.left + r.width, r.top)));
    let l = n.mul(n.sub(a.max, a.min), 0.5);
    let s = n.add(a.min, l);
    let m = X.createAabb(this.camera.iCWER(n.create(0, this.camera.gMqwV)), this.camera.iCWER(n.create(this.camera.LCRnPO, 0)));
    let d = n.mul(n.sub(m.max, m.min), 0.5);
    let h = n.add(m.min, d);
    let p = n.sub(s, h);
    let w = d.x - p.x - l.x;
    let f = z.clamp(w * 0.5, 2.5, 6);
    let x = n.create(p.x + l.x + f, p.y + 0.33);
    this.camera.HyIw = e;
    return x;
  }
  show() {
    if (!this.active) {
      this.active = true;
      this.resize();
    }
  }
  hide() {
    if (this.active) {
      this.active = false;
      this.camera.HyIw = 2;
    }
  }
  update(e, t) {
    let i = {};
    this.camera.aznZwb = n.sub(this.activePlayer.aznZwb, this.cameraOffset);
    this.camera.HyIw = z.lerp(e * 5, this.camera.HyIw, this.camera.chvM);
    this.audioManager.cameraPos = n.copy(this.camera.aznZwb);
    if (t && (this.view == this.viewOld || this.view != "heal" && this.view != "boost" || (this.animIdleTicker = 0), this.viewOld = this.view, this.animIdleTicker -= e, this.animIdleTicker < 0)) {
      if (this.view == "heal") {
        this.actionSeq = (this.actionSeq + 1) % 8;
        let a = {
          actionType: R.Action.UseItem,
          actionItem: "bandage",
          actionSeq: this.actionSeq
        };
        this.updateCharDisplay(a);
        this.animIdleTicker = 2 + Math.random();
      } else if (this.view == "boost") {
        this.actionSeq = (this.actionSeq + 1) % 8;
        let a = {
          actionType: R.Action.UseItem,
          actionItem: "soda",
          actionSeq: this.actionSeq
        };
        this.updateCharDisplay(a);
        this.animIdleTicker = 2 + Math.random();
      } else if (this.view != "emote" && this.view != "crosshair") {
        this.animSeq = (this.animSeq + 1) % 8;
        let a = {
          animType: R.Anim.Melee,
          animSeq: this.animSeq
        };
        this.updateCharDisplay(a);
        this.animIdleTicker = 1.5 + Math.random();
      }
    }
    let r = this.loadout.outfit != this.outfitOld;
    this.outfitOld = this.loadout.outfit;
    if (t && r) {
      let a = B[this.loadout.outfit];
      if (a) {
        this.audioManager.playSound(a.sound.pickup, {
          channel: "ui"
        });
      }
    }
    this.playerBarn.PEHQLt(e, this.activeId, this.teamMode, this.renderer, this.particleBarn, this.camera, this.map, this.inputBinds, this.audioManager, false, false, false);
    this.smokeBarn.PEHQLt(e, this.camera, this.activePlayer, this.map, this.renderer);
    this.particleBarn.PEHQLt(e, this.camera, i);
    this.decalBarn.PEHQLt(e, this.camera, this.renderer, i);
    this.renderer.PEHQLt(e, this.camera, this.map, i);
    this.activePlayer.playActionStartSfx = false;
    this.render(e, i);
  }
  render(e, t) {
    let i = this.map.mapLoaded ? this.map.getMapDef().biome.colors.grass : 8433481;
    this.pixi.renderer.background.color = i;
    this.playerBarn.lXaw(this.camera, t);
    this.map.lXaw(this.camera);
    me.lXaw(this.camera, this.debugDisplay);
    me.flush();
  }
  resize() {
    if (this.initialized) {
      this.camera.LCRnPO = v.screenWidth;
      this.camera.gMqwV = v.screenHeight;
      this.map.resize(this.pixi.renderer, this.canvasMode);
      this.renderer.resize(this.map, this.camera);
      this.camera.chvM = this.getCameraTargetZoom();
      this.cameraOffset = this.getCameraLoadoutOffset();
    }
  }
}
let Di = 99;
let Ae = {
  getPassMaxLevel: function () {
    return Di;
  },
  getPassLevelXp: function (u, e) {
    let t = Rt[u];
    let i = e - 1;
    if (i < t.xp.length) {
      return t.xp[i];
    } else {
      return t.xp[t.xp.length - 1];
    }
  },
  getPassLevelAndXp: function (u, e) {
    let t = e;
    let i = 1;
    while (i < Di) {
      let r = Ae.getPassLevelXp(u, i);
      if (t < r) {
        break;
      }
      t -= r;
      i++;
    }
    return {
      level: i,
      xp: t,
      nextLevelXp: Ae.getPassLevelXp(u, i)
    };
  },
  timeUntilQuestRefresh: function (u) {
    return Math.floor((u - 25200000 + 86400000 - 1) / 86400000) * 86400000 + 25200000 - Date.now();
  }
};
function Li(u, e) {
  for (let t = Rt[u], i = 0; i < t.items.length; i++) {
    if (t.items[i].level == e + 1) {
      return t.items[i].item;
    }
  }
  return "";
}
function bt(u, e = false) {
  let t = Math.floor(Math.ceil(u / 60) / 60);
  let i = e ? Math.floor(u / 60) % 60 : Math.ceil(u / 60) % 60;
  let r = "";
  if (t > 0) {
    r += `${t}h `;
  }
  return r += `${i}m`;
}
class Uo {
  letructor(e, t, i) {
    this.account = e;
    this.loadoutMenu = t;
    this.localization = i;
    this.account = e;
    this.loadoutMenu = t;
    this.localization = i;
    this.account.addEventListener("request", this.onRequest.bind(this));
    this.account.addEventListener("pass", this.onPass.bind(this));
    this.loadPlaceholders();
    c("#pass-progress-unlock-wrapper").hover(() => {
      c("#pass-unlock-tooltip").fadeIn(50);
    }, () => {
      c("#pass-unlock-tooltip").fadeOut(50);
    });
  }
  pass = {
    data: {
      type: "pass_survivr1"
    },
    currentXp: 0,
    currentLevel: 1,
    levelXp: 0,
    ticker: 0,
    animSteps: [],
    elems: {}
  };
  quests = [];
  loaded = false;
  lockDisplayed = false;
  updatePass = false;
  updatePassTicker = 0;
  onPass(e, t, i) {
    let a = [];
    let l = 0;
    for (let f = 0; f < t.length; f++) {
      (S => {
        let x = t[S];
        let y = {
          data: x,
          start: 0,
          current: 0,
          ticker: 0,
          delay: l * 0.5,
          playCompleteAnim: false,
          progressAnimFinished: false,
          completeAnimFinished: false,
          shouldRequestRefresh: i,
          refreshTime: Date.now() + x.timeToRefresh + 5000,
          refreshSet: false,
          refreshEnabled: false,
          timer: {
            enabled: false,
            str: ""
          }
        };
        let C = this.quests.find(D => D.data.idx == y.data.idx && D.data.type == y.data.type);
        if (C) {
          y.start = C.current;
          y.current = C.current;
          if (!C.data.complete && y.data.complete) {
            y.playCompleteAnim = true;
          }
        }
        y.data.progress = z.min(y.data.progress, y.data.target);
        if (y.data.progress > y.current) {
          l++;
        }
        let P = c(`#pass-quest-${y.data.idx}`);
        y.elems = {
          main: P,
          xp: P.find(".pass-quest-xp"),
          info: P.find(".pass-quest-info"),
          desc: P.find(".pass-quest-desc"),
          cur: P.find(".pass-quest-counter-current"),
          target: P.find(".pass-quest-counter-target"),
          refresh: P.find(".pass-quest-refresh"),
          refreshPrompt: P.find(".pass-quest-refresh-prompt"),
          refreshConfirm: P.find(".pass-quest-refresh-confirm"),
          refreshCancel: P.find(".pass-quest-refresh-cancel"),
          counter: P.find(".pass-quest-counter"),
          barFill: P.find(".pass-quest-bar-fill"),
          timer: P.find(".pass-quest-timer"),
          loading: P.find(".pass-quest-spinner")
        };
        y.elems.barFill.clearQueue();
        y.elems.main.removeClass("pass-bg-pulse");
        y.elems.main.stop().css({
          opacity: 1
        });
        y.elems.xp.removeClass("pass-text-pulse");
        y.elems.refresh.stop().css({
          opacity: 1
        });
        y.elems.counter.stop().css({
          opacity: 1
        });
        let k = $t[y.data.type];
        let b = this.localization.translate(`${y.data.type}`) || y.data.type;
        let M = y.current / y.data.target * 100;
        y.elems.main.css("display", "block");
        y.elems.desc.html(b);
        y.elems.cur.html(Math.round(y.current));
        y.elems.xp.html(`${k.xp} XP`);
        y.elems.barFill.css({
          width: `${M}%`
        });
        y.elems.loading.css("display", "none");
        let E = y.data.target;
        if (k.timed) {
          E = bt(E);
        }
        y.elems.target.html(E);
        if (k.icon) {
          y.elems.desc.addClass("pass-quest-desc-icon");
          y.elems.desc.css({
            "background-image": `url(${k.icon})`
          });
        } else {
          y.elems.desc.removeClass("pass-quest-desc-icon");
          y.elems.desc.attr("style", "");
        }
        this.setQuestRefreshEnabled(y);
        a.push(y);
      })(f);
    }
    this.quests = a;
    this.pass.data = e;
    this.pass.animSteps = [];
    this.pass.currentXp = Math.round(this.pass.currentXp);
    this.pass.levelXp = Ae.getPassLevelXp(e.type, this.pass.currentLevel);
    if (!this.loaded) {
      let f = Ae.getPassLevelXp(e.type, e.level);
      this.pass.currentXp = 0;
      this.pass.currentLevel = e.level;
      this.pass.levelXp = f;
      this.pass.ticker = 0;
    }
    let s = this.pass.currentLevel;
    let m = this.pass.currentXp;
    if (this.loaded) {
      while (s < e.level) {
        let S = Ae.getPassLevelXp(e.type, s);
        this.pass.animSteps.push({
          startXp: m,
          targetXp: S,
          levelXp: S,
          targetLevel: s + 1
        });
        s++;
        m = 0;
      }
      let f = l > 0 ? 2 : 0;
      this.pass.ticker = -f;
    }
    let d = Ae.getPassLevelXp(e.type, s);
    this.pass.animSteps.push({
      startXp: m,
      targetXp: e.xp,
      levelXp: d,
      targetLevel: s
    });
    c("#pass-block").css("z-index", "1");
    c("#pass-locked").css("display", "none");
    c("#pass-loading").css("display", "none");
    let h = Li(this.pass.data.type, this.pass.currentLevel);
    this.setPassUnlockImage(h);
    let p = this.localization.translate(e.type).toUpperCase();
    c("#pass-name-text").html(p);
    c("#pass-progress-level").html(this.pass.currentLevel);
    c("#pass-progress-xp-current").html(this.pass.currentXp);
    c("#pass-progress-xp-target").html(this.pass.levelXp);
    let w = this.pass.currentXp / this.pass.levelXp * 100;
    c("#pass-progress-bar-fill").css({
      width: `${w}%`
    });
    this.loaded = true;
  }
  onRequest(e) {
    c("#pass-loading").css("display", e.loggingIn ? "block" : "none");
  }
  scheduleUpdatePass(e) {
    this.updatePass = true;
    this.updatePassTicker = e;
  }
  setQuestRefreshEnabled(e) {
    let t = !e.data.rerolled && !e.data.complete || e.refreshTime - Date.now() < 0;
    if (t != e.refreshEnabled || !e.refreshSet) {
      e.refreshEnabled = t;
      e.refreshSet = true;
      e.elems.refresh.off("click");
      e.elems.refreshConfirm.off("click");
      e.elems.refreshCancel.off("click");
      if (e.refreshEnabled) {
        e.elems.refreshConfirm.on("click", () => {
          e.elems.loading.css("display", "block");
          e.elems.refreshPrompt.css("display", "none");
          this.account.refreshQuest(e.data.idx);
        });
        e.elems.refreshCancel.on("click", () => {
          e.elems.refreshPrompt.css("display", "none");
          e.elems.info.css("display", "block");
        });
        e.elems.refresh.on("click", () => {
          e.elems.refreshPrompt.css("display", "block");
          e.elems.info.css("display", "none");
        });
        e.elems.refresh.removeClass("pass-quest-refresh-disabled");
      } else {
        e.elems.refresh.addClass("pass-quest-refresh-disabled");
      }
    }
  }
  setPassUnlockImage(e) {
    let t = B[e];
    let r = `url(${t ? $.getSvgFromGameType(e) : "img/emotes/surviv.svg"})`;
    let a = $.getCssTransformFromGameType(e);
    c("#pass-progress-unlock").css({
      opacity: t ? 1 : 0.15,
      transform: `translate(-50%, -50%) ${a}`
    });
    c("#pass-progress-unlock-image").css({
      "background-image": r
    });
    let l = t ? this.localization.translate(`loadout-title-${this.loadoutMenu.getCategory(t.type).loadoutType}`).toUpperCase() : "";
    let s = c("#pass-unlock-tooltip");
    s.css("opacity", t ? 1 : 0);
    s.find(".tooltip-pass-title").html(l);
    s.find(".tooltip-pass-desc").html(t ? t.name : "");
    let m = t ? `url(${this.loadoutMenu.getCategory(t.type).categoryImage})` : "";
    c("#pass-progress-unlock-type-image").css({
      "background-image": m
    });
    c("#pass-progress-unlock-type-wrapper").css({
      display: t ? "block" : "none"
    });
  }
  animatePassLevelUp() {
    let e = c("#pass-progress-bar-fill");
    let t = c("#pass-progress-level");
    let i = c("#pass-progress-unlock-wrapper");
    let r = c("#pass-progress-unlock-image");
    let a = c("#pass-progress-unlock-type-image");
    t.html(this.pass.currentLevel);
    e.queue(l => {
      i.addClass("pass-unlock-pulse");
      c(l).dequeue();
    }).delay(750).queue(l => {
      r.animate({
        opacity: 0
      }, 250);
      a.animate({
        opacity: 0
      }, 250);
      c(l).dequeue();
    }).delay(250).queue(l => {
      let s = Li(this.pass.data.type, this.pass.currentLevel);
      this.setPassUnlockImage(s);
      i.removeClass("pass-unlock-pulse");
      r.animate({
        opacity: 1
      }, 250);
      a.animate({
        opacity: 1
      }, 250);
      c(l).dequeue();
    });
  }
  animateQuestComplete(e) {
    e.elems.barFill.queue(t => {
      e.elems.main.addClass("pass-bg-pulse");
      e.elems.xp.addClass("pass-text-pulse");
      e.elems.refresh.animate({
        opacity: 0.25
      }, 250);
      e.elems.refresh.removeClass("pass-quest-refresh-disabled");
      e.elems.refresh.animate({
        opacity: 0
      }, 250);
      e.elems.counter.animate({
        opacity: 0
      }, 250);
      e.elems.desc.html("QUEST COMPLETE!");
      c(t).dequeue();
    }).delay(1000).queue(t => {
      e.elems.main.animate({
        opacity: 0
      }, 750);
      c(t).dequeue();
    });
  }
  update(e) {
    this.updatePassTicker -= e;
    if (this.updatePass && this.updatePassTicker < 0) {
      this.updatePass = false;
      this.account.getPass(false);
    }
    for (let t = 0; t < this.quests.length; t++) {
      let i = this.quests[t];
      this.setQuestRefreshEnabled(i);
      i.ticker += e;
      if (!i.progressAnimFinished) {
        let l = z.clamp((i.ticker - i.delay) / 1, 0, 1);
        i.current = z.lerp(z.easeOutExpo(l), i.start, i.data.progress);
        let s = i.current / i.data.target * 100;
        let m = $t[i.data.type];
        let d = Math.round(i.current);
        if (m.timed) {
          d = bt(d, true);
        }
        i.elems.cur.html(d);
        i.elems.barFill.css({
          width: `${s}%`
        });
        if (l >= 1) {
          i.progressAnimFinished = true;
        }
      }
      if (i.playCompleteAnim && !i.completeAnimFinished && i.ticker - i.delay > 1.25) {
        this.animateQuestComplete(i);
        i.completeAnimFinished = true;
      }
      let r = !i.playCompleteAnim || i.completeAnimFinished && i.ticker - i.delay > 4.25;
      if (i.data.complete && r && i.refreshEnabled && i.shouldRequestRefresh) {
        i.shouldRequestRefresh = false;
        this.account.refreshQuest(i.data.idx);
      }
      let a = i.data.complete && r;
      if (a != i.timer.displayed) {
        i.timer.displayed = a;
        i.elems.main.removeClass("pass-bg-pulse");
        i.elems.main.stop().animate({
          opacity: 1
        }, 250);
        let l = i.elems.refreshPrompt.css("display") == "block";
        i.elems.info.css("display", a || l ? "none" : "block");
        i.elems.timer.css("display", a ? "block" : "none");
      }
      if (a) {
        let l = Math.max(i.refreshTime - Date.now(), 0);
        let s = bt(l / 1000);
        if (s != i.timer.str) {
          i.timer.str = s;
          i.elems.timer.html(s);
        }
      }
    }
    this.pass.ticker += e;
    if (this.pass.animSteps.length > 0 && this.pass.ticker >= 0) {
      let t = this.pass.animSteps[0];
      let i = z.clamp(this.pass.ticker / 1.5, 0, 1);
      this.pass.currentXp = z.lerp(z.easeOutExpo(i), t.startXp, t.targetXp);
      this.pass.levelXp = t.levelXp;
      let r = this.pass.currentXp / t.levelXp * 100;
      c("#pass-progress-xp-current").html(Math.round(this.pass.currentXp));
      c("#pass-progress-xp-target").html(this.pass.levelXp);
      c("#pass-progress-bar-fill").css({
        width: `${r}%`
      });
      if (i >= 1) {
        if (t.targetLevel > this.pass.currentLevel) {
          this.pass.currentLevel = t.targetLevel;
          this.animatePassLevelUp();
        }
        this.pass.animSteps.shift();
        this.pass.ticker -= 3;
      }
    }
    if (!this.account.loggingIn && !this.account.loggedIn && !this.lockDisplayed) {
      c("#pass-block").css("z-index", "1");
      c("#pass-loading").css("display", "none");
      c("#pass-locked").css("display", "block");
      this.lockDisplayed = true;
    }
  }
  onResize() {}
  loadPlaceholders() {
    let e = Rt.pass_survivr1;
    let t = this.localization.translate("pass_survivr1").toUpperCase();
    c("#pass-name-text").html(t);
    c("#pass-progress-level").html(1);
    c("#pass-progress-xp-current").html(0);
    c("#pass-progress-xp-target").html(e.xp[0]);
    this.setPassUnlockImage(e.items[0].item);
  }
}
function $o(u, e, t, i) {
  let r = u.find(".login-options-content");
  r.empty();
  if (e) {
    r.append(c("<div/>", {
      class: "account-login-desc"
    }).append(c("<p/>", {
      html: i.translate("index-link-account-to")
    })));
  }
  let a = c("<div/>", {
    class: "account-buttons"
  });
  r.append(a);
  let l = function (s, m, d) {
    let h = c("<div/>", {
      class: `menu-option btn-darken btn-standard btn-login-${s}`
    });
    h.append(c("<span/>", {
      class: "login-button-name"
    }).append(c("<span/>", {
      html: i.translate(`index-${s}`)
    })).append(c("<div/>", {
      class: "icon"
    })));
    if (e && m) {
      h.addClass("btn-login-linked");
      h.find("span.login-button-name").html("<div class=\"icon\"></div>");
    } else {
      h.click(p => {
        d();
      });
    }
    a.append(h);
  };
  l("twitch", t.profile.linkedTwitch, () => {
    window.location.href = "/api/user/auth/twitch";
  });
  l("discord", t.profile.linkedDiscord, () => {
    window.location.href = "/api/user/auth/discord";
  });
}
class Jo {
  letructor(e, t, i, r) {
    this.account = e;
    this.localization = t;
    this.loadoutMenu = i;
    this.errorModal = r;
    this.account = e;
    this.localization = t;
    this.loadoutMenu = i;
    this.errorModal = r;
    e.addEventListener("error", this.onError.bind(this));
    e.addEventListener("login", this.onLogin.bind(this));
    e.addEventListener("loadout", this.onLoadoutUpdated.bind(this));
    e.addEventListener("items", this.onItemsUpdated.bind(this));
    e.addEventListener("request", this.render.bind(this));
    this.initUi();
    this.render();
  }
  setNameModal = null;
  resetStatsModal = null;
  deleteAccountModal = null;
  userSettingsModal = null;
  loginOptionsModal = null;
  createAccountModal = null;
  loginOptionsModalMobile;
  modalMobileAccount;
  initUi() {
    let e = function () {
      c("#modal-body-warning").css("display", "none");
      c("#modal-account-name-input").val("");
    };
    this.setNameModal = new de(c("#modal-account-name-change"));
    this.setNameModal.onShow(e);
    this.setNameModal.onHide(e);
    c("#modal-account-name-finish").click(t => {
      t.stopPropagation();
      let i = c("#modal-account-name-input").val();
      this.account.setUsername(i, r => {
        if (r) {
          let a = {
            failed: "Failed setting username.",
            invalid: "Invalid username.",
            taken: "Name already taken!",
            change_time_not_expired: "Username has already been set recently."
          };
          let l = a[r] || a.failed;
          c("#modal-body-warning").hide();
          c("#modal-body-warning").html(l);
          c("#modal-body-warning").fadeIn();
        } else {
          this.setNameModal.hide();
        }
      });
    });
    c("#modal-account-name-input").on("keypress", t => {
      if ((t.which || t.keyCode) === 13) {
        c("#modal-account-name-finish").trigger("click");
      }
    });
    this.resetStatsModal = new de(c("#modal-account-reset-stats"));
    this.resetStatsModal.onShow(() => {
      c("#modal-account-reset-stats-input").val("");
      this.modalMobileAccount.hide();
    });
    c("#modal-account-reset-stats-finish").click(t => {
      t.stopPropagation();
      if (c("#modal-account-reset-stats-input").val() == "RESET STATS") {
        this.account.resetStats();
        this.resetStatsModal.hide();
      }
    });
    c("#modal-account-reset-stats-input").on("keypress", t => {
      if ((t.which || t.keyCode) === 13) {
        c("#modal-account-reset-stats-finish").trigger("click");
      }
    });
    this.deleteAccountModal = new de(c("#modal-account-delete"));
    this.deleteAccountModal.onShow(() => {
      c("#modal-account-delete-input").val("");
      this.modalMobileAccount.hide();
    });
    c("#modal-account-delete-finish").click(t => {
      t.stopPropagation();
      if (c("#modal-account-delete-input").val() == "DELETE") {
        this.account.deleteAccount();
        this.deleteAccountModal.hide();
      }
    });
    c("#modal-account-delete-input").on("keypress", t => {
      if ((t.which || t.keyCode) === 13) {
        c("#modal-account-delete-finish").trigger("click");
      }
    });
    this.userSettingsModal = new de(c(".account-buttons-settings"));
    this.userSettingsModal.checkSelector = false;
    this.userSettingsModal.skipFade = true;
    this.userSettingsModal.onShow(() => {
      c(".account-details-top").css("display", "none");
    });
    this.userSettingsModal.onHide(() => {
      c(".account-details-top").css("display", "block");
    });
    this.loginOptionsModal = new de(c("#account-login-options"));
    this.loginOptionsModal.checkSelector = false;
    this.loginOptionsModal.skipFade = true;
    this.loginOptionsModal.onShow(() => {
      c(".account-details-top").css("display", "none");
    });
    this.loginOptionsModal.onHide(() => {
      c(".account-details-top").css("display", "block");
    });
    this.loginOptionsModalMobile = new de(c("#account-login-options-mobile"));
    this.loginOptionsModalMobile.checkSelector = false;
    this.loginOptionsModalMobile.skipFade = true;
    this.loginOptionsModalMobile.onShow(() => {
      c(".account-details-top").css("display", "none");
    });
    this.loginOptionsModalMobile.onHide(() => {
      c(".account-details-top").css("display", "block");
    });
    this.createAccountModal = new de(c("#modal-create-account-INVALID_ID"));
    this.createAccountModal.onHide(() => {
      this.loadoutMenu.hide();
    });
    this.modalMobileAccount = new de(c("#modal-mobile-account"));
    this.modalMobileAccount.onShow(() => {
      c("#start-top-right").css("display", "none");
      c(".account-details-top").css("display", "none");
    });
    this.modalMobileAccount.onHide(() => {
      c("#start-top-right").css("display", "block");
      c(".account-details-top").css("display", "block");
      this.userSettingsModal.hide();
    });
    c(".account-leaderboard-link").click(t => {
      window.open(Ue.resolveUrl("/stats"), "_blank");
      return false;
    });
    c(".account-stats-link").click(() => {
      this.waitOnLogin(() => {
        if (this.account.loggedIn) {
          if (this.account.profile.usernameSet) {
            let t = this.account.profile.slug || "";
            window.open(`/stats/${t}`, "_blank");
          } else {
            this.setNameModal.show(true);
          }
        } else {
          this.showLoginMenu({
            modal: true
          });
        }
      });
      return false;
    });
    c(".account-loadout-link, #btn-customize").click(() => {
      this.loadoutMenu.show();
      this.waitOnLogin(() => {
        if (!this.account.loggedIn) {
          this.showLoginMenu({
            modal: true
          });
        }
      });
      return false;
    });
    c(".account-details-user").click(() => {
      if (this.userSettingsModal.isVisible() || this.loginOptionsModal.isVisible()) {
        this.userSettingsModal.hide();
        this.loginOptionsModal.hide();
      } else {
        this.waitOnLogin(() => {
          if (v.mobile) {
            this.modalMobileAccount.show();
          }
          if (this.account.loggedIn) {
            this.loginOptionsModal.hide();
            this.userSettingsModal.show();
          } else {
            this.showLoginMenu({
              modal: false
            });
          }
        });
      }
      return false;
    });
    c(".btn-account-link").click(() => {
      this.userSettingsModal.hide();
      this.showLoginMenu({
        modal: false,
        link: true
      });
      return false;
    });
    c(".btn-account-change-name").click(() => {
      if (this.account.profile.usernameChangeTime <= 0) {
        this.userSettingsModal.hide();
        this.modalMobileAccount.hide();
        c("#modal-account-name-title").html(this.localization.translate("index-change-account-name"));
        this.setNameModal.show();
      }
      return false;
    });
    c(".btn-account-reset-stats").click(() => {
      this.userSettingsModal.hide();
      this.resetStatsModal.show();
      return false;
    });
    c(".btn-account-delete").click(() => {
      this.userSettingsModal.hide();
      this.deleteAccountModal.show();
      return false;
    });
    c(".btn-account-logout").click(() => {
      this.account.logout();
      return false;
    });
    c("#btn-pass-locked").click(() => {
      this.showLoginMenu({
        modal: true
      });
      return false;
    });
  }
  onError(e, t) {
    let r = {
      server_error: "Operation failed, please try again later.",
      facebook_account_in_use: "Failed linking Facebook account.<br/>Account already in use!",
      google_account_in_use: "Failed linking Google account.<br/>Account already in use!",
      twitch_account_in_use: "Failed linking Twitch account.<br/>Account already in use!",
      discord_account_in_use: "Failed linking Discord account.<br/>Account already in use!",
      account_banned: `Account banned: ${t}`,
      login_failed: "Login failed."
    }[e];
    if (r) {
      this.errorModal.selector.find(".modal-body-text").html(r);
      this.errorModal.show();
    }
  }
  onLogin() {
    this.createAccountModal.hide();
    this.loginOptionsModalMobile.hide();
    this.loginOptionsModal.hide();
    if (!this.account.profile.usernameSet) {
      this.setNameModal.show(true);
    }
  }
  onLoadoutUpdated(e) {
    this.updateUserIcon();
  }
  onItemsUpdated(e) {
    let t = 0;
    let i = 0;
    for (let a = 0; a < e.length; a++) {
      let l = e[a];
      if (l.status < le.ItemStatus.Confirmed) {
        t++;
      }
      if (l.status < le.ItemStatus.Ackd) {
        i++;
      }
    }
    e.filter(a => a.status < le.ItemStatus.Confirmed);
    e.filter(a => a.status < le.ItemStatus.Ackd);
    let r = t > 0 || i > 0;
    c("#loadout-alert-main").css({
      display: r ? "block" : "none"
    });
  }
  waitOnLogin(e) {
    if (this.account.loggingIn && !this.account.loggedIn) {
      let t = () => {
        e();
        this.account.removeEventListener("requestsComplete", t);
      };
      this.account.addEventListener("requestsComplete", t);
    } else {
      e();
    }
  }
  showLoginMenu(e) {
    e = Object.assign({
      modal: false,
      link: false
    }, e);
    let t = e.modal ? this.createAccountModal : v.mobile ? this.loginOptionsModalMobile : this.loginOptionsModal;
    $o(t.selector, e.link, this.account, this.localization);
    t.show();
  }
  updateUserIcon() {
    let e = $.getSvgFromGameType(this.account.loadout.player_icon) || "img/gui/player-gui.svg";
    c(".account-details-user .account-avatar").css("background-image", `url(${e})`);
  }
  render() {
    let e = this.account.requestsInFlight > 0;
    c(".account-loading").css("opacity", e ? 1 : 0);
    let t = $.htmlEscape(this.account.profile.username || "");
    if (!this.account.loggedIn) {
      t = this.account.loggingIn ? `${this.localization.translate("index-logging-in")}...` : this.localization.translate("index-log-in-desc");
    }
    c("#account-player-name").html(t);
    c("#account-player-name").css("display", this.account.loggedIn ? "block" : "none");
    c("#account-login").css("display", this.account.loggedIn ? "none" : "block");
    this.updateUserIcon();
    if (this.account.profile.usernameChangeTime <= 0) {
      c(".btn-account-change-name").removeClass("btn-account-disabled");
    } else {
      c(".btn-account-change-name").addClass("btn-account-disabled");
    }
  }
}
function Ai(u, e) {
  let t = {
    join_full: e.translate("index-team-is-full"),
    join_not_found: e.translate("index-failed-joining-team"),
    create_failed: e.translate("index-failed-creating-team"),
    join_failed: e.translate("index-failed-joining-team"),
    join_game_failed: e.translate("index-failed-joining-game"),
    lost_conn: e.translate("index-lost-connection"),
    find_game_error: e.translate("index-failed-finding-game"),
    find_game_full: e.translate("index-failed-finding-game"),
    find_game_invalid_protocol: e.translate("index-invalid-protocol"),
    kicked: e.translate("index-team-kicked")
  };
  return t[u] || t.lost_conn;
}
class Ko {
  letructor(e, t, i, r, a, l, s) {
    this.config = e;
    this.pingTest = t;
    this.siteInfo = i;
    this.localization = r;
    this.audioManager = a;
    this.joinGameCb = l;
    this.leaveCb = s;
    this.serverSelect.change(() => {
      let m = this.serverSelect.find(":selected").val();
      this.pingTest.start([m]);
      this.setRoomProperty("region", m);
    });
    this.queueMode1.click(() => {
      this.setRoomProperty("gameModeIdx", 1);
    });
    this.queueMode2.click(() => {
      this.setRoomProperty("gameModeIdx", 2);
    });
    this.fillAuto.click(() => {
      this.setRoomProperty("autoFill", true);
    });
    this.fillNone.click(() => {
      this.setRoomProperty("autoFill", false);
    });
    this.playBtn.on("click", () => {
      if (this.config.get("ENV") === "CrazyGames") {
        rt(() => {
          this.tryStartGame();
        });
      } else if (this.config.get("ENV") === "POKI") {
        st(() => {
          this.tryStartGame();
        });
      } else if (this.config.get("ENV") === "GameMonetize") {
        at(() => {
          this.tryStartGame();
        });
      } else {
        this.tryStartGame();
      }
    });
    c("#team-copy-url, #team-desc-text").click(m => {
      let d = c("<div/>", {
        class: "copy-toast",
        html: "Copied!"
      });
      c("#start-menu-wrapper").append(d);
      d.css({
        left: m.pageX - parseInt(d.css("width")) / 2,
        top: c("#team-copy-url").offset().top
      });
      d.animate({
        top: "-=20",
        opacity: 1
      }, {
        queue: false,
        duration: 300,
        complete: function () {
          c(this).fadeOut(250, function () {
            c(this).remove();
          });
        }
      });
      let h = c("#team-url").html();
      if (window !== window.top) {
        h = this.roomData.roomUrl.substring(1);
      }
      $.copyTextToClipboard(h);
    });
    if (window !== window.top) {
      c("#team-desc-text").hide();
    }
    if (!v.mobile) {
      this.hideUrl = false;
      c("#team-hide-url").click(m => {
        let d = m.currentTarget;
        this.hideUrl = !this.hideUrl;
        c("#team-desc-text, #team-code-text").css({
          opacity: this.hideUrl ? 0 : 1
        });
        c(d).css({
          "background-image": this.hideUrl ? "url(../img/gui/hide.svg)" : "url(../img/gui/eye.svg)"
        });
      });
    }
  }
  playBtn = c("#btn-start-team");
  serverWarning = c("#server-warning");
  teamOptions = c("#btn-team-queue-mode-1, #btn-team-queue-mode-2, #btn-team-fill-auto, #btn-team-fill-none");
  serverSelect = c("#team-server-select");
  queueMode1 = c("#btn-team-queue-mode-1");
  queueMode2 = c("#btn-team-queue-mode-2");
  fillAuto = c("#btn-team-fill-auto");
  fillNone = c("#btn-team-fill-none");
  active = false;
  joined = false;
  create = false;
  joiningGame = false;
  ws = null;
  keepAliveTimeout = 0;
  playerData = {};
  roomData = {};
  players = [];
  prevPlayerCount = 0;
  localPlayerId = 0;
  isLeader = true;
  editingName = false;
  displayedInvalidProtocolModal = false;
  hideUrl;
  getPlayerById(e) {
    return this.players.find(t => t.playerId == e);
  }
  update(e) {
    if (this.joined) {
      this.keepAliveTimeout -= e;
      if (this.keepAliveTimeout < 0) {
        this.keepAliveTimeout = 45;
        this.sendMessage("keepAlive", {});
      }
    }
  }
  connect(e, t) {
    if (!this.active || t !== this.roomData.roomUrl) {
      let i = Ue.resolveRoomHost();
      let r = `w${window.location.protocol === "https:" ? "ss" : "s"}://${i}/team_v2`;
      this.active = true;
      this.joined = false;
      this.create = e;
      this.joiningGame = false;
      this.editingName = false;
      this.playerData = {
        name: this.config.get("playerName")
      };
      this.roomData = {
        roomUrl: t,
        region: this.config.get("region"),
        gameModeIdx: this.config.get("gameModeIdx"),
        autoFill: this.config.get("teamAutoFill"),
        findingGame: false,
        lastError: ""
      };
      this.displayedInvalidProtocolModal = false;
      this.refreshUi();
      if (this.ws) {
        this.ws.onclose = function () {};
        this.ws.close();
        this.ws = null;
      }
      try {
        this.ws = new WebSocket(r);
        this.ws.onerror = a => {
          this.ws?.close();
        };
        this.ws.onclose = () => {
          let a = "";
          if (!this.joiningGame) {
            a = this.joined ? "lost_conn" : this.create ? "create_failed" : "join_failed";
          }
          this.leave(a);
        };
        this.ws.onopen = () => {
          if (this.create) {
            if (this.siteInfo.info.captchaEnabled) {
              window.turnstile.render("#start-turnstile-container", {
                sitekey: "0x4AAAAAAAxkDXmFwymMPT0B",
                appearance: "interaction-only",
                callback: a => {
                  this.sendMessage("create", {
                    roomData: this.roomData,
                    playerData: this.playerData,
                    token: a
                  });
                  window.turnstile.remove("#start-turnstile-container");
                }
              });
            } else {
              this.sendMessage("create", {
                roomData: this.roomData,
                playerData: this.playerData
              });
            }
          } else {
            this.sendMessage("join", {
              roomUrl: this.roomData.roomUrl,
              playerData: this.playerData
            });
          }
        };
        this.ws.onmessage = a => {
          if (this.active) {
            let l = JSON.parse(a.data);
            this.onMessage(l.type, l.data);
          }
        };
      } catch {
        this.leave(this.create ? "create_failed" : "join_failed");
      }
    }
  }
  leave(e = "") {
    if (this.active) {
      this.ws?.close();
      this.ws = null;
      this.active = false;
      this.joined = false;
      this.joiningGame = false;
      this.refreshUi();
      this.config.set("gameModeIdx", this.roomData.gameModeIdx);
      this.config.set("teamAutoFill", this.roomData.autoFill);
      if (this.isLeader) {
        this.config.set("region", this.roomData.region);
      }
      let t = "";
      if (e && e != "") {
        t = Ai(e, this.localization);
      }
      this.leaveCb(t);
      if (this.config.get("ENV") === "CrazyGames") {
        window.CrazyGames.SDK.game.hideInviteButton();
      }
    }
  }
  onGameComplete() {
    if (this.active) {
      this.joiningGame = false;
      this.sendMessage("gameComplete");
    }
  }
  onMessage(e, t) {
    switch (e) {
      case "state":
        {
          let i = t;
          this.joined = true;
          let r = this.roomData;
          this.roomData = i.room;
          this.players = i.players;
          this.localPlayerId = i.localPlayerId;
          this.isLeader = this.getPlayerById(this.localPlayerId).isLeader;
          if (this.isLeader) {
            this.roomData.region = r.region;
            this.roomData.autoFill = r.autoFill;
          }
          this.refreshUi();
          if (this.config.get("ENV") === "CrazyGames") {
            window.CrazyGames.SDK.game.showInviteButton({
              roomID: i.room.roomUrl.replace("#", "")
            });
          }
          break;
        }
      case "joinGame":
        this.joiningGame = true;
        this.joinGameCb(t);
        break;
      case "keepAlive":
        break;
      case "kicked":
        this.leave("kicked");
        break;
      case "error":
        this.leave(t.type);
    }
  }
  sendMessage(e, t) {
    if (this.ws) {
      if (this.ws.readyState === this.ws.OPEN) {
        let i = JSON.stringify({
          type: e,
          data: t
        });
        this.ws.send(i);
      } else {
        this.ws.close();
      }
    }
  }
  setRoomProperty(e, t) {
    if (this.isLeader && this.roomData[e] != t) {
      this.roomData[e] = t;
      this.sendMessage("setRoomProps", this.roomData);
    }
  }
  tryStartGame() {
    if (this.isLeader && !this.roomData.findingGame) {
      let e = R.protocolVersion;
      let t = this.roomData.region;
      let i = $.getParameterByName("region");
      if (i !== undefined && i.length > 0) {
        t = i;
      }
      let r = this.pingTest.getZones(t);
      let a = $.getParameterByName("zone");
      if (a !== undefined && a.length > 0) {
        r = [a];
      }
      let l = {
        version: e,
        region: t,
        zones: r
      };
      if (this.siteInfo.info.captchaEnabled) {
        window.turnstile.render("#start-turnstile-container", {
          sitekey: "0x4AAAAAAAxkDXmFwymMPT0B",
          appearance: "interaction-only",
          callback: s => {
            this.sendMessage("playGame", {
              ...l,
              token: s
            });
            window.turnstile.remove("#start-turnstile-container");
            this.roomData.findingGame = true;
            this.refreshUi();
          }
        });
      } else {
        this.sendMessage("playGame", l);
        this.roomData.findingGame = true;
        this.refreshUi();
      }
    }
  }
  refreshUi() {
    let e = function (r, a, l) {
      r.removeClass("btn-darken btn-disabled btn-opaque btn-hollow-selected");
      if (l) {
        r.addClass("btn-darken");
      } else {
        r.addClass("btn-disabled");
        if (!a) {
          r.addClass("btn-opaque");
        }
      }
      if (a) {
        r.addClass("btn-hollow-selected");
      }
      r.prop("disabled", !l);
    };
    c("#team-menu").css("display", this.active ? "block" : "none");
    c("#start-menu").css("display", this.active ? "none" : "block");
    c("#right-column").css("display", this.active ? "none" : "block");
    c("#social-share-block").css("display", this.active ? "none" : "block");
    let t = this.roomData.lastError != "";
    let i = Ai(this.roomData.lastError, this.localization);
    this.serverWarning.css("opacity", t ? 1 : 0);
    this.serverWarning.html(i);
    if (this.roomData.lastError == "find_game_invalid_protocol" && !this.displayedInvalidProtocolModal) {
      c("#modal-refresh").fadeIn(200);
      this.displayedInvalidProtocolModal = true;
    }
    if (this.active) {
      c("#team-menu-joining-text").css("display", this.create ? "none" : "block");
      c("#team-menu-creating-text").css("display", this.create ? "block" : "none");
      c("#team-menu-connecting").css("display", this.joined ? "none" : "block");
      c("#team-menu-contents").css("display", this.joined ? "block" : "none");
      c("#btn-team-leave").css("display", this.joined ? "block" : "none");
    }
    if (this.joined) {
      let r = this.siteInfo.info.pops || {};
      let a = Object.keys(r);
      for (let f = 0; f < a.length; f++) {
        let S = a[f];
        let x = r[S].playerCount;
        let y = this.localization.translate("index-players");
        let C = c("#team-server-opts").children(`option[value="${S}"]`);
        C.html(`${C.attr("data-label")} [${x} ${y}]`);
      }
      this.serverSelect.find("option").each((f, S) => {
        S.selected = S.value == this.roomData.region;
      });
      e(this.queueMode1, this.roomData.gameModeIdx == 1, this.isLeader && this.roomData.enabledGameModeIdxs.includes(1));
      e(this.queueMode2, this.roomData.gameModeIdx == 2, this.isLeader && this.roomData.enabledGameModeIdxs.includes(2));
      e(this.fillAuto, this.roomData.autoFill, this.isLeader);
      e(this.fillNone, !this.roomData.autoFill, this.isLeader);
      this.serverSelect.prop("disabled", !this.isLeader);
      if (this.roomData.roomUrl) {
        let f = this.roomData.roomUrl.substring(1);
        if (this.config.get("ENV") === "CrazyGames") {
          let S = window.CrazyGames.SDK.game.inviteLink({
            roomID: f
          });
          c("#team-url").html(S);
        } else {
          let S = `${window.location.href.replace(window.location.hash, "")}${this.roomData.roomUrl}`;
          c("#team-url").html(S);
          if (window.history) {
            window.history.replaceState("", "", this.roomData.roomUrl);
          }
        }
        c("#team-code").html(f);
      }
      this.playBtn.html(this.roomData.findingGame || this.joiningGame ? "<div class=\"ui-spinner\"></div>" : this.playBtn.attr("data-label"));
      let l = this.siteInfo.getGameModeStyles();
      for (let f = 0; f < l.length; f++) {
        this.playBtn.removeClass(l[f].buttonCss);
      }
      let s = l[this.roomData.gameModeIdx];
      if (s) {
        this.playBtn.addClass("btn-custom-mode-no-indent");
        this.playBtn.addClass(s.buttonCss);
        this.playBtn.css({
          "background-image": `url(${s.icon})`
        });
      } else {
        this.playBtn.css({
          "background-image": ""
        });
      }
      let m = false;
      for (let f = 0; f < this.players.length; f++) {
        m = m || this.players[f].inGame;
      }
      let d = c("#msg-wait-reason");
      if (this.isLeader) {
        d.html(`${this.localization.translate("index-game-in-progress")}<span> ...</span>`);
        let f = m && !this.joiningGame;
        d.css("display", f ? "block" : "none");
        this.playBtn.css("display", f ? "none" : "block");
      } else {
        if (this.roomData.findingGame || this.joiningGame) {
          d.html(`<div class="ui-spinner" style="margin-right:16px"></div>${this.localization.translate("index-joining-game")}<span> ...</span>`);
        } else if (m) {
          d.html(`${this.localization.translate("index-game-in-progress")}<span> ...</span>`);
        } else {
          d.html(`${this.localization.translate("index-waiting-for-leader")}<span> ...</span>`);
        }
        d.css("display", "block");
        this.playBtn.css("display", "none");
      }
      let h = c("#team-menu-member-list");
      h.empty();
      for (let f = 0; f < this.roomData.maxPlayers; f++) {
        let S = {
          name: "",
          playerId: 0,
          isLeader: false,
          inGame: false,
          self: false
        };
        if (f < this.players.length) {
          let k = this.players[f];
          S = {
            name: k.name,
            playerId: k.playerId,
            isLeader: k.isLeader,
            inGame: k.inGame,
            self: k.playerId == this.localPlayerId
          };
        }
        let x = c("<div/>", {
          class: "team-menu-member"
        });
        let y = "";
        if (S.isLeader) {
          y = " icon-leader";
        } else if (this.isLeader && S.playerId != 0) {
          y = " icon-kick";
        }
        x.append(c("<div/>", {
          class: `icon${y}`,
          "data-playerid": S.playerId
        }));
        let C = null;
        let P = null;
        if (this.editingName && S.self) {
          C = c("<input/>", {
            type: "text",
            tabindex: 0,
            class: "name menu-option name-text name-self-input",
            maxLength: He.PlayerNameMaxLen
          });
          C.val(S.name);
          let k = () => {
            let M = $.sanitizeNameInput(C?.val());
            S.name = M;
            this.config.set("playerName", M);
            this.sendMessage("changeName", {
              name: M
            });
            this.editingName = false;
            this.refreshUi();
          };
          let b = () => {
            this.editingName = false;
            this.refreshUi();
          };
          C.keypress(M => {
            if (M.which === 13) {
              k();
              return false;
            }
          });
          C.on("blur", b);
          x.append(C);
          P = c("<div/>", {
            class: "icon icon-submit-name-change"
          });
          P.on("click", k);
          P.on("mousedown", M => {
            M.preventDefault();
            M.stopPropagation();
          });
        } else {
          let k = "name-text";
          if (S.self) {
            k += " name-self";
          }
          if (S.inGame) {
            k += " name-in-game";
          }
          let b = c("<div/>", {
            class: `name menu-option ${k}`,
            html: $.htmlEscape(S.name)
          });
          if (S.self) {
            b.on("click", () => {
              this.editingName = true;
              this.refreshUi();
            });
          }
          x.append(b);
        }
        if (P) {
          x.append(P);
        } else {
          x.append(c("<div/>", {
            class: `icon ${S.inGame ? "icon-in-game" : ""}`
          }));
        }
        h.append(x);
        C?.focus();
      }
      c(".icon-kick", h).click(f => {
        let S = Number(c(f.currentTarget).attr("data-playerid"));
        this.sendMessage("kick", {
          playerId: S
        });
      });
      let p = this.players.find(f => f.playerId == this.localPlayerId);
      let w = p && !p.inGame;
      if (!document.hasFocus() && this.prevPlayerCount < this.players.length && this.players.length > 1 && w) {
        this.audioManager.playSound("notification_join_01", {
          channel: "ui"
        });
      }
      this.prevPlayerCount = this.players.length;
    }
  }
}
class Qo {
  nameInput = c("#player-name-input-solo");
  serverSelect = c("#server-select-main");
  playMode0Btn = c("#btn-start-mode-0");
  playMode1Btn = c("#btn-start-mode-1");
  playMode2Btn = c("#btn-start-mode-2");
  muteBtns = c(".btn-sound-toggle");
  aimLineBtn = c("#btn-game-aim-line");
  masterSliders = c(".sl-master-volume");
  soundSliders = c(".sl-sound-volume");
  musicSliders = c(".sl-music-volume");
  serverWarning = c("#server-warning");
  languageSelect = c(".language-select");
  startMenuWrapper = c("#start-menu-wrapper");
  gameAreaWrapper = c("#game-area-wrapper");
  playButtons = c(".play-button-container");
  playLoading = c(".play-loading-outer");
  errorModal = new de(c("#modal-notification"));
  refreshModal = new de(c("#modal-refresh"));
  config = new oa();
  localization = new Zo();
  account;
  loadoutMenu;
  pass;
  profileUi;
  pingTest = new Ls();
  audioManager = new aa();
  ambience = new Jr();
  siteInfo;
  teamMenu;
  pixi = null;
  resourceManager = null;
  input = null;
  inputBinds = null;
  inputBindUi = null;
  game = null;
  loadoutDisplay = null;
  domContentLoaded = false;
  configLoaded = false;
  initialized = false;
  active = false;
  sessionId = $.random64();
  contextListener = function (e) {
    e.preventDefault();
  };
  errorMessage = "";
  quickPlayPendingModeIdx = -1;
  findGameAttempts = 0;
  findGameTime = 0;
  pauseTime = 0;
  wasPlayingVideo = false;
  checkedPingTest = false;
  hasFocus = true;
  newsDisplayed = true;
  respawns = [];
  letructor() {
    this.account = new $r(this.config);
    this.loadoutMenu = new po(this.account, this.localization);
    this.pass = new Uo(this.account, this.loadoutMenu, this.localization);
    this.profileUi = new Jo(this.account, this.localization, this.loadoutMenu, this.errorModal);
    this.siteInfo = new no(this.config, this.localization);
    this.teamMenu = new Ko(this.config, this.pingTest, this.siteInfo, this.localization, this.audioManager, this.onTeamMenuJoinGame.bind(this), this.onTeamMenuLeave.bind(this));
    let e = () => {
      this.config.load(() => {
        this.configLoaded = true;
        this.tryLoad();
      });
    };
    this.loadBrowserDeps(e);
  }
  loadBrowserDeps(e) {
    e();
  }
  tryLoad() {
    if (this.domContentLoaded && this.configLoaded && !this.initialized) {
      this.initialized = true;
      if (v.mobile) {
        zt.applyMobileBrowserStyling(v.tablet);
      }
      let e = this.config.get("language") || this.localization.detectLocale();
      this.config.set("language", e);
      this.localization.setLocale(e);
      this.localization.populateLanguageSelect();
      this.startPingTest();
      this.siteInfo.load();
      this.localization.localizeIndex();
      this.account.init();
      this.nameInput.maxLength = He.PlayerNameMaxLen;
      this.playMode0Btn.on("click", () => {
        if (this.config.get("ENV") === "CrazyGames") {
          rt(() => {
            this.tryQuickStartGame(0);
          });
        } else if (this.config.get("ENV") === "POKI" && this.respawns.length > 0) {
          st(() => {
            this.tryQuickStartGame(0);
          });
        } else if (this.config.get("ENV") === "GameMonetize") {
          at(() => {
            this.tryQuickStartGame(0);
          });
        } else {
          this.tryQuickStartGame(0);
        }
      });
      this.playMode1Btn.on("click", () => {
        if (this.config.get("ENV") === "CrazyGames") {
          rt(() => {
            this.tryQuickStartGame(1);
          });
        } else if (this.config.get("ENV") === "POKI" && this.respawns.length > 0) {
          st(() => {
            this.tryQuickStartGame(1);
          });
        } else if (this.config.get("ENV") === "GameMonetize") {
          at(() => {
            this.tryQuickStartGame(1);
          });
        } else {
          this.tryQuickStartGame(1);
        }
      });
      this.playMode2Btn.on("click", () => {
        if (this.config.get("ENV") === "CrazyGames") {
          rt(() => {
            this.tryQuickStartGame(2);
          });
        } else if (this.config.get("ENV") === "POKI" && this.respawns.length > 0) {
          st(() => {
            this.tryQuickStartGame(2);
          });
        } else if (this.config.get("ENV") === "GameMonetize" && this.respawns.length > 0) {
          at(() => {
            this.tryQuickStartGame(2);
          });
        } else {
          this.tryQuickStartGame(2);
        }
      });
      this.serverSelect.change(() => {
        let p = this.serverSelect.find(":selected").val();
        this.config.set("region", p);
      });
      this.nameInput.on("blur", p => {
        this.setConfigFromDOM();
      });
      this.muteBtns.on("click", p => {
        this.config.set("muteAudio", !this.config.get("muteAudio"));
      });
      this.muteBtns.on("mousedown", p => {
        p.stopPropagation();
      });
      c(this.masterSliders).on("mousedown", p => {
        p.stopPropagation();
      });
      c(this.soundSliders).on("mousedown", p => {
        p.stopPropagation();
      });
      c(this.musicSliders).on("mousedown", p => {
        p.stopPropagation();
      });
      this.masterSliders.on("input", p => {
        let w = Number(c(p.target).val()) / 100;
        this.audioManager.setMasterVolume(w);
        this.config.set("masterVolume", w);
      });
      this.soundSliders.on("input", p => {
        let w = Number(c(p.target).val()) / 100;
        this.audioManager.setSoundVolume(w);
        this.config.set("soundVolume", w);
      });
      this.musicSliders.on("input", p => {
        let w = Number(c(p.target).val()) / 100;
        this.audioManager.setMusicVolume(w);
        this.config.set("musicVolume", w);
      });
      c(".modal-settings-item").children("input").each((p, w) => {
        let f = c(w);
        f.prop("checked", this.config.get(f.prop("id")));
      });
      c(".modal-settings-item > input:checkbox").change(p => {
        let w = c(p.target);
        this.config.set(w.prop("id"), w.is(":checked"));
      });
      c(".btn-fullscreen-toggle").on("click", () => {
        $.toggleFullScreen();
      });
      this.languageSelect.on("change", p => {
        let w = p.target.value;
        if (w) {
          this.config.set("language", w);
        }
      });
      c("#btn-create-team").on("click", () => {
        this.tryJoinTeam(true);
      });
      c("#btn-team-mobile-link-join").on("click", () => {
        let p = c("#team-link-input").val()?.trim();
        let w = p.indexOf("#");
        if (w >= 0) {
          p = p.slice(w + 1);
        }
        if (p.length > 0) {
          c("#team-mobile-link").css("display", "none");
          this.tryJoinTeam(false, p);
        } else {
          c("#team-mobile-link-desc").css("display", "none");
          c("#team-mobile-link-warning").css("display", "none").fadeIn(100);
        }
      });
      c("#btn-team-leave").on("click", () => {
        if (window.history) {
          window.history.replaceState("", "", "/");
        }
        c("#news-block").css("display", "block");
        this.game?.free();
        this.teamMenu.leave();
      });
      let t = c("#news-current").data("date");
      let i = new Date(t).getTime();
      c(".right-column-toggle").on("click", () => {
        if (this.newsDisplayed) {
          c("#news-wrapper").fadeOut(250);
          c("#pass-wrapper").fadeIn(250);
        } else {
          this.config.set("lastNewsTimestamp", i);
          c(".news-toggle").find(".account-alert").css("display", "none");
          c("#news-wrapper").fadeIn(250);
          c("#pass-wrapper").fadeOut(250);
        }
        this.newsDisplayed = !this.newsDisplayed;
      });
      let r = this.config.get("lastNewsTimestamp");
      if (i > r) {
        c(".news-toggle").find(".account-alert").css("display", "block");
      }
      this.setDOMFromConfig();
      this.setAppActive(true);
      let a = document.querySelector("#cvs");
      let l = window.devicePixelRatio > 1 ? 2 : 1;
      if (v.os == "ios") {
        gr.PRECISION_FRAGMENT = wr.HIGH;
      }
      let s = p => new Sr({
        width: window.innerWidth,
        height: window.innerHeight,
        view: a,
        antialias: false,
        resolution: l,
        hello: true,
        forceCanvas: p
      });
      let m = null;
      try {
        m = s(false);
      } catch {
        m = s(true);
      }
      this.pixi = m;
      this.pixi.renderer.events.destroy();
      this.pixi.ticker.add(this.update, this);
      this.pixi.renderer.background.color = 7378501;
      this.resourceManager = new mo(this.pixi.renderer, this.audioManager, this.config);
      this.resourceManager.loadMapAssets("main");
      this.input = new Ia(document.getElementById("game-touch-area"));
      this.inputBinds = new Cs(this.input, this.config);
      this.inputBindUi = new Ds(this.input, this.inputBinds);
      let d = () => {
        this.loadoutDisplay.free();
        this.game.init();
        this.onResize();
        this.findGameAttempts = 0;
        this.ambience.onGameStart();
      };
      let h = p => {
        if (this.game.gxunU) {
          this.pass.scheduleUpdatePass(this.game.jRakkk);
        }
        this.game.free();
        this.errorMessage = this.localization.translate(p || "");
        this.teamMenu.onGameComplete();
        this.ambience.onGameComplete(this.audioManager);
        this.setAppActive(true);
        this.setPlayLockout(false);
        if (p == "index-invalid-protocol") {
          this.showInvalidProtocolModal();
        }
        if (this.config.get("ENV") === "CrazyGames") {
          window.CrazyGames.SDK.game.gameplayStop();
        } else if (this.config.get("ENV") === "POKI") {
          window.PokiSDK.gameplayStop();
        }
      };
      this.game = new Ts(this.pixi, this.audioManager, this.localization, this.config, this.input, this.inputBinds, this.inputBindUi, this.ambience, this.resourceManager, this.respawns, d, h);
      this.loadoutDisplay = new Go(this.pixi, this.audioManager, this.config, this.inputBinds, this.account);
      this.loadoutMenu.loadoutDisplay = this.loadoutDisplay;
      this.onResize();
      this.tryJoinTeam(this.config.get("ENV") === "CrazyGames" && window.CrazyGames.SDK.game.isInstantJoin);
      zt.setupModals(this.inputBinds, this.inputBindUi);
      this.onConfigModified();
      this.config.addModifiedListener(this.onConfigModified.bind(this));
      Ms();
    }
  }
  onUnload() {
    this.teamMenu.leave();
  }
  onResize() {
    v.onResize();
    zt.onResize();
    this.loadoutMenu.onResize();
    this.pixi?.renderer.resize(v.screenWidth, v.screenHeight);
    if (this.game?.initialized) {
      this.game.resize();
    }
    if (this.loadoutDisplay?.initialized) {
      this.loadoutDisplay.resize();
    }
    this.refreshUi();
  }
  startPingTest() {
    let e = this.config.get("regionSelected") ? [this.config.get("region")] : this.pingTest.getRegionList();
    this.pingTest.start(e);
  }
  setAppActive(e) {
    this.active = e;
    this.quickPlayPendingModeIdx = -1;
    this.refreshUi();
    if (e) {
      this.errorModal.hide();
    }
  }
  setPlayLockout(e) {
    let t = e ? 0 : 1000;
    this.playButtons.stop().delay(t).animate({
      opacity: e ? 0.5 : 1
    }, 250);
    this.playLoading.stop().delay(t).animate({
      opacity: e ? 1 : 0
    }, {
      duration: 250,
      start: () => {
        this.playLoading.css({
          "pointer-events": e ? "initial" : "none"
        });
      }
    });
  }
  onTeamMenuJoinGame(e) {
    this.waitOnAccount(() => {
      this.joinGame(e);
    });
  }
  onTeamMenuLeave(e = "") {
    if (e && e != "" && window.history) {
      window.history.replaceState("", "", "/");
    }
    this.errorMessage = e;
    this.setDOMFromConfig();
    this.refreshUi();
  }
  setConfigFromDOM() {
    let e = $.sanitizeNameInput(this.nameInput.val());
    this.config.set("playerName", e);
    let t = this.serverSelect.find(":selected").val();
    this.config.set("region", t);
  }
  async setDOMFromConfig() {
    if (!this.config.get("playerName") && this.config.get("ENV") === "CrazyGames" && window.CrazyGames.SDK.user.isUserAccountAvailable) {
      let e = await window.CrazyGames.SDK.user.getUser();
      if (e) {
        let t = e.username;
        this.config.set("playerName", t);
      }
    }
    this.nameInput.val(this.config.get("playerName"));
    this.serverSelect.find("option").each((e, t) => {
      t.selected = t.value == this.config.get("region");
    });
    this.languageSelect.val(this.config.get("language"));
  }
  onConfigModified(e) {
    let t = this.config.get("muteAudio");
    if (t != this.audioManager.mute) {
      this.muteBtns.removeClass(t ? "audio-on-icon" : "audio-off-icon");
      this.muteBtns.addClass(t ? "audio-off-icon" : "audio-on-icon");
      this.audioManager.setMute(t);
    }
    let i = this.config.get("masterVolume");
    this.masterSliders.val(i * 100);
    this.audioManager.setMasterVolume(i);
    let r = this.config.get("soundVolume");
    this.soundSliders.val(r * 100);
    this.audioManager.setSoundVolume(r);
    let a = this.config.get("musicVolume");
    this.musicSliders.val(a * 100);
    this.audioManager.setMusicVolume(a);
    if (e == "language") {
      let l = this.config.get("language");
      this.localization.setLocale(l);
    }
    if (e == "region") {
      this.config.set("regionSelected", true);
      this.startPingTest();
    }
    if (e == "highResTex") {
      location.reload();
    }
  }
  refreshUi() {
    this.startMenuWrapper.css("display", this.active ? "flex" : "none");
    this.gameAreaWrapper.css({
      display: this.active ? "none" : "block",
      opacity: this.active ? 0 : 1
    });
    if (this.active) {
      c("body").removeClass("user-select-none");
      document.removeEventListener("contextmenu", this.contextListener);
    } else {
      c("body").addClass("user-select-none");
      c("#start-main").stop(true);
      document.addEventListener("contextmenu", this.contextListener);
    }
    c("#ad-block-left").css("display", !v.isLandscape && this.teamMenu.active ? "none" : "block");
    let e = this.active && this.errorMessage != "";
    this.serverWarning.css({
      display: "block",
      opacity: e ? 1 : 0
    });
    this.serverWarning.html(this.errorMessage);
    let t = (i, r) => {
      i.html(this.quickPlayPendingModeIdx === r ? "<div class=\"ui-spinner\"></div>" : this.localization.translate(i.data("l10n")));
    };
    t(this.playMode0Btn, 0);
    t(this.playMode1Btn, 1);
    t(this.playMode2Btn, 2);
  }
  waitOnAccount(e) {
    if (this.account.requestsInFlight == 0) {
      e();
    } else {
      let t = setTimeout(() => {
        i();
      }, 2500);
      let i = () => {
        e();
        clearTimeout(t);
        this.account.removeEventListener("requestsComplete", i);
      };
      this.account.addEventListener("requestsComplete", i);
    }
  }
  tryJoinTeam(e, t) {
    if (this.active && this.quickPlayPendingModeIdx === -1) {
      let i = t || window.location.hash.slice(1);
      if (this.config.get("ENV") === "CrazyGames") {
        let r = window.CrazyGames.SDK.game.getInviteParam("roomID");
        if (r) {
          i = r;
          e = false;
        }
      }
      if (e || i != "") {
        this.setConfigFromDOM();
        this.teamMenu.connect(e, i);
        this.refreshUi();
        return true;
      }
    }
    return false;
  }
  tryQuickStartGame(e) {
    if (this.quickPlayPendingModeIdx === -1) {
      this.errorMessage = "";
      this.quickPlayPendingModeIdx = e;
      this.setConfigFromDOM();
      this.refreshUi();
      let t = 0;
      if (this.findGameAttempts > 0 && Date.now() - this.findGameTime < 30000) {
        t = Math.min(this.findGameAttempts * 2.5 * 1000, 7500);
      } else {
        this.findGameAttempts = 0;
      }
      this.findGameTime = Date.now();
      this.findGameAttempts++;
      let i = R.protocolVersion;
      let r = this.config.get("region");
      let a = $.getParameterByName("region");
      if (a !== undefined && a.length > 0) {
        r = a;
      }
      let l = this.pingTest.getZones(r);
      let s = $.getParameterByName("zone");
      if (s !== undefined && s.length > 0) {
        l = [s];
      }
      let m = {
        version: i,
        region: r,
        zones: l,
        playerCount: 1,
        autoFill: true,
        gameModeIdx: e
      };
      let d = () => {
        this.waitOnAccount(() => {
          this.findGame(m, (h, p) => {
            if (h) {
              this.onJoinGameError(h);
              return;
            }
            this.joinGame(p);
          });
        });
      };
      if (t == 0) {
        d();
      } else {
        setTimeout(() => {
          d();
        }, t);
      }
    }
  }
  findGame(e, t) {
    let i = (r, a) => {
      if (r >= a) {
        t("full");
        return;
      }
      let l = function () {
        setTimeout(() => {
          i(r + 1, a);
        }, 500);
      };
      function s(m) {
        c.ajax({
          type: "POST",
          url: Ue.resolveUrl("/api/find_game"),
          data: JSON.stringify({
            ...e,
            token: m
          }),
          contentType: "application/json; charset=utf-8",
          timeout: 10000,
          success: function (d) {
            if (d?.err && d.err != "full") {
              t(d.err);
              return;
            }
            let h = d?.res ? d.res[0] : null;
            if (h?.hosts && h.addrs) {
              t(null, h);
            } else {
              l();
            }
          },
          error: function (d) {
            l();
          }
        });
      }
      if (this.siteInfo.info.captchaEnabled) {
        window.turnstile.render("#start-turnstile-container", {
          sitekey: "0x4AAAAAAAxkDXmFwymMPT0B",
          appearance: "interaction-only",
          callback: m => {
            s(m);
            window.turnstile.remove("#start-turnstile-container");
          }
        });
      } else {
        s("");
      }
    };
    i(0, 2);
  }
  joinGame(e) {
    if (!this.game) {
      setTimeout(() => {
        this.joinGame(e);
      }, 250);
      return;
    }
    let t = e.hosts || [];
    let i = [];
    for (let a = 0; a < t.length; a++) {
      i.push(`ws${e.useHttps ? "s" : ""}://${t[a]}/play?gameId=${e.gameId}`);
    }
    let r = (a, l) => {
      let s = a.shift();
      if (!s) {
        this.onJoinGameError("join_game_failed");
        return;
      }
      let m = function () {
        r(a, l);
      };
      this.game.tryJoinGame(s, l.data, this.account.loadoutPriv, this.account.questPriv, m);
    };
    r(i, e);
  }
  onJoinGameError(e) {
    let t = {
      full: this.localization.translate("index-failed-finding-game"),
      invalid_protocol: this.localization.translate("index-invalid-protocol"),
      join_game_failed: this.localization.translate("index-failed-joining-game")
    };
    if (e == "invalid_protocol") {
      this.showInvalidProtocolModal();
    }
    this.errorMessage = t[e] || t.full;
    this.quickPlayPendingModeIdx = -1;
    this.teamMenu.leave("join_game_failed");
    this.refreshUi();
  }
  showInvalidProtocolModal() {
    this.refreshModal.show(true);
  }
  update() {
    let e = z.clamp(this.pixi.ticker.elapsedMS / 1000, 0.001, 0.125);
    this.pingTest.update(e);
    if (!this.checkedPingTest && this.pingTest.isComplete()) {
      if (!this.config.get("regionSelected")) {
        let t = this.pingTest.getRegion();
        if (t) {
          this.config.set("region", t);
          this.setDOMFromConfig();
        }
      }
      this.checkedPingTest = true;
    }
    this.resourceManager.update(e);
    this.audioManager.update(e);
    this.ambience.update(e, this.audioManager, !this.active);
    this.teamMenu.update(e);
    if (this.game?.initialized && this.game.DjCbXw) {
      if (this.active) {
        this.setAppActive(false);
        this.setPlayLockout(true);
      }
      this.game.update(e);
    }
    if (this.active && this.loadoutDisplay && this.game && !this.game.initialized) {
      if (this.loadoutMenu.active) {
        if (!this.loadoutDisplay.initialized) {
          this.loadoutDisplay.init();
        }
        this.loadoutDisplay.show();
        this.loadoutDisplay.update(e, this.hasFocus);
      } else {
        this.loadoutDisplay.hide();
      }
    }
    if (!this.active && this.loadoutMenu.active) {
      this.loadoutMenu.hide();
    }
    if (this.active) {
      this.pass?.update(e);
    }
    this.input.flush();
  }
}
let ze = new Qo();
function cr() {
  ze.domContentLoaded = true;
  ze.tryLoad();
}
document.addEventListener("DOMContentLoaded", cr);
window.addEventListener("load", cr);
window.addEventListener("unload", u => {
  ze.onUnload();
});
if (window.location.hash == "#_=_") {
  window.location.hash = "";
  history.pushState("", document.title, window.location.pathname);
}
window.addEventListener("resize", () => {
  ze.onResize();
});
window.addEventListener("orientationchange", () => {
  ze.onResize();
});
window.addEventListener("hashchange", () => {
  ze.tryJoinTeam(false);
});
window.addEventListener("beforeunload", u => {
  if (ze.game?.warnPageReload()) {
    let e = "Do you want to reload the game?";
    u.returnValue = e;
    return e;
  }
});
window.addEventListener("onfocus", () => {
  ze.hasFocus = true;
});
window.addEventListener("onblur", () => {
  ze.hasFocus = false;
});
let Ei = [];
window.onerror = function (u, e, t, i, r) {
  u = u || "undefined_error_msg";
  let a = r ? r.stack : "";
  let l = {
    msg: u,
    id: ze.sessionId,
    url: e,
    line: t,
    column: i,
    stacktrace: a,
    browser: navigator.userAgent,
    protocol: R.protocolVersion,
    clientGitVersion: "6fdc91d0eba7549bd7215c0e86e5e8a3fa9b44f3",
    serverGitVersion: ze.siteInfo.info.gitRevision
  };
  let s = JSON.stringify(l);
  if (!Ei.includes(s)) {
    Ei.push(s);
    console.error("windowOnError", s);
  }
};
navigator.serviceWorker?.getRegistrations().then(u => {
  for (let e of u) {
    e.unregister();
  }
});
})();
